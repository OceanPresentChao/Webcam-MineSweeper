var Ek=Object.defineProperty;var Rk=(t,e,n)=>e in t?Ek(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var Lt=(t,e,n)=>(Rk(t,typeof e!="symbol"?e+"":e,n),n);function Dk(t,e){return e.forEach(function(n){n&&typeof n!="string"&&!Array.isArray(n)&&Object.keys(n).forEach(function(s){if(s!=="default"&&!(s in t)){var o=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:function(){return n[s]}})}})}),Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}const Ak=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}};Ak();function Uf(t,e){const n=Object.create(null),s=t.split(",");for(let o=0;o<s.length;o++)n[s[o]]=!0;return e?o=>!!n[o.toLowerCase()]:o=>!!n[o]}const Fk="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",_k=Uf(Fk);function W0(t){return!!t||t===""}function Gf(t){if(Le(t)){const e={};for(let n=0;n<t.length;n++){const s=t[n],o=Vt(s)?Lk(s):Gf(s);if(o)for(const r in o)e[r]=o[r]}return e}else{if(Vt(t))return t;if(gt(t))return t}}const Ok=/;(?![^(]*\))/g,Mk=/:(.+)/;function Lk(t){const e={};return t.split(Ok).forEach(n=>{if(n){const s=n.split(Mk);s.length>1&&(e[s[0].trim()]=s[1].trim())}}),e}function ya(t){let e="";if(Vt(t))e=t;else if(Le(t))for(let n=0;n<t.length;n++){const s=ya(t[n]);s&&(e+=s+" ")}else if(gt(t))for(const n in t)t[n]&&(e+=n+" ");return e.trim()}const Ns=t=>Vt(t)?t:t==null?"":Le(t)||gt(t)&&(t.toString===H0||!Be(t.toString))?JSON.stringify(t,V0,2):String(t),V0=(t,e)=>e&&e.__v_isRef?V0(t,e.value):Hr(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((n,[s,o])=>(n[`${s} =>`]=o,n),{})}:U0(e)?{[`Set(${e.size})`]:[...e.values()]}:gt(e)&&!Le(e)&&!j0(e)?String(e):e,st={},Gr=[],fs=()=>{},Pk=()=>!1,Bk=/^on[^a-z]/,lu=t=>Bk.test(t),Hf=t=>t.startsWith("onUpdate:"),mn=Object.assign,jf=(t,e)=>{const n=t.indexOf(e);n>-1&&t.splice(n,1)},zk=Object.prototype.hasOwnProperty,je=(t,e)=>zk.call(t,e),Le=Array.isArray,Hr=t=>cu(t)==="[object Map]",U0=t=>cu(t)==="[object Set]",Be=t=>typeof t=="function",Vt=t=>typeof t=="string",Kf=t=>typeof t=="symbol",gt=t=>t!==null&&typeof t=="object",G0=t=>gt(t)&&Be(t.then)&&Be(t.catch),H0=Object.prototype.toString,cu=t=>H0.call(t),Wk=t=>cu(t).slice(8,-1),j0=t=>cu(t)==="[object Object]",qf=t=>Vt(t)&&t!=="NaN"&&t[0]!=="-"&&""+parseInt(t,10)===t,fc=Uf(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),uu=t=>{const e=Object.create(null);return n=>e[n]||(e[n]=t(n))},Vk=/-(\w)/g,zs=uu(t=>t.replace(Vk,(e,n)=>n?n.toUpperCase():"")),Uk=/\B([A-Z])/g,bi=uu(t=>t.replace(Uk,"-$1").toLowerCase()),hu=uu(t=>t.charAt(0).toUpperCase()+t.slice(1)),nd=uu(t=>t?`on${hu(t)}`:""),na=(t,e)=>!Object.is(t,e),pc=(t,e)=>{for(let n=0;n<t.length;n++)t[n](e)},$c=(t,e,n)=>{Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:n})},Dd=t=>{const e=parseFloat(t);return isNaN(e)?t:e};let px;const Gk=()=>px||(px=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let Dn;class Hk{constructor(e=!1){this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Dn,!e&&Dn&&(this.index=(Dn.scopes||(Dn.scopes=[])).push(this)-1)}run(e){if(this.active){const n=Dn;try{return Dn=this,e()}finally{Dn=n}}}on(){Dn=this}off(){Dn=this.parent}stop(e){if(this.active){let n,s;for(n=0,s=this.effects.length;n<s;n++)this.effects[n].stop();for(n=0,s=this.cleanups.length;n<s;n++)this.cleanups[n]();if(this.scopes)for(n=0,s=this.scopes.length;n<s;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this.active=!1}}}function jk(t,e=Dn){e&&e.active&&e.effects.push(t)}function Kk(){return Dn}function qk(t){Dn&&Dn.cleanups.push(t)}const Xf=t=>{const e=new Set(t);return e.w=0,e.n=0,e},K0=t=>(t.w&xo)>0,q0=t=>(t.n&xo)>0,Xk=({deps:t})=>{if(t.length)for(let e=0;e<t.length;e++)t[e].w|=xo},Yk=t=>{const{deps:e}=t;if(e.length){let n=0;for(let s=0;s<e.length;s++){const o=e[s];K0(o)&&!q0(o)?o.delete(t):e[n++]=o,o.w&=~xo,o.n&=~xo}e.length=n}},Ad=new WeakMap;let Vi=0,xo=1;const Fd=30;let us;const nr=Symbol(""),_d=Symbol("");class Yf{constructor(e,n=null,s){this.fn=e,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,jk(this,s)}run(){if(!this.active)return this.fn();let e=us,n=co;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=us,us=this,co=!0,xo=1<<++Vi,Vi<=Fd?Xk(this):mx(this),this.fn()}finally{Vi<=Fd&&Yk(this),xo=1<<--Vi,us=this.parent,co=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){us===this?this.deferStop=!0:this.active&&(mx(this),this.onStop&&this.onStop(),this.active=!1)}}function mx(t){const{deps:e}=t;if(e.length){for(let n=0;n<e.length;n++)e[n].delete(t);e.length=0}}let co=!0;const X0=[];function yi(){X0.push(co),co=!1}function wi(){const t=X0.pop();co=t===void 0?!0:t}function Ln(t,e,n){if(co&&us){let s=Ad.get(t);s||Ad.set(t,s=new Map);let o=s.get(n);o||s.set(n,o=Xf()),Y0(o)}}function Y0(t,e){let n=!1;Vi<=Fd?q0(t)||(t.n|=xo,n=!K0(t)):n=!t.has(us),n&&(t.add(us),us.deps.push(t))}function Xs(t,e,n,s,o,r){const i=Ad.get(t);if(!i)return;let a=[];if(e==="clear")a=[...i.values()];else if(n==="length"&&Le(t))i.forEach((l,c)=>{(c==="length"||c>=s)&&a.push(l)});else switch(n!==void 0&&a.push(i.get(n)),e){case"add":Le(t)?qf(n)&&a.push(i.get("length")):(a.push(i.get(nr)),Hr(t)&&a.push(i.get(_d)));break;case"delete":Le(t)||(a.push(i.get(nr)),Hr(t)&&a.push(i.get(_d)));break;case"set":Hr(t)&&a.push(i.get(nr));break}if(a.length===1)a[0]&&Od(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);Od(Xf(l))}}function Od(t,e){const n=Le(t)?t:[...t];for(const s of n)s.computed&&gx(s);for(const s of n)s.computed||gx(s)}function gx(t,e){(t!==us||t.allowRecurse)&&(t.scheduler?t.scheduler():t.run())}const Zk=Uf("__proto__,__v_isRef,__isVue"),Z0=new Set(Object.getOwnPropertyNames(Symbol).filter(t=>t!=="arguments"&&t!=="caller").map(t=>Symbol[t]).filter(Kf)),Jk=Zf(),Qk=Zf(!1,!0),eS=Zf(!0),xx=tS();function tS(){const t={};return["includes","indexOf","lastIndexOf"].forEach(e=>{t[e]=function(...n){const s=Ze(this);for(let r=0,i=this.length;r<i;r++)Ln(s,"get",r+"");const o=s[e](...n);return o===-1||o===!1?s[e](...n.map(Ze)):o}}),["push","pop","shift","unshift","splice"].forEach(e=>{t[e]=function(...n){yi();const s=Ze(this)[e].apply(this,n);return wi(),s}}),t}function Zf(t=!1,e=!1){return function(s,o,r){if(o==="__v_isReactive")return!t;if(o==="__v_isReadonly")return t;if(o==="__v_isShallow")return e;if(o==="__v_raw"&&r===(t?e?xS:ny:e?ty:ey).get(s))return s;const i=Le(s);if(!t&&i&&je(xx,o))return Reflect.get(xx,o,r);const a=Reflect.get(s,o,r);return(Kf(o)?Z0.has(o):Zk(o))||(t||Ln(s,"get",o),e)?a:nn(a)?i&&qf(o)?a:a.value:gt(a)?t?sy(a):ep(a):a}}const nS=J0(),sS=J0(!0);function J0(t=!1){return function(n,s,o,r){let i=n[s];if(ei(i)&&nn(i)&&!nn(o))return!1;if(!t&&(!kc(o)&&!ei(o)&&(i=Ze(i),o=Ze(o)),!Le(n)&&nn(i)&&!nn(o)))return i.value=o,!0;const a=Le(n)&&qf(s)?Number(s)<n.length:je(n,s),l=Reflect.set(n,s,o,r);return n===Ze(r)&&(a?na(o,i)&&Xs(n,"set",s,o):Xs(n,"add",s,o)),l}}function oS(t,e){const n=je(t,e);t[e];const s=Reflect.deleteProperty(t,e);return s&&n&&Xs(t,"delete",e,void 0),s}function rS(t,e){const n=Reflect.has(t,e);return(!Kf(e)||!Z0.has(e))&&Ln(t,"has",e),n}function iS(t){return Ln(t,"iterate",Le(t)?"length":nr),Reflect.ownKeys(t)}const Q0={get:Jk,set:nS,deleteProperty:oS,has:rS,ownKeys:iS},aS={get:eS,set(t,e){return!0},deleteProperty(t,e){return!0}},lS=mn({},Q0,{get:Qk,set:sS}),Jf=t=>t,du=t=>Reflect.getPrototypeOf(t);function Xl(t,e,n=!1,s=!1){t=t.__v_raw;const o=Ze(t),r=Ze(e);n||(e!==r&&Ln(o,"get",e),Ln(o,"get",r));const{has:i}=du(o),a=s?Jf:n?np:sa;if(i.call(o,e))return a(t.get(e));if(i.call(o,r))return a(t.get(r));t!==o&&t.get(e)}function Yl(t,e=!1){const n=this.__v_raw,s=Ze(n),o=Ze(t);return e||(t!==o&&Ln(s,"has",t),Ln(s,"has",o)),t===o?n.has(t):n.has(t)||n.has(o)}function Zl(t,e=!1){return t=t.__v_raw,!e&&Ln(Ze(t),"iterate",nr),Reflect.get(t,"size",t)}function bx(t){t=Ze(t);const e=Ze(this);return du(e).has.call(e,t)||(e.add(t),Xs(e,"add",t,t)),this}function yx(t,e){e=Ze(e);const n=Ze(this),{has:s,get:o}=du(n);let r=s.call(n,t);r||(t=Ze(t),r=s.call(n,t));const i=o.call(n,t);return n.set(t,e),r?na(e,i)&&Xs(n,"set",t,e):Xs(n,"add",t,e),this}function wx(t){const e=Ze(this),{has:n,get:s}=du(e);let o=n.call(e,t);o||(t=Ze(t),o=n.call(e,t)),s&&s.call(e,t);const r=e.delete(t);return o&&Xs(e,"delete",t,void 0),r}function vx(){const t=Ze(this),e=t.size!==0,n=t.clear();return e&&Xs(t,"clear",void 0,void 0),n}function Jl(t,e){return function(s,o){const r=this,i=r.__v_raw,a=Ze(i),l=e?Jf:t?np:sa;return!t&&Ln(a,"iterate",nr),i.forEach((c,u)=>s.call(o,l(c),l(u),r))}}function Ql(t,e,n){return function(...s){const o=this.__v_raw,r=Ze(o),i=Hr(r),a=t==="entries"||t===Symbol.iterator&&i,l=t==="keys"&&i,c=o[t](...s),u=n?Jf:e?np:sa;return!e&&Ln(r,"iterate",l?_d:nr),{next(){const{value:h,done:d}=c.next();return d?{value:h,done:d}:{value:a?[u(h[0]),u(h[1])]:u(h),done:d}},[Symbol.iterator](){return this}}}}function so(t){return function(...e){return t==="delete"?!1:this}}function cS(){const t={get(r){return Xl(this,r)},get size(){return Zl(this)},has:Yl,add:bx,set:yx,delete:wx,clear:vx,forEach:Jl(!1,!1)},e={get(r){return Xl(this,r,!1,!0)},get size(){return Zl(this)},has:Yl,add:bx,set:yx,delete:wx,clear:vx,forEach:Jl(!1,!0)},n={get(r){return Xl(this,r,!0)},get size(){return Zl(this,!0)},has(r){return Yl.call(this,r,!0)},add:so("add"),set:so("set"),delete:so("delete"),clear:so("clear"),forEach:Jl(!0,!1)},s={get(r){return Xl(this,r,!0,!0)},get size(){return Zl(this,!0)},has(r){return Yl.call(this,r,!0)},add:so("add"),set:so("set"),delete:so("delete"),clear:so("clear"),forEach:Jl(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=Ql(r,!1,!1),n[r]=Ql(r,!0,!1),e[r]=Ql(r,!1,!0),s[r]=Ql(r,!0,!0)}),[t,n,e,s]}const[uS,hS,dS,fS]=cS();function Qf(t,e){const n=e?t?fS:dS:t?hS:uS;return(s,o,r)=>o==="__v_isReactive"?!t:o==="__v_isReadonly"?t:o==="__v_raw"?s:Reflect.get(je(n,o)&&o in s?n:s,o,r)}const pS={get:Qf(!1,!1)},mS={get:Qf(!1,!0)},gS={get:Qf(!0,!1)},ey=new WeakMap,ty=new WeakMap,ny=new WeakMap,xS=new WeakMap;function bS(t){switch(t){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function yS(t){return t.__v_skip||!Object.isExtensible(t)?0:bS(Wk(t))}function ep(t){return ei(t)?t:tp(t,!1,Q0,pS,ey)}function wS(t){return tp(t,!1,lS,mS,ty)}function sy(t){return tp(t,!0,aS,gS,ny)}function tp(t,e,n,s,o){if(!gt(t)||t.__v_raw&&!(e&&t.__v_isReactive))return t;const r=o.get(t);if(r)return r;const i=yS(t);if(i===0)return t;const a=new Proxy(t,i===2?s:n);return o.set(t,a),a}function jr(t){return ei(t)?jr(t.__v_raw):!!(t&&t.__v_isReactive)}function ei(t){return!!(t&&t.__v_isReadonly)}function kc(t){return!!(t&&t.__v_isShallow)}function oy(t){return jr(t)||ei(t)}function Ze(t){const e=t&&t.__v_raw;return e?Ze(e):t}function ry(t){return $c(t,"__v_skip",!0),t}const sa=t=>gt(t)?ep(t):t,np=t=>gt(t)?sy(t):t;function iy(t){co&&us&&(t=Ze(t),Y0(t.dep||(t.dep=Xf())))}function ay(t,e){t=Ze(t),t.dep&&Od(t.dep)}function nn(t){return!!(t&&t.__v_isRef===!0)}function An(t){return ly(t,!1)}function vS(t){return ly(t,!0)}function ly(t,e){return nn(t)?t:new IS(t,e)}class IS{constructor(e,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?e:Ze(e),this._value=n?e:sa(e)}get value(){return iy(this),this._value}set value(e){const n=this.__v_isShallow||kc(e)||ei(e);e=n?e:Ze(e),na(e,this._rawValue)&&(this._rawValue=e,this._value=n?e:sa(e),ay(this))}}function oa(t){return nn(t)?t.value:t}const CS={get:(t,e,n)=>oa(Reflect.get(t,e,n)),set:(t,e,n,s)=>{const o=t[e];return nn(o)&&!nn(n)?(o.value=n,!0):Reflect.set(t,e,n,s)}};function cy(t){return jr(t)?t:new Proxy(t,CS)}var uy;class $S{constructor(e,n,s,o){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this[uy]=!1,this._dirty=!0,this.effect=new Yf(e,()=>{this._dirty||(this._dirty=!0,ay(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=s}get value(){const e=Ze(this);return iy(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}uy="__v_isReadonly";function kS(t,e,n=!1){let s,o;const r=Be(t);return r?(s=t,o=fs):(s=t.get,o=t.set),new $S(s,o,r||!o,n)}function uo(t,e,n,s){let o;try{o=s?t(...s):t()}catch(r){fu(r,e,n)}return o}function ps(t,e,n,s){if(Be(t)){const r=uo(t,e,n,s);return r&&G0(r)&&r.catch(i=>{fu(i,e,n)}),r}const o=[];for(let r=0;r<t.length;r++)o.push(ps(t[r],e,n,s));return o}function fu(t,e,n,s=!0){const o=e?e.vnode:null;if(e){let r=e.parent;const i=e.proxy,a=n;for(;r;){const c=r.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](t,i,a)===!1)return}r=r.parent}const l=e.appContext.config.errorHandler;if(l){uo(l,null,10,[t,i,a]);return}}SS(t,n,o,s)}function SS(t,e,n,s=!0){console.error(t)}let ra=!1,Md=!1;const Qt=[];let As=0;const Kr=[];let Gs=null,Ho=0;const hy=Promise.resolve();let sp=null;function NS(t){const e=sp||hy;return t?e.then(this?t.bind(this):t):e}function TS(t){let e=As+1,n=Qt.length;for(;e<n;){const s=e+n>>>1;ia(Qt[s])<t?e=s+1:n=s}return e}function op(t){(!Qt.length||!Qt.includes(t,ra&&t.allowRecurse?As+1:As))&&(t.id==null?Qt.push(t):Qt.splice(TS(t.id),0,t),dy())}function dy(){!ra&&!Md&&(Md=!0,sp=hy.then(py))}function ES(t){const e=Qt.indexOf(t);e>As&&Qt.splice(e,1)}function RS(t){Le(t)?Kr.push(...t):(!Gs||!Gs.includes(t,t.allowRecurse?Ho+1:Ho))&&Kr.push(t),dy()}function Ix(t,e=ra?As+1:0){for(;e<Qt.length;e++){const n=Qt[e];n&&n.pre&&(Qt.splice(e,1),e--,n())}}function fy(t){if(Kr.length){const e=[...new Set(Kr)];if(Kr.length=0,Gs){Gs.push(...e);return}for(Gs=e,Gs.sort((n,s)=>ia(n)-ia(s)),Ho=0;Ho<Gs.length;Ho++)Gs[Ho]();Gs=null,Ho=0}}const ia=t=>t.id==null?1/0:t.id,DS=(t,e)=>{const n=ia(t)-ia(e);if(n===0){if(t.pre&&!e.pre)return-1;if(e.pre&&!t.pre)return 1}return n};function py(t){Md=!1,ra=!0,Qt.sort(DS);const e=fs;try{for(As=0;As<Qt.length;As++){const n=Qt[As];n&&n.active!==!1&&uo(n,null,14)}}finally{As=0,Qt.length=0,fy(),ra=!1,sp=null,(Qt.length||Kr.length)&&py()}}function AS(t,e,...n){if(t.isUnmounted)return;const s=t.vnode.props||st;let o=n;const r=e.startsWith("update:"),i=r&&e.slice(7);if(i&&i in s){const u=`${i==="modelValue"?"model":i}Modifiers`,{number:h,trim:d}=s[u]||st;d&&(o=n.map(f=>f.trim())),h&&(o=n.map(Dd))}let a,l=s[a=nd(e)]||s[a=nd(zs(e))];!l&&r&&(l=s[a=nd(bi(e))]),l&&ps(l,t,6,o);const c=s[a+"Once"];if(c){if(!t.emitted)t.emitted={};else if(t.emitted[a])return;t.emitted[a]=!0,ps(c,t,6,o)}}function my(t,e,n=!1){const s=e.emitsCache,o=s.get(t);if(o!==void 0)return o;const r=t.emits;let i={},a=!1;if(!Be(t)){const l=c=>{const u=my(c,e,!0);u&&(a=!0,mn(i,u))};!n&&e.mixins.length&&e.mixins.forEach(l),t.extends&&l(t.extends),t.mixins&&t.mixins.forEach(l)}return!r&&!a?(gt(t)&&s.set(t,null),null):(Le(r)?r.forEach(l=>i[l]=null):mn(i,r),gt(t)&&s.set(t,i),i)}function pu(t,e){return!t||!lu(e)?!1:(e=e.slice(2).replace(/Once$/,""),je(t,e[0].toLowerCase()+e.slice(1))||je(t,bi(e))||je(t,e))}let jn=null,mu=null;function Sc(t){const e=jn;return jn=t,mu=t&&t.type.__scopeId||null,e}function gy(t){mu=t}function xy(){mu=null}function FS(t,e=jn,n){if(!e||t._n)return t;const s=(...o)=>{s._d&&Ax(-1);const r=Sc(e);let i;try{i=t(...o)}finally{Sc(r),s._d&&Ax(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function sd(t){const{type:e,vnode:n,proxy:s,withProxy:o,props:r,propsOptions:[i],slots:a,attrs:l,emit:c,render:u,renderCache:h,data:d,setupState:f,ctx:p,inheritAttrs:m}=t;let g,x;const b=Sc(t);try{if(n.shapeFlag&4){const y=o||s;g=Ts(u.call(y,y,h,r,f,d,p)),x=l}else{const y=e;g=Ts(y.length>1?y(r,{attrs:l,slots:a,emit:c}):y(r,null)),x=e.props?l:_S(l)}}catch(y){Zi.length=0,fu(y,t,1),g=Wt(cr)}let w=g;if(x&&m!==!1){const y=Object.keys(x),{shapeFlag:v}=w;y.length&&v&7&&(i&&y.some(Hf)&&(x=OS(x,i)),w=ti(w,x))}return n.dirs&&(w=ti(w),w.dirs=w.dirs?w.dirs.concat(n.dirs):n.dirs),n.transition&&(w.transition=n.transition),g=w,Sc(b),g}const _S=t=>{let e;for(const n in t)(n==="class"||n==="style"||lu(n))&&((e||(e={}))[n]=t[n]);return e},OS=(t,e)=>{const n={};for(const s in t)(!Hf(s)||!(s.slice(9)in e))&&(n[s]=t[s]);return n};function MS(t,e,n){const{props:s,children:o,component:r}=t,{props:i,children:a,patchFlag:l}=e,c=r.emitsOptions;if(e.dirs||e.transition)return!0;if(n&&l>=0){if(l&1024)return!0;if(l&16)return s?Cx(s,i,c):!!i;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const d=u[h];if(i[d]!==s[d]&&!pu(c,d))return!0}}}else return(o||a)&&(!a||!a.$stable)?!0:s===i?!1:s?i?Cx(s,i,c):!0:!!i;return!1}function Cx(t,e,n){const s=Object.keys(e);if(s.length!==Object.keys(t).length)return!0;for(let o=0;o<s.length;o++){const r=s[o];if(e[r]!==t[r]&&!pu(n,r))return!0}return!1}function LS({vnode:t,parent:e},n){for(;e&&e.subTree===t;)(t=e.vnode).el=n,e=e.parent}const PS=t=>t.__isSuspense;function BS(t,e){e&&e.pendingBranch?Le(t)?e.effects.push(...t):e.effects.push(t):RS(t)}function zS(t,e){if(Bt){let n=Bt.provides;const s=Bt.parent&&Bt.parent.provides;s===n&&(n=Bt.provides=Object.create(s)),n[t]=e}}function od(t,e,n=!1){const s=Bt||jn;if(s){const o=s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides;if(o&&t in o)return o[t];if(arguments.length>1)return n&&Be(e)?e.call(s.proxy):e}}const $x={};function qr(t,e,n){return by(t,e,n)}function by(t,e,{immediate:n,deep:s,flush:o,onTrack:r,onTrigger:i}=st){const a=Bt;let l,c=!1,u=!1;if(nn(t)?(l=()=>t.value,c=kc(t)):jr(t)?(l=()=>t,s=!0):Le(t)?(u=!0,c=t.some(x=>jr(x)||kc(x)),l=()=>t.map(x=>{if(nn(x))return x.value;if(jr(x))return Yo(x);if(Be(x))return uo(x,a,2)})):Be(t)?e?l=()=>uo(t,a,2):l=()=>{if(!(a&&a.isUnmounted))return h&&h(),ps(t,a,3,[d])}:l=fs,e&&s){const x=l;l=()=>Yo(x())}let h,d=x=>{h=g.onStop=()=>{uo(x,a,4)}};if(la)return d=fs,e?n&&ps(e,a,3,[l(),u?[]:void 0,d]):l(),fs;let f=u?[]:$x;const p=()=>{if(!!g.active)if(e){const x=g.run();(s||c||(u?x.some((b,w)=>na(b,f[w])):na(x,f)))&&(h&&h(),ps(e,a,3,[x,f===$x?void 0:f,d]),f=x)}else g.run()};p.allowRecurse=!!e;let m;o==="sync"?m=p:o==="post"?m=()=>yn(p,a&&a.suspense):(p.pre=!0,a&&(p.id=a.uid),m=()=>op(p));const g=new Yf(l,m);return e?n?p():f=g.run():o==="post"?yn(g.run.bind(g),a&&a.suspense):g.run(),()=>{g.stop(),a&&a.scope&&jf(a.scope.effects,g)}}function WS(t,e,n){const s=this.proxy,o=Vt(t)?t.includes(".")?yy(s,t):()=>s[t]:t.bind(s,s);let r;Be(e)?r=e:(r=e.handler,n=e);const i=Bt;ni(this);const a=by(o,r.bind(s),n);return i?ni(i):sr(),a}function yy(t,e){const n=e.split(".");return()=>{let s=t;for(let o=0;o<n.length&&s;o++)s=s[n[o]];return s}}function Yo(t,e){if(!gt(t)||t.__v_skip||(e=e||new Set,e.has(t)))return t;if(e.add(t),nn(t))Yo(t.value,e);else if(Le(t))for(let n=0;n<t.length;n++)Yo(t[n],e);else if(U0(t)||Hr(t))t.forEach(n=>{Yo(n,e)});else if(j0(t))for(const n in t)Yo(t[n],e);return t}function gu(t){return Be(t)?{setup:t,name:t.name}:t}const mc=t=>!!t.type.__asyncLoader,wy=t=>t.type.__isKeepAlive;function VS(t,e){vy(t,"a",e)}function US(t,e){vy(t,"da",e)}function vy(t,e,n=Bt){const s=t.__wdc||(t.__wdc=()=>{let o=n;for(;o;){if(o.isDeactivated)return;o=o.parent}return t()});if(xu(e,s,n),n){let o=n.parent;for(;o&&o.parent;)wy(o.parent.vnode)&&GS(s,e,n,o),o=o.parent}}function GS(t,e,n,s){const o=xu(e,t,s,!0);Cy(()=>{jf(s[e],o)},n)}function xu(t,e,n=Bt,s=!1){if(n){const o=n[t]||(n[t]=[]),r=e.__weh||(e.__weh=(...i)=>{if(n.isUnmounted)return;yi(),ni(n);const a=ps(e,n,t,i);return sr(),wi(),a});return s?o.unshift(r):o.push(r),r}}const Js=t=>(e,n=Bt)=>(!la||t==="sp")&&xu(t,(...s)=>e(...s),n),HS=Js("bm"),Iy=Js("m"),jS=Js("bu"),KS=Js("u"),qS=Js("bum"),Cy=Js("um"),XS=Js("sp"),YS=Js("rtg"),ZS=Js("rtc");function JS(t,e=Bt){xu("ec",t,e)}function Hs(t,e){const n=jn;if(n===null)return t;const s=yu(n)||n.proxy,o=t.dirs||(t.dirs=[]);for(let r=0;r<e.length;r++){let[i,a,l,c=st]=e[r];Be(i)&&(i={mounted:i,updated:i}),i.deep&&Yo(a),o.push({dir:i,instance:s,value:a,oldValue:void 0,arg:l,modifiers:c})}return t}function Mo(t,e,n,s){const o=t.dirs,r=e&&e.dirs;for(let i=0;i<o.length;i++){const a=o[i];r&&(a.oldValue=r[i].value);let l=a.dir[s];l&&(yi(),ps(l,n,8,[t.el,a,t,e]),wi())}}const $y="components";function QS(t,e){return tN($y,t,!0,e)||t}const eN=Symbol();function tN(t,e,n=!0,s=!1){const o=jn||Bt;if(o){const r=o.type;if(t===$y){const a=RN(r,!1);if(a&&(a===e||a===zs(e)||a===hu(zs(e))))return r}const i=kx(o[t]||r[t],e)||kx(o.appContext[t],e);return!i&&s?r:i}}function kx(t,e){return t&&(t[e]||t[zs(e)]||t[hu(zs(e))])}function Ld(t,e,n,s){let o;const r=n&&n[s];if(Le(t)||Vt(t)){o=new Array(t.length);for(let i=0,a=t.length;i<a;i++)o[i]=e(t[i],i,void 0,r&&r[i])}else if(typeof t=="number"){o=new Array(t);for(let i=0;i<t;i++)o[i]=e(i+1,i,void 0,r&&r[i])}else if(gt(t))if(t[Symbol.iterator])o=Array.from(t,(i,a)=>e(i,a,void 0,r&&r[a]));else{const i=Object.keys(t);o=new Array(i.length);for(let a=0,l=i.length;a<l;a++){const c=i[a];o[a]=e(t[c],c,a,r&&r[a])}}else o=[];return n&&(n[s]=o),o}const Pd=t=>t?Ly(t)?yu(t)||t.proxy:Pd(t.parent):null,Nc=mn(Object.create(null),{$:t=>t,$el:t=>t.vnode.el,$data:t=>t.data,$props:t=>t.props,$attrs:t=>t.attrs,$slots:t=>t.slots,$refs:t=>t.refs,$parent:t=>Pd(t.parent),$root:t=>Pd(t.root),$emit:t=>t.emit,$options:t=>rp(t),$forceUpdate:t=>t.f||(t.f=()=>op(t.update)),$nextTick:t=>t.n||(t.n=NS.bind(t.proxy)),$watch:t=>WS.bind(t)}),nN={get({_:t},e){const{ctx:n,setupState:s,data:o,props:r,accessCache:i,type:a,appContext:l}=t;let c;if(e[0]!=="$"){const f=i[e];if(f!==void 0)switch(f){case 1:return s[e];case 2:return o[e];case 4:return n[e];case 3:return r[e]}else{if(s!==st&&je(s,e))return i[e]=1,s[e];if(o!==st&&je(o,e))return i[e]=2,o[e];if((c=t.propsOptions[0])&&je(c,e))return i[e]=3,r[e];if(n!==st&&je(n,e))return i[e]=4,n[e];Bd&&(i[e]=0)}}const u=Nc[e];let h,d;if(u)return e==="$attrs"&&Ln(t,"get",e),u(t);if((h=a.__cssModules)&&(h=h[e]))return h;if(n!==st&&je(n,e))return i[e]=4,n[e];if(d=l.config.globalProperties,je(d,e))return d[e]},set({_:t},e,n){const{data:s,setupState:o,ctx:r}=t;return o!==st&&je(o,e)?(o[e]=n,!0):s!==st&&je(s,e)?(s[e]=n,!0):je(t.props,e)||e[0]==="$"&&e.slice(1)in t?!1:(r[e]=n,!0)},has({_:{data:t,setupState:e,accessCache:n,ctx:s,appContext:o,propsOptions:r}},i){let a;return!!n[i]||t!==st&&je(t,i)||e!==st&&je(e,i)||(a=r[0])&&je(a,i)||je(s,i)||je(Nc,i)||je(o.config.globalProperties,i)},defineProperty(t,e,n){return n.get!=null?t._.accessCache[e]=0:je(n,"value")&&this.set(t,e,n.value,null),Reflect.defineProperty(t,e,n)}};let Bd=!0;function sN(t){const e=rp(t),n=t.proxy,s=t.ctx;Bd=!1,e.beforeCreate&&Sx(e.beforeCreate,t,"bc");const{data:o,computed:r,methods:i,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:d,beforeUpdate:f,updated:p,activated:m,deactivated:g,beforeDestroy:x,beforeUnmount:b,destroyed:w,unmounted:y,render:v,renderTracked:I,renderTriggered:C,errorCaptured:k,serverPrefetch:N,expose:T,inheritAttrs:A,components:L,directives:z,filters:U}=e;if(c&&oN(c,s,null,t.appContext.config.unwrapInjectedRef),i)for(const j in i){const P=i[j];Be(P)&&(s[j]=P.bind(n))}if(o){const j=o.call(n,n);gt(j)&&(t.data=ep(j))}if(Bd=!0,r)for(const j in r){const P=r[j],Y=Be(P)?P.bind(n,n):Be(P.get)?P.get.bind(n,n):fs,te=!Be(P)&&Be(P.set)?P.set.bind(n):fs,J=AN({get:Y,set:te});Object.defineProperty(s,j,{enumerable:!0,configurable:!0,get:()=>J.value,set:oe=>J.value=oe})}if(a)for(const j in a)ky(a[j],s,n,j);if(l){const j=Be(l)?l.call(n):l;Reflect.ownKeys(j).forEach(P=>{zS(P,j[P])})}u&&Sx(u,t,"c");function B(j,P){Le(P)?P.forEach(Y=>j(Y.bind(n))):P&&j(P.bind(n))}if(B(HS,h),B(Iy,d),B(jS,f),B(KS,p),B(VS,m),B(US,g),B(JS,k),B(ZS,I),B(YS,C),B(qS,b),B(Cy,y),B(XS,N),Le(T))if(T.length){const j=t.exposed||(t.exposed={});T.forEach(P=>{Object.defineProperty(j,P,{get:()=>n[P],set:Y=>n[P]=Y})})}else t.exposed||(t.exposed={});v&&t.render===fs&&(t.render=v),A!=null&&(t.inheritAttrs=A),L&&(t.components=L),z&&(t.directives=z)}function oN(t,e,n=fs,s=!1){Le(t)&&(t=zd(t));for(const o in t){const r=t[o];let i;gt(r)?"default"in r?i=od(r.from||o,r.default,!0):i=od(r.from||o):i=od(r),nn(i)&&s?Object.defineProperty(e,o,{enumerable:!0,configurable:!0,get:()=>i.value,set:a=>i.value=a}):e[o]=i}}function Sx(t,e,n){ps(Le(t)?t.map(s=>s.bind(e.proxy)):t.bind(e.proxy),e,n)}function ky(t,e,n,s){const o=s.includes(".")?yy(n,s):()=>n[s];if(Vt(t)){const r=e[t];Be(r)&&qr(o,r)}else if(Be(t))qr(o,t.bind(n));else if(gt(t))if(Le(t))t.forEach(r=>ky(r,e,n,s));else{const r=Be(t.handler)?t.handler.bind(n):e[t.handler];Be(r)&&qr(o,r,t)}}function rp(t){const e=t.type,{mixins:n,extends:s}=e,{mixins:o,optionsCache:r,config:{optionMergeStrategies:i}}=t.appContext,a=r.get(e);let l;return a?l=a:!o.length&&!n&&!s?l=e:(l={},o.length&&o.forEach(c=>Tc(l,c,i,!0)),Tc(l,e,i)),gt(e)&&r.set(e,l),l}function Tc(t,e,n,s=!1){const{mixins:o,extends:r}=e;r&&Tc(t,r,n,!0),o&&o.forEach(i=>Tc(t,i,n,!0));for(const i in e)if(!(s&&i==="expose")){const a=rN[i]||n&&n[i];t[i]=a?a(t[i],e[i]):e[i]}return t}const rN={data:Nx,props:Vo,emits:Vo,methods:Vo,computed:Vo,beforeCreate:hn,created:hn,beforeMount:hn,mounted:hn,beforeUpdate:hn,updated:hn,beforeDestroy:hn,beforeUnmount:hn,destroyed:hn,unmounted:hn,activated:hn,deactivated:hn,errorCaptured:hn,serverPrefetch:hn,components:Vo,directives:Vo,watch:aN,provide:Nx,inject:iN};function Nx(t,e){return e?t?function(){return mn(Be(t)?t.call(this,this):t,Be(e)?e.call(this,this):e)}:e:t}function iN(t,e){return Vo(zd(t),zd(e))}function zd(t){if(Le(t)){const e={};for(let n=0;n<t.length;n++)e[t[n]]=t[n];return e}return t}function hn(t,e){return t?[...new Set([].concat(t,e))]:e}function Vo(t,e){return t?mn(mn(Object.create(null),t),e):e}function aN(t,e){if(!t)return e;if(!e)return t;const n=mn(Object.create(null),t);for(const s in e)n[s]=hn(t[s],e[s]);return n}function lN(t,e,n,s=!1){const o={},r={};$c(r,bu,1),t.propsDefaults=Object.create(null),Sy(t,e,o,r);for(const i in t.propsOptions[0])i in o||(o[i]=void 0);n?t.props=s?o:wS(o):t.type.props?t.props=o:t.props=r,t.attrs=r}function cN(t,e,n,s){const{props:o,attrs:r,vnode:{patchFlag:i}}=t,a=Ze(o),[l]=t.propsOptions;let c=!1;if((s||i>0)&&!(i&16)){if(i&8){const u=t.vnode.dynamicProps;for(let h=0;h<u.length;h++){let d=u[h];if(pu(t.emitsOptions,d))continue;const f=e[d];if(l)if(je(r,d))f!==r[d]&&(r[d]=f,c=!0);else{const p=zs(d);o[p]=Wd(l,a,p,f,t,!1)}else f!==r[d]&&(r[d]=f,c=!0)}}}else{Sy(t,e,o,r)&&(c=!0);let u;for(const h in a)(!e||!je(e,h)&&((u=bi(h))===h||!je(e,u)))&&(l?n&&(n[h]!==void 0||n[u]!==void 0)&&(o[h]=Wd(l,a,h,void 0,t,!0)):delete o[h]);if(r!==a)for(const h in r)(!e||!je(e,h)&&!0)&&(delete r[h],c=!0)}c&&Xs(t,"set","$attrs")}function Sy(t,e,n,s){const[o,r]=t.propsOptions;let i=!1,a;if(e)for(let l in e){if(fc(l))continue;const c=e[l];let u;o&&je(o,u=zs(l))?!r||!r.includes(u)?n[u]=c:(a||(a={}))[u]=c:pu(t.emitsOptions,l)||(!(l in s)||c!==s[l])&&(s[l]=c,i=!0)}if(r){const l=Ze(n),c=a||st;for(let u=0;u<r.length;u++){const h=r[u];n[h]=Wd(o,l,h,c[h],t,!je(c,h))}}return i}function Wd(t,e,n,s,o,r){const i=t[n];if(i!=null){const a=je(i,"default");if(a&&s===void 0){const l=i.default;if(i.type!==Function&&Be(l)){const{propsDefaults:c}=o;n in c?s=c[n]:(ni(o),s=c[n]=l.call(null,e),sr())}else s=l}i[0]&&(r&&!a?s=!1:i[1]&&(s===""||s===bi(n))&&(s=!0))}return s}function Ny(t,e,n=!1){const s=e.propsCache,o=s.get(t);if(o)return o;const r=t.props,i={},a=[];let l=!1;if(!Be(t)){const u=h=>{l=!0;const[d,f]=Ny(h,e,!0);mn(i,d),f&&a.push(...f)};!n&&e.mixins.length&&e.mixins.forEach(u),t.extends&&u(t.extends),t.mixins&&t.mixins.forEach(u)}if(!r&&!l)return gt(t)&&s.set(t,Gr),Gr;if(Le(r))for(let u=0;u<r.length;u++){const h=zs(r[u]);Tx(h)&&(i[h]=st)}else if(r)for(const u in r){const h=zs(u);if(Tx(h)){const d=r[u],f=i[h]=Le(d)||Be(d)?{type:d}:d;if(f){const p=Dx(Boolean,f.type),m=Dx(String,f.type);f[0]=p>-1,f[1]=m<0||p<m,(p>-1||je(f,"default"))&&a.push(h)}}}const c=[i,a];return gt(t)&&s.set(t,c),c}function Tx(t){return t[0]!=="$"}function Ex(t){const e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:t===null?"null":""}function Rx(t,e){return Ex(t)===Ex(e)}function Dx(t,e){return Le(e)?e.findIndex(n=>Rx(n,t)):Be(e)&&Rx(e,t)?0:-1}const Ty=t=>t[0]==="_"||t==="$stable",ip=t=>Le(t)?t.map(Ts):[Ts(t)],uN=(t,e,n)=>{if(e._n)return e;const s=FS((...o)=>ip(e(...o)),n);return s._c=!1,s},Ey=(t,e,n)=>{const s=t._ctx;for(const o in t){if(Ty(o))continue;const r=t[o];if(Be(r))e[o]=uN(o,r,s);else if(r!=null){const i=ip(r);e[o]=()=>i}}},Ry=(t,e)=>{const n=ip(e);t.slots.default=()=>n},hN=(t,e)=>{if(t.vnode.shapeFlag&32){const n=e._;n?(t.slots=Ze(e),$c(e,"_",n)):Ey(e,t.slots={})}else t.slots={},e&&Ry(t,e);$c(t.slots,bu,1)},dN=(t,e,n)=>{const{vnode:s,slots:o}=t;let r=!0,i=st;if(s.shapeFlag&32){const a=e._;a?n&&a===1?r=!1:(mn(o,e),!n&&a===1&&delete o._):(r=!e.$stable,Ey(e,o)),i=e}else e&&(Ry(t,e),i={default:1});if(r)for(const a in o)!Ty(a)&&!(a in i)&&delete o[a]};function Dy(){return{app:null,config:{isNativeTag:Pk,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let fN=0;function pN(t,e){return function(s,o=null){Be(s)||(s=Object.assign({},s)),o!=null&&!gt(o)&&(o=null);const r=Dy(),i=new Set;let a=!1;const l=r.app={_uid:fN++,_component:s,_props:o,_container:null,_context:r,_instance:null,version:_N,get config(){return r.config},set config(c){},use(c,...u){return i.has(c)||(c&&Be(c.install)?(i.add(c),c.install(l,...u)):Be(c)&&(i.add(c),c(l,...u))),l},mixin(c){return r.mixins.includes(c)||r.mixins.push(c),l},component(c,u){return u?(r.components[c]=u,l):r.components[c]},directive(c,u){return u?(r.directives[c]=u,l):r.directives[c]},mount(c,u,h){if(!a){const d=Wt(s,o);return d.appContext=r,u&&e?e(d,c):t(d,c,h),a=!0,l._container=c,c.__vue_app__=l,yu(d.component)||d.component.proxy}},unmount(){a&&(t(null,l._container),delete l._container.__vue_app__)},provide(c,u){return r.provides[c]=u,l}};return l}}function Vd(t,e,n,s,o=!1){if(Le(t)){t.forEach((d,f)=>Vd(d,e&&(Le(e)?e[f]:e),n,s,o));return}if(mc(s)&&!o)return;const r=s.shapeFlag&4?yu(s.component)||s.component.proxy:s.el,i=o?null:r,{i:a,r:l}=t,c=e&&e.r,u=a.refs===st?a.refs={}:a.refs,h=a.setupState;if(c!=null&&c!==l&&(Vt(c)?(u[c]=null,je(h,c)&&(h[c]=null)):nn(c)&&(c.value=null)),Be(l))uo(l,a,12,[i,u]);else{const d=Vt(l),f=nn(l);if(d||f){const p=()=>{if(t.f){const m=d?je(h,l)?h[l]:u[l]:l.value;o?Le(m)&&jf(m,r):Le(m)?m.includes(r)||m.push(r):d?(u[l]=[r],je(h,l)&&(h[l]=u[l])):(l.value=[r],t.k&&(u[t.k]=l.value))}else d?(u[l]=i,je(h,l)&&(h[l]=i)):f&&(l.value=i,t.k&&(u[t.k]=i))};i?(p.id=-1,yn(p,n)):p()}}}const yn=BS;function mN(t){return gN(t)}function gN(t,e){const n=Gk();n.__VUE__=!0;const{insert:s,remove:o,patchProp:r,createElement:i,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:d,setScopeId:f=fs,insertStaticContent:p}=t,m=(E,R,G,Z=null,X=null,Q=null,le=!1,ae=null,re=!!R.dynamicChildren)=>{if(E===R)return;E&&!Li(E,R)&&(Z=xe(E),oe(E,X,Q,!0),E=null),R.patchFlag===-2&&(re=!1,R.dynamicChildren=null);const{type:ne,ref:ge,shapeFlag:me}=R;switch(ne){case ap:g(E,R,G,Z);break;case cr:x(E,R,G,Z);break;case rd:E==null&&b(R,G,Z,le);break;case wn:L(E,R,G,Z,X,Q,le,ae,re);break;default:me&1?v(E,R,G,Z,X,Q,le,ae,re):me&6?z(E,R,G,Z,X,Q,le,ae,re):(me&64||me&128)&&ne.process(E,R,G,Z,X,Q,le,ae,re,$e)}ge!=null&&X&&Vd(ge,E&&E.ref,Q,R||E,!R)},g=(E,R,G,Z)=>{if(E==null)s(R.el=a(R.children),G,Z);else{const X=R.el=E.el;R.children!==E.children&&c(X,R.children)}},x=(E,R,G,Z)=>{E==null?s(R.el=l(R.children||""),G,Z):R.el=E.el},b=(E,R,G,Z)=>{[E.el,E.anchor]=p(E.children,R,G,Z,E.el,E.anchor)},w=({el:E,anchor:R},G,Z)=>{let X;for(;E&&E!==R;)X=d(E),s(E,G,Z),E=X;s(R,G,Z)},y=({el:E,anchor:R})=>{let G;for(;E&&E!==R;)G=d(E),o(E),E=G;o(R)},v=(E,R,G,Z,X,Q,le,ae,re)=>{le=le||R.type==="svg",E==null?I(R,G,Z,X,Q,le,ae,re):N(E,R,X,Q,le,ae,re)},I=(E,R,G,Z,X,Q,le,ae)=>{let re,ne;const{type:ge,props:me,shapeFlag:ye,transition:Te,dirs:Ae}=E;if(re=E.el=i(E.type,Q,me&&me.is,me),ye&8?u(re,E.children):ye&16&&k(E.children,re,null,Z,X,Q&&ge!=="foreignObject",le,ae),Ae&&Mo(E,null,Z,"created"),me){for(const Ve in me)Ve!=="value"&&!fc(Ve)&&r(re,Ve,null,me[Ve],Q,E.children,Z,X,ue);"value"in me&&r(re,"value",null,me.value),(ne=me.onVnodeBeforeMount)&&ks(ne,Z,E)}C(re,E,E.scopeId,le,Z),Ae&&Mo(E,null,Z,"beforeMount");const He=(!X||X&&!X.pendingBranch)&&Te&&!Te.persisted;He&&Te.beforeEnter(re),s(re,R,G),((ne=me&&me.onVnodeMounted)||He||Ae)&&yn(()=>{ne&&ks(ne,Z,E),He&&Te.enter(re),Ae&&Mo(E,null,Z,"mounted")},X)},C=(E,R,G,Z,X)=>{if(G&&f(E,G),Z)for(let Q=0;Q<Z.length;Q++)f(E,Z[Q]);if(X){let Q=X.subTree;if(R===Q){const le=X.vnode;C(E,le,le.scopeId,le.slotScopeIds,X.parent)}}},k=(E,R,G,Z,X,Q,le,ae,re=0)=>{for(let ne=re;ne<E.length;ne++){const ge=E[ne]=ae?oo(E[ne]):Ts(E[ne]);m(null,ge,R,G,Z,X,Q,le,ae)}},N=(E,R,G,Z,X,Q,le)=>{const ae=R.el=E.el;let{patchFlag:re,dynamicChildren:ne,dirs:ge}=R;re|=E.patchFlag&16;const me=E.props||st,ye=R.props||st;let Te;G&&Lo(G,!1),(Te=ye.onVnodeBeforeUpdate)&&ks(Te,G,R,E),ge&&Mo(R,E,G,"beforeUpdate"),G&&Lo(G,!0);const Ae=X&&R.type!=="foreignObject";if(ne?T(E.dynamicChildren,ne,ae,G,Z,Ae,Q):le||P(E,R,ae,null,G,Z,Ae,Q,!1),re>0){if(re&16)A(ae,R,me,ye,G,Z,X);else if(re&2&&me.class!==ye.class&&r(ae,"class",null,ye.class,X),re&4&&r(ae,"style",me.style,ye.style,X),re&8){const He=R.dynamicProps;for(let Ve=0;Ve<He.length;Ve++){const at=He[Ve],cn=me[at],Is=ye[at];(Is!==cn||at==="value")&&r(ae,at,cn,Is,X,E.children,G,Z,ue)}}re&1&&E.children!==R.children&&u(ae,R.children)}else!le&&ne==null&&A(ae,R,me,ye,G,Z,X);((Te=ye.onVnodeUpdated)||ge)&&yn(()=>{Te&&ks(Te,G,R,E),ge&&Mo(R,E,G,"updated")},Z)},T=(E,R,G,Z,X,Q,le)=>{for(let ae=0;ae<R.length;ae++){const re=E[ae],ne=R[ae],ge=re.el&&(re.type===wn||!Li(re,ne)||re.shapeFlag&70)?h(re.el):G;m(re,ne,ge,null,Z,X,Q,le,!0)}},A=(E,R,G,Z,X,Q,le)=>{if(G!==Z){if(G!==st)for(const ae in G)!fc(ae)&&!(ae in Z)&&r(E,ae,G[ae],null,le,R.children,X,Q,ue);for(const ae in Z){if(fc(ae))continue;const re=Z[ae],ne=G[ae];re!==ne&&ae!=="value"&&r(E,ae,ne,re,le,R.children,X,Q,ue)}"value"in Z&&r(E,"value",G.value,Z.value)}},L=(E,R,G,Z,X,Q,le,ae,re)=>{const ne=R.el=E?E.el:a(""),ge=R.anchor=E?E.anchor:a("");let{patchFlag:me,dynamicChildren:ye,slotScopeIds:Te}=R;Te&&(ae=ae?ae.concat(Te):Te),E==null?(s(ne,G,Z),s(ge,G,Z),k(R.children,G,ge,X,Q,le,ae,re)):me>0&&me&64&&ye&&E.dynamicChildren?(T(E.dynamicChildren,ye,G,X,Q,le,ae),(R.key!=null||X&&R===X.subTree)&&Ay(E,R,!0)):P(E,R,G,ge,X,Q,le,ae,re)},z=(E,R,G,Z,X,Q,le,ae,re)=>{R.slotScopeIds=ae,E==null?R.shapeFlag&512?X.ctx.activate(R,G,Z,le,re):U(R,G,Z,X,Q,le,re):V(E,R,re)},U=(E,R,G,Z,X,Q,le)=>{const ae=E.component=kN(E,Z,X);if(wy(E)&&(ae.ctx.renderer=$e),SN(ae),ae.asyncDep){if(X&&X.registerDep(ae,B),!E.el){const re=ae.subTree=Wt(cr);x(null,re,R,G)}return}B(ae,E,R,G,X,Q,le)},V=(E,R,G)=>{const Z=R.component=E.component;if(MS(E,R,G))if(Z.asyncDep&&!Z.asyncResolved){j(Z,R,G);return}else Z.next=R,ES(Z.update),Z.update();else R.el=E.el,Z.vnode=R},B=(E,R,G,Z,X,Q,le)=>{const ae=()=>{if(E.isMounted){let{next:ge,bu:me,u:ye,parent:Te,vnode:Ae}=E,He=ge,Ve;Lo(E,!1),ge?(ge.el=Ae.el,j(E,ge,le)):ge=Ae,me&&pc(me),(Ve=ge.props&&ge.props.onVnodeBeforeUpdate)&&ks(Ve,Te,ge,Ae),Lo(E,!0);const at=sd(E),cn=E.subTree;E.subTree=at,m(cn,at,h(cn.el),xe(cn),E,X,Q),ge.el=at.el,He===null&&LS(E,at.el),ye&&yn(ye,X),(Ve=ge.props&&ge.props.onVnodeUpdated)&&yn(()=>ks(Ve,Te,ge,Ae),X)}else{let ge;const{el:me,props:ye}=R,{bm:Te,m:Ae,parent:He}=E,Ve=mc(R);if(Lo(E,!1),Te&&pc(Te),!Ve&&(ge=ye&&ye.onVnodeBeforeMount)&&ks(ge,He,R),Lo(E,!0),me&&Pe){const at=()=>{E.subTree=sd(E),Pe(me,E.subTree,E,X,null)};Ve?R.type.__asyncLoader().then(()=>!E.isUnmounted&&at()):at()}else{const at=E.subTree=sd(E);m(null,at,G,Z,E,X,Q),R.el=at.el}if(Ae&&yn(Ae,X),!Ve&&(ge=ye&&ye.onVnodeMounted)){const at=R;yn(()=>ks(ge,He,at),X)}(R.shapeFlag&256||He&&mc(He.vnode)&&He.vnode.shapeFlag&256)&&E.a&&yn(E.a,X),E.isMounted=!0,R=G=Z=null}},re=E.effect=new Yf(ae,()=>op(ne),E.scope),ne=E.update=()=>re.run();ne.id=E.uid,Lo(E,!0),ne()},j=(E,R,G)=>{R.component=E;const Z=E.vnode.props;E.vnode=R,E.next=null,cN(E,R.props,Z,G),dN(E,R.children,G),yi(),Ix(),wi()},P=(E,R,G,Z,X,Q,le,ae,re=!1)=>{const ne=E&&E.children,ge=E?E.shapeFlag:0,me=R.children,{patchFlag:ye,shapeFlag:Te}=R;if(ye>0){if(ye&128){te(ne,me,G,Z,X,Q,le,ae,re);return}else if(ye&256){Y(ne,me,G,Z,X,Q,le,ae,re);return}}Te&8?(ge&16&&ue(ne,X,Q),me!==ne&&u(G,me)):ge&16?Te&16?te(ne,me,G,Z,X,Q,le,ae,re):ue(ne,X,Q,!0):(ge&8&&u(G,""),Te&16&&k(me,G,Z,X,Q,le,ae,re))},Y=(E,R,G,Z,X,Q,le,ae,re)=>{E=E||Gr,R=R||Gr;const ne=E.length,ge=R.length,me=Math.min(ne,ge);let ye;for(ye=0;ye<me;ye++){const Te=R[ye]=re?oo(R[ye]):Ts(R[ye]);m(E[ye],Te,G,null,X,Q,le,ae,re)}ne>ge?ue(E,X,Q,!0,!1,me):k(R,G,Z,X,Q,le,ae,re,me)},te=(E,R,G,Z,X,Q,le,ae,re)=>{let ne=0;const ge=R.length;let me=E.length-1,ye=ge-1;for(;ne<=me&&ne<=ye;){const Te=E[ne],Ae=R[ne]=re?oo(R[ne]):Ts(R[ne]);if(Li(Te,Ae))m(Te,Ae,G,null,X,Q,le,ae,re);else break;ne++}for(;ne<=me&&ne<=ye;){const Te=E[me],Ae=R[ye]=re?oo(R[ye]):Ts(R[ye]);if(Li(Te,Ae))m(Te,Ae,G,null,X,Q,le,ae,re);else break;me--,ye--}if(ne>me){if(ne<=ye){const Te=ye+1,Ae=Te<ge?R[Te].el:Z;for(;ne<=ye;)m(null,R[ne]=re?oo(R[ne]):Ts(R[ne]),G,Ae,X,Q,le,ae,re),ne++}}else if(ne>ye)for(;ne<=me;)oe(E[ne],X,Q,!0),ne++;else{const Te=ne,Ae=ne,He=new Map;for(ne=Ae;ne<=ye;ne++){const un=R[ne]=re?oo(R[ne]):Ts(R[ne]);un.key!=null&&He.set(un.key,ne)}let Ve,at=0;const cn=ye-Ae+1;let Is=!1,Kl=0;const Cs=new Array(cn);for(ne=0;ne<cn;ne++)Cs[ne]=0;for(ne=Te;ne<=me;ne++){const un=E[ne];if(at>=cn){oe(un,X,Q,!0);continue}let $s;if(un.key!=null)$s=He.get(un.key);else for(Ve=Ae;Ve<=ye;Ve++)if(Cs[Ve-Ae]===0&&Li(un,R[Ve])){$s=Ve;break}$s===void 0?oe(un,X,Q,!0):(Cs[$s-Ae]=ne+1,$s>=Kl?Kl=$s:Is=!0,m(un,R[$s],G,null,X,Q,le,ae,re),at++)}const ql=Is?xN(Cs):Gr;for(Ve=ql.length-1,ne=cn-1;ne>=0;ne--){const un=Ae+ne,$s=R[un],fx=un+1<ge?R[un+1].el:Z;Cs[ne]===0?m(null,$s,G,fx,X,Q,le,ae,re):Is&&(Ve<0||ne!==ql[Ve]?J($s,G,fx,2):Ve--)}}},J=(E,R,G,Z,X=null)=>{const{el:Q,type:le,transition:ae,children:re,shapeFlag:ne}=E;if(ne&6){J(E.component.subTree,R,G,Z);return}if(ne&128){E.suspense.move(R,G,Z);return}if(ne&64){le.move(E,R,G,$e);return}if(le===wn){s(Q,R,G);for(let me=0;me<re.length;me++)J(re[me],R,G,Z);s(E.anchor,R,G);return}if(le===rd){w(E,R,G);return}if(Z!==2&&ne&1&&ae)if(Z===0)ae.beforeEnter(Q),s(Q,R,G),yn(()=>ae.enter(Q),X);else{const{leave:me,delayLeave:ye,afterLeave:Te}=ae,Ae=()=>s(Q,R,G),He=()=>{me(Q,()=>{Ae(),Te&&Te()})};ye?ye(Q,Ae,He):He()}else s(Q,R,G)},oe=(E,R,G,Z=!1,X=!1)=>{const{type:Q,props:le,ref:ae,children:re,dynamicChildren:ne,shapeFlag:ge,patchFlag:me,dirs:ye}=E;if(ae!=null&&Vd(ae,null,G,E,!0),ge&256){R.ctx.deactivate(E);return}const Te=ge&1&&ye,Ae=!mc(E);let He;if(Ae&&(He=le&&le.onVnodeBeforeUnmount)&&ks(He,R,E),ge&6)ce(E.component,G,Z);else{if(ge&128){E.suspense.unmount(G,Z);return}Te&&Mo(E,null,R,"beforeUnmount"),ge&64?E.type.remove(E,R,G,X,$e,Z):ne&&(Q!==wn||me>0&&me&64)?ue(ne,R,G,!1,!0):(Q===wn&&me&384||!X&&ge&16)&&ue(re,R,G),Z&&ie(E)}(Ae&&(He=le&&le.onVnodeUnmounted)||Te)&&yn(()=>{He&&ks(He,R,E),Te&&Mo(E,null,R,"unmounted")},G)},ie=E=>{const{type:R,el:G,anchor:Z,transition:X}=E;if(R===wn){de(G,Z);return}if(R===rd){y(E);return}const Q=()=>{o(G),X&&!X.persisted&&X.afterLeave&&X.afterLeave()};if(E.shapeFlag&1&&X&&!X.persisted){const{leave:le,delayLeave:ae}=X,re=()=>le(G,Q);ae?ae(E.el,Q,re):re()}else Q()},de=(E,R)=>{let G;for(;E!==R;)G=d(E),o(E),E=G;o(R)},ce=(E,R,G)=>{const{bum:Z,scope:X,update:Q,subTree:le,um:ae}=E;Z&&pc(Z),X.stop(),Q&&(Q.active=!1,oe(le,E,R,G)),ae&&yn(ae,R),yn(()=>{E.isUnmounted=!0},R),R&&R.pendingBranch&&!R.isUnmounted&&E.asyncDep&&!E.asyncResolved&&E.suspenseId===R.pendingId&&(R.deps--,R.deps===0&&R.resolve())},ue=(E,R,G,Z=!1,X=!1,Q=0)=>{for(let le=Q;le<E.length;le++)oe(E[le],R,G,Z,X)},xe=E=>E.shapeFlag&6?xe(E.component.subTree):E.shapeFlag&128?E.suspense.next():d(E.anchor||E.el),Ne=(E,R,G)=>{E==null?R._vnode&&oe(R._vnode,null,null,!0):m(R._vnode||null,E,R,null,null,null,G),Ix(),fy(),R._vnode=E},$e={p:m,um:oe,m:J,r:ie,mt:U,mc:k,pc:P,pbc:T,n:xe,o:t};let De,Pe;return e&&([De,Pe]=e($e)),{render:Ne,hydrate:De,createApp:pN(Ne,De)}}function Lo({effect:t,update:e},n){t.allowRecurse=e.allowRecurse=n}function Ay(t,e,n=!1){const s=t.children,o=e.children;if(Le(s)&&Le(o))for(let r=0;r<s.length;r++){const i=s[r];let a=o[r];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=o[r]=oo(o[r]),a.el=i.el),n||Ay(i,a))}}function xN(t){const e=t.slice(),n=[0];let s,o,r,i,a;const l=t.length;for(s=0;s<l;s++){const c=t[s];if(c!==0){if(o=n[n.length-1],t[o]<c){e[s]=o,n.push(s);continue}for(r=0,i=n.length-1;r<i;)a=r+i>>1,t[n[a]]<c?r=a+1:i=a;c<t[n[r]]&&(r>0&&(e[s]=n[r-1]),n[r]=s)}}for(r=n.length,i=n[r-1];r-- >0;)n[r]=i,i=e[i];return n}const bN=t=>t.__isTeleport,wn=Symbol(void 0),ap=Symbol(void 0),cr=Symbol(void 0),rd=Symbol(void 0),Zi=[];let hs=null;function Pt(t=!1){Zi.push(hs=t?null:[])}function yN(){Zi.pop(),hs=Zi[Zi.length-1]||null}let aa=1;function Ax(t){aa+=t}function Fy(t){return t.dynamicChildren=aa>0?hs||Gr:null,yN(),aa>0&&hs&&hs.push(t),t}function en(t,e,n,s,o,r){return Fy(Ee(t,e,n,s,o,r,!0))}function _y(t,e,n,s,o){return Fy(Wt(t,e,n,s,o,!0))}function Ud(t){return t?t.__v_isVNode===!0:!1}function Li(t,e){return t.type===e.type&&t.key===e.key}const bu="__vInternal",Oy=({key:t})=>t!=null?t:null,gc=({ref:t,ref_key:e,ref_for:n})=>t!=null?Vt(t)||nn(t)||Be(t)?{i:jn,r:t,k:e,f:!!n}:t:null;function Ee(t,e=null,n=null,s=0,o=null,r=t===wn?0:1,i=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:t,props:e,key:e&&Oy(e),ref:e&&gc(e),scopeId:mu,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:s,dynamicProps:o,dynamicChildren:null,appContext:null};return a?(lp(l,n),r&128&&t.normalize(l)):n&&(l.shapeFlag|=Vt(n)?8:16),aa>0&&!i&&hs&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&hs.push(l),l}const Wt=wN;function wN(t,e=null,n=null,s=0,o=null,r=!1){if((!t||t===eN)&&(t=cr),Ud(t)){const a=ti(t,e,!0);return n&&lp(a,n),aa>0&&!r&&hs&&(a.shapeFlag&6?hs[hs.indexOf(t)]=a:hs.push(a)),a.patchFlag|=-2,a}if(DN(t)&&(t=t.__vccOpts),e){e=vN(e);let{class:a,style:l}=e;a&&!Vt(a)&&(e.class=ya(a)),gt(l)&&(oy(l)&&!Le(l)&&(l=mn({},l)),e.style=Gf(l))}const i=Vt(t)?1:PS(t)?128:bN(t)?64:gt(t)?4:Be(t)?2:0;return Ee(t,e,n,s,o,i,r,!0)}function vN(t){return t?oy(t)||bu in t?mn({},t):t:null}function ti(t,e,n=!1){const{props:s,ref:o,patchFlag:r,children:i}=t,a=e?IN(s||{},e):s;return{__v_isVNode:!0,__v_skip:!0,type:t.type,props:a,key:a&&Oy(a),ref:e&&e.ref?n&&o?Le(o)?o.concat(gc(e)):[o,gc(e)]:gc(e):o,scopeId:t.scopeId,slotScopeIds:t.slotScopeIds,children:i,target:t.target,targetAnchor:t.targetAnchor,staticCount:t.staticCount,shapeFlag:t.shapeFlag,patchFlag:e&&t.type!==wn?r===-1?16:r|16:r,dynamicProps:t.dynamicProps,dynamicChildren:t.dynamicChildren,appContext:t.appContext,dirs:t.dirs,transition:t.transition,component:t.component,suspense:t.suspense,ssContent:t.ssContent&&ti(t.ssContent),ssFallback:t.ssFallback&&ti(t.ssFallback),el:t.el,anchor:t.anchor}}function xc(t=" ",e=0){return Wt(ap,null,t,e)}function Ec(t="",e=!1){return e?(Pt(),_y(cr,null,t)):Wt(cr,null,t)}function Ts(t){return t==null||typeof t=="boolean"?Wt(cr):Le(t)?Wt(wn,null,t.slice()):typeof t=="object"?oo(t):Wt(ap,null,String(t))}function oo(t){return t.el===null&&t.patchFlag!==-1||t.memo?t:ti(t)}function lp(t,e){let n=0;const{shapeFlag:s}=t;if(e==null)e=null;else if(Le(e))n=16;else if(typeof e=="object")if(s&65){const o=e.default;o&&(o._c&&(o._d=!1),lp(t,o()),o._c&&(o._d=!0));return}else{n=32;const o=e._;!o&&!(bu in e)?e._ctx=jn:o===3&&jn&&(jn.slots._===1?e._=1:(e._=2,t.patchFlag|=1024))}else Be(e)?(e={default:e,_ctx:jn},n=32):(e=String(e),s&64?(n=16,e=[xc(e)]):n=8);t.children=e,t.shapeFlag|=n}function IN(...t){const e={};for(let n=0;n<t.length;n++){const s=t[n];for(const o in s)if(o==="class")e.class!==s.class&&(e.class=ya([e.class,s.class]));else if(o==="style")e.style=Gf([e.style,s.style]);else if(lu(o)){const r=e[o],i=s[o];i&&r!==i&&!(Le(r)&&r.includes(i))&&(e[o]=r?[].concat(r,i):i)}else o!==""&&(e[o]=s[o])}return e}function ks(t,e,n,s=null){ps(t,e,7,[n,s])}const CN=Dy();let $N=0;function kN(t,e,n){const s=t.type,o=(e?e.appContext:t.appContext)||CN,r={uid:$N++,vnode:t,type:s,parent:e,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new Hk(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ny(s,o),emitsOptions:my(s,o),emit:null,emitted:null,propsDefaults:st,inheritAttrs:s.inheritAttrs,ctx:st,data:st,props:st,attrs:st,slots:st,refs:st,setupState:st,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=e?e.root:r,r.emit=AS.bind(null,r),t.ce&&t.ce(r),r}let Bt=null;const My=()=>Bt||jn,ni=t=>{Bt=t,t.scope.on()},sr=()=>{Bt&&Bt.scope.off(),Bt=null};function Ly(t){return t.vnode.shapeFlag&4}let la=!1;function SN(t,e=!1){la=e;const{props:n,children:s}=t.vnode,o=Ly(t);lN(t,n,o,e),hN(t,s);const r=o?NN(t,e):void 0;return la=!1,r}function NN(t,e){const n=t.type;t.accessCache=Object.create(null),t.proxy=ry(new Proxy(t.ctx,nN));const{setup:s}=n;if(s){const o=t.setupContext=s.length>1?EN(t):null;ni(t),yi();const r=uo(s,t,0,[t.props,o]);if(wi(),sr(),G0(r)){if(r.then(sr,sr),e)return r.then(i=>{Fx(t,i,e)}).catch(i=>{fu(i,t,0)});t.asyncDep=r}else Fx(t,r,e)}else Py(t,e)}function Fx(t,e,n){Be(e)?t.type.__ssrInlineRender?t.ssrRender=e:t.render=e:gt(e)&&(t.setupState=cy(e)),Py(t,n)}let _x;function Py(t,e,n){const s=t.type;if(!t.render){if(!e&&_x&&!s.render){const o=s.template||rp(t).template;if(o){const{isCustomElement:r,compilerOptions:i}=t.appContext.config,{delimiters:a,compilerOptions:l}=s,c=mn(mn({isCustomElement:r,delimiters:a},i),l);s.render=_x(o,c)}}t.render=s.render||fs}ni(t),yi(),sN(t),wi(),sr()}function TN(t){return new Proxy(t.attrs,{get(e,n){return Ln(t,"get","$attrs"),e[n]}})}function EN(t){const e=s=>{t.exposed=s||{}};let n;return{get attrs(){return n||(n=TN(t))},slots:t.slots,emit:t.emit,expose:e}}function yu(t){if(t.exposed)return t.exposeProxy||(t.exposeProxy=new Proxy(cy(ry(t.exposed)),{get(e,n){if(n in e)return e[n];if(n in Nc)return Nc[n](t)}}))}function RN(t,e=!0){return Be(t)?t.displayName||t.name:t.name||e&&t.__name}function DN(t){return Be(t)&&"__vccOpts"in t}const AN=(t,e)=>kS(t,e,la);function FN(t,e,n){const s=arguments.length;return s===2?gt(e)&&!Le(e)?Ud(e)?Wt(t,null,[e]):Wt(t,e):Wt(t,null,e):(s>3?n=Array.prototype.slice.call(arguments,2):s===3&&Ud(n)&&(n=[n]),Wt(t,e,n))}const _N="3.2.41",ON="http://www.w3.org/2000/svg",jo=typeof document!="undefined"?document:null,Ox=jo&&jo.createElement("template"),MN={insert:(t,e,n)=>{e.insertBefore(t,n||null)},remove:t=>{const e=t.parentNode;e&&e.removeChild(t)},createElement:(t,e,n,s)=>{const o=e?jo.createElementNS(ON,t):jo.createElement(t,n?{is:n}:void 0);return t==="select"&&s&&s.multiple!=null&&o.setAttribute("multiple",s.multiple),o},createText:t=>jo.createTextNode(t),createComment:t=>jo.createComment(t),setText:(t,e)=>{t.nodeValue=e},setElementText:(t,e)=>{t.textContent=e},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>jo.querySelector(t),setScopeId(t,e){t.setAttribute(e,"")},insertStaticContent(t,e,n,s,o,r){const i=n?n.previousSibling:e.lastChild;if(o&&(o===r||o.nextSibling))for(;e.insertBefore(o.cloneNode(!0),n),!(o===r||!(o=o.nextSibling)););else{Ox.innerHTML=s?`<svg>${t}</svg>`:t;const a=Ox.content;if(s){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,n)}return[i?i.nextSibling:e.firstChild,n?n.previousSibling:e.lastChild]}};function LN(t,e,n){const s=t._vtc;s&&(e=(e?[e,...s]:[...s]).join(" ")),e==null?t.removeAttribute("class"):n?t.setAttribute("class",e):t.className=e}function PN(t,e,n){const s=t.style,o=Vt(n);if(n&&!o){for(const r in n)Gd(s,r,n[r]);if(e&&!Vt(e))for(const r in e)n[r]==null&&Gd(s,r,"")}else{const r=s.display;o?e!==n&&(s.cssText=n):e&&t.removeAttribute("style"),"_vod"in t&&(s.display=r)}}const Mx=/\s*!important$/;function Gd(t,e,n){if(Le(n))n.forEach(s=>Gd(t,e,s));else if(n==null&&(n=""),e.startsWith("--"))t.setProperty(e,n);else{const s=BN(t,e);Mx.test(n)?t.setProperty(bi(s),n.replace(Mx,""),"important"):t[s]=n}}const Lx=["Webkit","Moz","ms"],id={};function BN(t,e){const n=id[e];if(n)return n;let s=zs(e);if(s!=="filter"&&s in t)return id[e]=s;s=hu(s);for(let o=0;o<Lx.length;o++){const r=Lx[o]+s;if(r in t)return id[e]=r}return e}const Px="http://www.w3.org/1999/xlink";function zN(t,e,n,s,o){if(s&&e.startsWith("xlink:"))n==null?t.removeAttributeNS(Px,e.slice(6,e.length)):t.setAttributeNS(Px,e,n);else{const r=_k(e);n==null||r&&!W0(n)?t.removeAttribute(e):t.setAttribute(e,r?"":n)}}function WN(t,e,n,s,o,r,i){if(e==="innerHTML"||e==="textContent"){s&&i(s,o,r),t[e]=n==null?"":n;return}if(e==="value"&&t.tagName!=="PROGRESS"&&!t.tagName.includes("-")){t._value=n;const l=n==null?"":n;(t.value!==l||t.tagName==="OPTION")&&(t.value=l),n==null&&t.removeAttribute(e);return}let a=!1;if(n===""||n==null){const l=typeof t[e];l==="boolean"?n=W0(n):n==null&&l==="string"?(n="",a=!0):l==="number"&&(n=0,a=!0)}try{t[e]=n}catch{}a&&t.removeAttribute(e)}function Pr(t,e,n,s){t.addEventListener(e,n,s)}function VN(t,e,n,s){t.removeEventListener(e,n,s)}function UN(t,e,n,s,o=null){const r=t._vei||(t._vei={}),i=r[e];if(s&&i)i.value=s;else{const[a,l]=GN(e);if(s){const c=r[e]=KN(s,o);Pr(t,a,c,l)}else i&&(VN(t,a,i,l),r[e]=void 0)}}const Bx=/(?:Once|Passive|Capture)$/;function GN(t){let e;if(Bx.test(t)){e={};let s;for(;s=t.match(Bx);)t=t.slice(0,t.length-s[0].length),e[s[0].toLowerCase()]=!0}return[t[2]===":"?t.slice(3):bi(t.slice(2)),e]}let ad=0;const HN=Promise.resolve(),jN=()=>ad||(HN.then(()=>ad=0),ad=Date.now());function KN(t,e){const n=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=n.attached)return;ps(qN(s,n.value),e,5,[s])};return n.value=t,n.attached=jN(),n}function qN(t,e){if(Le(e)){const n=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{n.call(t),t._stopped=!0},e.map(s=>o=>!o._stopped&&s&&s(o))}else return e}const zx=/^on[a-z]/,XN=(t,e,n,s,o=!1,r,i,a,l)=>{e==="class"?LN(t,s,o):e==="style"?PN(t,n,s):lu(e)?Hf(e)||UN(t,e,n,s,i):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):YN(t,e,s,o))?WN(t,e,s,r,i,a,l):(e==="true-value"?t._trueValue=s:e==="false-value"&&(t._falseValue=s),zN(t,e,s,o))};function YN(t,e,n,s){return s?!!(e==="innerHTML"||e==="textContent"||e in t&&zx.test(e)&&Be(n)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&t.tagName==="INPUT"||e==="type"&&t.tagName==="TEXTAREA"||zx.test(e)&&Vt(n)?!1:e in t}const Wx=t=>{const e=t.props["onUpdate:modelValue"]||!1;return Le(e)?n=>pc(e,n):e};function ZN(t){t.target.composing=!0}function Vx(t){const e=t.target;e.composing&&(e.composing=!1,e.dispatchEvent(new Event("input")))}const Zo={created(t,{modifiers:{lazy:e,trim:n,number:s}},o){t._assign=Wx(o);const r=s||o.props&&o.props.type==="number";Pr(t,e?"change":"input",i=>{if(i.target.composing)return;let a=t.value;n&&(a=a.trim()),r&&(a=Dd(a)),t._assign(a)}),n&&Pr(t,"change",()=>{t.value=t.value.trim()}),e||(Pr(t,"compositionstart",ZN),Pr(t,"compositionend",Vx),Pr(t,"change",Vx))},mounted(t,{value:e}){t.value=e==null?"":e},beforeUpdate(t,{value:e,modifiers:{lazy:n,trim:s,number:o}},r){if(t._assign=Wx(r),t.composing||document.activeElement===t&&t.type!=="range"&&(n||s&&t.value.trim()===e||(o||t.type==="number")&&Dd(t.value)===e))return;const i=e==null?"":e;t.value!==i&&(t.value=i)}},JN=["ctrl","shift","alt","meta"],QN={stop:t=>t.stopPropagation(),prevent:t=>t.preventDefault(),self:t=>t.target!==t.currentTarget,ctrl:t=>!t.ctrlKey,shift:t=>!t.shiftKey,alt:t=>!t.altKey,meta:t=>!t.metaKey,left:t=>"button"in t&&t.button!==0,middle:t=>"button"in t&&t.button!==1,right:t=>"button"in t&&t.button!==2,exact:(t,e)=>JN.some(n=>t[`${n}Key`]&&!e.includes(n))},eT=(t,e)=>(n,...s)=>{for(let o=0;o<e.length;o++){const r=QN[e[o]];if(r&&r(n,e))return}return t(n,...s)},Ux={beforeMount(t,{value:e},{transition:n}){t._vod=t.style.display==="none"?"":t.style.display,n&&e?n.beforeEnter(t):Pi(t,e)},mounted(t,{value:e},{transition:n}){n&&e&&n.enter(t)},updated(t,{value:e,oldValue:n},{transition:s}){!e!=!n&&(s?e?(s.beforeEnter(t),Pi(t,!0),s.enter(t)):s.leave(t,()=>{Pi(t,!1)}):Pi(t,e))},beforeUnmount(t,{value:e}){Pi(t,e)}};function Pi(t,e){t.style.display=e?t._vod:"none"}const tT=mn({patchProp:XN},MN);let Gx;function nT(){return Gx||(Gx=mN(tT))}const sT=(...t)=>{const e=nT().createApp(...t),{mount:n}=e;return e.mount=s=>{const o=oT(s);if(!o)return;const r=e._component;!Be(r)&&!r.render&&!r.template&&(r.template=o.innerHTML),o.innerHTML="";const i=n(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),i},e};function oT(t){return Vt(t)?document.querySelector(t):t}const Ji=/^[a-z0-9]+(-[a-z0-9]+)*$/,Fs=Object.freeze({left:0,top:0,width:16,height:16,rotate:0,vFlip:!1,hFlip:!1});function wu(t){return{...Fs,...t}}const vu=(t,e,n,s="")=>{const o=t.split(":");if(t.slice(0,1)==="@"){if(o.length<2||o.length>3)return null;s=o.shift().slice(1)}if(o.length>3||!o.length)return null;if(o.length>1){const a=o.pop(),l=o.pop(),c={provider:o.length>0?o[0]:s,prefix:l,name:a};return e&&!Qi(c)?null:c}const r=o[0],i=r.split("-");if(i.length>1){const a={provider:s,prefix:i.shift(),name:i.join("-")};return e&&!Qi(a)?null:a}if(n&&s===""){const a={provider:s,prefix:"",name:r};return e&&!Qi(a,n)?null:a}return null},Qi=(t,e)=>t?!!((t.provider===""||t.provider.match(Ji))&&(e&&t.prefix===""||t.prefix.match(Ji))&&t.name.match(Ji)):!1;function rT(t,e){const n={...t};for(const s in Fs){const o=s;if(e[o]!==void 0){const r=e[o];if(n[o]===void 0){n[o]=r;continue}switch(o){case"rotate":n[o]=(n[o]+r)%4;break;case"hFlip":case"vFlip":n[o]=r!==n[o];break;default:n[o]=r}}}return n}function Hx(t,e,n=!1){function s(r,i){if(t.icons[r]!==void 0)return Object.assign({},t.icons[r]);if(i>5)return null;const a=t.aliases;if(a&&a[r]!==void 0){const c=a[r],u=s(c.parent,i+1);return u&&rT(u,c)}const l=t.chars;return!i&&l&&l[r]!==void 0?s(l[r],i+1):null}const o=s(e,0);if(o)for(const r in Fs)o[r]===void 0&&t[r]!==void 0&&(o[r]=t[r]);return o&&n?wu(o):o}function iT(t){for(const e in Fs)if(t[e]!==void 0)return!0;return!1}function By(t,e,n){n=n||{};const s=[];if(typeof t!="object"||typeof t.icons!="object")return s;t.not_found instanceof Array&&t.not_found.forEach(i=>{e(i,null),s.push(i)});const o=t.icons;Object.keys(o).forEach(i=>{const a=Hx(t,i,!0);a&&(e(i,a),s.push(i))});const r=n.aliases||"all";if(r!=="none"&&typeof t.aliases=="object"){const i=t.aliases;Object.keys(i).forEach(a=>{if(r==="variations"&&iT(i[a]))return;const l=Hx(t,a,!0);l&&(e(a,l),s.push(a))})}return s}const Hd={provider:"string",aliases:"object",not_found:"object"};for(const t in Fs)Hd[t]=typeof Fs[t];function zy(t){if(typeof t!="object"||t===null)return null;const e=t;if(typeof e.prefix!="string"||!t.icons||typeof t.icons!="object")return null;for(const o in Hd)if(t[o]!==void 0&&typeof t[o]!==Hd[o])return null;const n=e.icons;for(const o in n){const r=n[o];if(!o.match(Ji)||typeof r.body!="string")return null;for(const i in Fs)if(r[i]!==void 0&&typeof r[i]!=typeof Fs[i])return null}const s=e.aliases;if(s)for(const o in s){const r=s[o],i=r.parent;if(!o.match(Ji)||typeof i!="string"||!n[i]&&!s[i])return null;for(const a in Fs)if(r[a]!==void 0&&typeof r[a]!=typeof Fs[a])return null}return e}const aT=1;let bc=Object.create(null);try{const t=window||self;t&&t._iconifyStorage.version===aT&&(bc=t._iconifyStorage.storage)}catch{}function lT(t,e){return{provider:t,prefix:e,icons:Object.create(null),missing:Object.create(null)}}function $r(t,e){bc[t]===void 0&&(bc[t]=Object.create(null));const n=bc[t];return n[e]===void 0&&(n[e]=lT(t,e)),n[e]}function cp(t,e){if(!zy(e))return[];const n=Date.now();return By(e,(s,o)=>{o?t.icons[s]=o:t.missing[s]=n})}function cT(t,e,n){try{if(typeof n.body=="string")return t.icons[e]=Object.freeze(wu(n)),!0}catch{}return!1}function uT(t,e){const n=t.icons[e];return n===void 0?null:n}let ca=!1;function Wy(t){return typeof t=="boolean"&&(ca=t),ca}function hT(t){const e=typeof t=="string"?vu(t,!0,ca):t;return e?uT($r(e.provider,e.prefix),e.name):null}function dT(t,e){const n=vu(t,!0,ca);if(!n)return!1;const s=$r(n.provider,n.prefix);return cT(s,n.name,e)}function fT(t,e){if(typeof t!="object")return!1;if(typeof e!="string"&&(e=typeof t.provider=="string"?t.provider:""),ca&&e===""&&(typeof t.prefix!="string"||t.prefix==="")){let s=!1;return zy(t)&&(t.prefix="",By(t,(o,r)=>{r&&dT(o,r)&&(s=!0)})),s}if(typeof t.prefix!="string"||!Qi({provider:e,prefix:t.prefix,name:"a"}))return!1;const n=$r(e,t.prefix);return!!cp(n,t)}const jx=Object.freeze({inline:!1,width:null,height:null,hAlign:"center",vAlign:"middle",slice:!1,hFlip:!1,vFlip:!1,rotate:0});function pT(t,e){const n={};for(const s in t){const o=s;if(n[o]=t[o],e[o]===void 0)continue;const r=e[o];switch(o){case"inline":case"slice":typeof r=="boolean"&&(n[o]=r);break;case"hFlip":case"vFlip":r===!0&&(n[o]=!n[o]);break;case"hAlign":case"vAlign":typeof r=="string"&&r!==""&&(n[o]=r);break;case"width":case"height":(typeof r=="string"&&r!==""||typeof r=="number"&&r||r===null)&&(n[o]=r);break;case"rotate":typeof r=="number"&&(n[o]+=r);break}}return n}const mT=/(-?[0-9.]*[0-9]+[0-9.]*)/g,gT=/^-?[0-9.]*[0-9]+[0-9.]*$/g;function ld(t,e,n){if(e===1)return t;if(n=n===void 0?100:n,typeof t=="number")return Math.ceil(t*e*n)/n;if(typeof t!="string")return t;const s=t.split(mT);if(s===null||!s.length)return t;const o=[];let r=s.shift(),i=gT.test(r);for(;;){if(i){const a=parseFloat(r);isNaN(a)?o.push(r):o.push(Math.ceil(a*e*n)/n)}else o.push(r);if(r=s.shift(),r===void 0)return o.join("");i=!i}}function xT(t){let e="";switch(t.hAlign){case"left":e+="xMin";break;case"right":e+="xMax";break;default:e+="xMid"}switch(t.vAlign){case"top":e+="YMin";break;case"bottom":e+="YMax";break;default:e+="YMid"}return e+=t.slice?" slice":" meet",e}function bT(t,e){const n={left:t.left,top:t.top,width:t.width,height:t.height};let s=t.body;[t,e].forEach(a=>{const l=[],c=a.hFlip,u=a.vFlip;let h=a.rotate;c?u?h+=2:(l.push("translate("+(n.width+n.left).toString()+" "+(0-n.top).toString()+")"),l.push("scale(-1 1)"),n.top=n.left=0):u&&(l.push("translate("+(0-n.left).toString()+" "+(n.height+n.top).toString()+")"),l.push("scale(1 -1)"),n.top=n.left=0);let d;switch(h<0&&(h-=Math.floor(h/4)*4),h=h%4,h){case 1:d=n.height/2+n.top,l.unshift("rotate(90 "+d.toString()+" "+d.toString()+")");break;case 2:l.unshift("rotate(180 "+(n.width/2+n.left).toString()+" "+(n.height/2+n.top).toString()+")");break;case 3:d=n.width/2+n.left,l.unshift("rotate(-90 "+d.toString()+" "+d.toString()+")");break}h%2===1&&((n.left!==0||n.top!==0)&&(d=n.left,n.left=n.top,n.top=d),n.width!==n.height&&(d=n.width,n.width=n.height,n.height=d)),l.length&&(s='<g transform="'+l.join(" ")+'">'+s+"</g>")});let o,r;e.width===null&&e.height===null?(r="1em",o=ld(r,n.width/n.height)):e.width!==null&&e.height!==null?(o=e.width,r=e.height):e.height!==null?(r=e.height,o=ld(r,n.width/n.height)):(o=e.width,r=ld(o,n.height/n.width)),o==="auto"&&(o=n.width),r==="auto"&&(r=n.height),o=typeof o=="string"?o:o.toString()+"",r=typeof r=="string"?r:r.toString()+"";const i={attributes:{width:o,height:r,preserveAspectRatio:xT(e),viewBox:n.left.toString()+" "+n.top.toString()+" "+n.width.toString()+" "+n.height.toString()},body:s};return e.inline&&(i.inline=!0),i}const yT=/\sid="(\S+)"/g,wT="IconifyId"+Date.now().toString(16)+(Math.random()*16777216|0).toString(16);let vT=0;function IT(t,e=wT){const n=[];let s;for(;s=yT.exec(t);)n.push(s[1]);return n.length&&n.forEach(o=>{const r=typeof e=="function"?e(o):e+(vT++).toString(),i=o.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");t=t.replace(new RegExp('([#;"])('+i+')([")]|\\.[a-z])',"g"),"$1"+r+"$3")}),t}const jd=Object.create(null);function CT(t,e){jd[t]=e}function Kd(t){return jd[t]||jd[""]}function up(t){let e;if(typeof t.resources=="string")e=[t.resources];else if(e=t.resources,!(e instanceof Array)||!e.length)return null;return{resources:e,path:t.path===void 0?"/":t.path,maxURL:t.maxURL?t.maxURL:500,rotate:t.rotate?t.rotate:750,timeout:t.timeout?t.timeout:5e3,random:t.random===!0,index:t.index?t.index:0,dataAfterTimeout:t.dataAfterTimeout!==!1}}const hp=Object.create(null),Bi=["https://api.simplesvg.com","https://api.unisvg.com"],yc=[];for(;Bi.length>0;)Bi.length===1||Math.random()>.5?yc.push(Bi.shift()):yc.push(Bi.pop());hp[""]=up({resources:["https://api.iconify.design"].concat(yc)});function $T(t,e){const n=up(e);return n===null?!1:(hp[t]=n,!0)}function dp(t){return hp[t]}const Vy=(t,e)=>{let n=t,s=n.indexOf("?")!==-1;function o(r){switch(typeof r){case"boolean":return r?"true":"false";case"number":return encodeURIComponent(r);case"string":return encodeURIComponent(r);default:throw new Error("Invalid parameter")}}return Object.keys(e).forEach(r=>{let i;try{i=o(e[r])}catch{return}n+=(s?"&":"?")+encodeURIComponent(r)+"="+i,s=!0}),n},Uy={},wc={},kT=()=>{let t;try{if(t=fetch,typeof t=="function")return t}catch{}return null};let Kx=kT();function ST(t,e){const n=dp(t);if(!n)return 0;let s;if(!n.maxURL)s=0;else{let r=0;n.resources.forEach(a=>{r=Math.max(r,a.length)});const i=Vy(e+".json",{icons:""});s=n.maxURL-r-n.path.length-i.length}const o=t+":"+e;return wc[t]=n.path,Uy[o]=s,s}function NT(t){return t===404}const TT=(t,e,n)=>{const s=[];let o=Uy[e];o===void 0&&(o=ST(t,e));const r="icons";let i={type:r,provider:t,prefix:e,icons:[]},a=0;return n.forEach((l,c)=>{a+=l.length+1,a>=o&&c>0&&(s.push(i),i={type:r,provider:t,prefix:e,icons:[]},a=l.length),i.icons.push(l)}),s.push(i),s};function ET(t){if(typeof t=="string"){if(wc[t]===void 0){const e=dp(t);if(!e)return"/";wc[t]=e.path}return wc[t]}return"/"}const RT=(t,e,n)=>{if(!Kx){n("abort",424);return}let s=ET(e.provider);switch(e.type){case"icons":{const r=e.prefix,a=e.icons.join(",");s+=Vy(r+".json",{icons:a});break}case"custom":{const r=e.uri;s+=r.slice(0,1)==="/"?r.slice(1):r;break}default:n("abort",400);return}let o=503;Kx(t+s).then(r=>{const i=r.status;if(i!==200){setTimeout(()=>{n(NT(i)?"abort":"next",i)});return}return o=501,r.json()}).then(r=>{if(typeof r!="object"||r===null){setTimeout(()=>{n("next",o)});return}setTimeout(()=>{n("success",r)})}).catch(()=>{n("next",o)})},DT={prepare:TT,send:RT};function AT(t){const e={loaded:[],missing:[],pending:[]},n=Object.create(null);t.sort((o,r)=>o.provider!==r.provider?o.provider.localeCompare(r.provider):o.prefix!==r.prefix?o.prefix.localeCompare(r.prefix):o.name.localeCompare(r.name));let s={provider:"",prefix:"",name:""};return t.forEach(o=>{if(s.name===o.name&&s.prefix===o.prefix&&s.provider===o.provider)return;s=o;const r=o.provider,i=o.prefix,a=o.name;n[r]===void 0&&(n[r]=Object.create(null));const l=n[r];l[i]===void 0&&(l[i]=$r(r,i));const c=l[i];let u;c.icons[a]!==void 0?u=e.loaded:i===""||c.missing[a]!==void 0?u=e.missing:u=e.pending;const h={provider:r,prefix:i,name:a};u.push(h)}),e}const ho=Object.create(null),cd=Object.create(null);function Gy(t,e){t.forEach(n=>{const s=n.provider;if(ho[s]===void 0)return;const o=ho[s],r=n.prefix,i=o[r];i&&(o[r]=i.filter(a=>a.id!==e))})}function FT(t,e){cd[t]===void 0&&(cd[t]=Object.create(null));const n=cd[t];n[e]||(n[e]=!0,setTimeout(()=>{if(n[e]=!1,ho[t]===void 0||ho[t][e]===void 0)return;const s=ho[t][e].slice(0);if(!s.length)return;const o=$r(t,e);let r=!1;s.forEach(i=>{const a=i.icons,l=a.pending.length;a.pending=a.pending.filter(c=>{if(c.prefix!==e)return!0;const u=c.name;if(o.icons[u]!==void 0)a.loaded.push({provider:t,prefix:e,name:u});else if(o.missing[u]!==void 0)a.missing.push({provider:t,prefix:e,name:u});else return r=!0,!0;return!1}),a.pending.length!==l&&(r||Gy([{provider:t,prefix:e}],i.id),i.callback(a.loaded.slice(0),a.missing.slice(0),a.pending.slice(0),i.abort))})}))}let _T=0;function OT(t,e,n){const s=_T++,o=Gy.bind(null,n,s);if(!e.pending.length)return o;const r={id:s,icons:e,callback:t,abort:o};return n.forEach(i=>{const a=i.provider,l=i.prefix;ho[a]===void 0&&(ho[a]=Object.create(null));const c=ho[a];c[l]===void 0&&(c[l]=[]),c[l].push(r)}),o}function MT(t,e=!0,n=!1){const s=[];return t.forEach(o=>{const r=typeof o=="string"?vu(o,!1,n):o;(!e||Qi(r,n))&&s.push({provider:r.provider,prefix:r.prefix,name:r.name})}),s}var qx={resources:[],index:0,timeout:2e3,rotate:750,random:!1,dataAfterTimeout:!1};function LT(t,e,n,s){const o=t.resources.length,r=t.random?Math.floor(Math.random()*o):t.index;let i;if(t.random){let I=t.resources.slice(0);for(i=[];I.length>1;){const C=Math.floor(Math.random()*I.length);i.push(I[C]),I=I.slice(0,C).concat(I.slice(C+1))}i=i.concat(I)}else i=t.resources.slice(r).concat(t.resources.slice(0,r));const a=Date.now();let l="pending",c=0,u,h=null,d=[],f=[];typeof s=="function"&&f.push(s);function p(){h&&(clearTimeout(h),h=null)}function m(){l==="pending"&&(l="aborted"),p(),d.forEach(I=>{I.status==="pending"&&(I.status="aborted")}),d=[]}function g(I,C){C&&(f=[]),typeof I=="function"&&f.push(I)}function x(){return{startTime:a,payload:e,status:l,queriesSent:c,queriesPending:d.length,subscribe:g,abort:m}}function b(){l="failed",f.forEach(I=>{I(void 0,u)})}function w(){d.forEach(I=>{I.status==="pending"&&(I.status="aborted")}),d=[]}function y(I,C,k){const N=C!=="success";switch(d=d.filter(T=>T!==I),l){case"pending":break;case"failed":if(N||!t.dataAfterTimeout)return;break;default:return}if(C==="abort"){u=k,b();return}if(N){u=k,d.length||(i.length?v():b());return}if(p(),w(),!t.random){const T=t.resources.indexOf(I.resource);T!==-1&&T!==t.index&&(t.index=T)}l="completed",f.forEach(T=>{T(k)})}function v(){if(l!=="pending")return;p();const I=i.shift();if(I===void 0){if(d.length){h=setTimeout(()=>{p(),l==="pending"&&(w(),b())},t.timeout);return}b();return}const C={status:"pending",resource:I,callback:(k,N)=>{y(C,k,N)}};d.push(C),c++,h=setTimeout(v,t.rotate),n(I,e,C.callback)}return setTimeout(v),x}function PT(t){if(typeof t!="object"||typeof t.resources!="object"||!(t.resources instanceof Array)||!t.resources.length)throw new Error("Invalid Reduncancy configuration");const e=Object.create(null);let n;for(n in qx)t[n]!==void 0?e[n]=t[n]:e[n]=qx[n];return e}function Hy(t){const e=PT(t);let n=[];function s(){n=n.filter(a=>a().status==="pending")}function o(a,l,c){const u=LT(e,a,l,(h,d)=>{s(),c&&c(h,d)});return n.push(u),u}function r(a){const l=n.find(c=>a(c));return l!==void 0?l:null}return{query:o,find:r,setIndex:a=>{e.index=a},getIndex:()=>e.index,cleanup:s}}function Xx(){}const ud=Object.create(null);function BT(t){if(ud[t]===void 0){const e=dp(t);if(!e)return;const n=Hy(e),s={config:e,redundancy:n};ud[t]=s}return ud[t]}function zT(t,e,n){let s,o;if(typeof t=="string"){const r=Kd(t);if(!r)return n(void 0,424),Xx;o=r.send;const i=BT(t);i&&(s=i.redundancy)}else{const r=up(t);if(r){s=Hy(r);const i=t.resources?t.resources[0]:"",a=Kd(i);a&&(o=a.send)}}return!s||!o?(n(void 0,424),Xx):s.query(e,o,n)().abort}const qd={};function Yx(){}const Jo=Object.create(null),hd=Object.create(null),dd=Object.create(null),fd=Object.create(null);function WT(t,e){dd[t]===void 0&&(dd[t]=Object.create(null));const n=dd[t];n[e]||(n[e]=!0,setTimeout(()=>{n[e]=!1,FT(t,e)}))}const Zx=Object.create(null);function VT(t,e,n){function s(){const a=(t===""?"":"@"+t+":")+e,l=Math.floor(Date.now()/6e4);Zx[a]<l&&(Zx[a]=l,console.error('Unable to retrieve icons for "'+a+'" because API is not configured properly.'))}hd[t]===void 0&&(hd[t]=Object.create(null));const o=hd[t];fd[t]===void 0&&(fd[t]=Object.create(null));const r=fd[t];Jo[t]===void 0&&(Jo[t]=Object.create(null));const i=Jo[t];o[e]===void 0?o[e]=n:o[e]=o[e].concat(n).sort(),r[e]||(r[e]=!0,setTimeout(()=>{r[e]=!1;const a=o[e];delete o[e];const l=Kd(t);if(!l){s();return}l.prepare(t,e,a).forEach(u=>{zT(t,u,(h,d)=>{const f=$r(t,e);if(typeof h!="object"){if(d!==404)return;const p=Date.now();u.icons.forEach(m=>{f.missing[m]=p})}else try{const p=cp(f,h);if(!p.length)return;const m=i[e];p.forEach(g=>{delete m[g]}),qd.store&&qd.store(t,h)}catch(p){console.error(p)}WT(t,e)})})}))}const UT=(t,e)=>{const n=MT(t,!0,Wy()),s=AT(n);if(!s.pending.length){let c=!0;return e&&setTimeout(()=>{c&&e(s.loaded,s.missing,s.pending,Yx)}),()=>{c=!1}}const o=Object.create(null),r=[];let i,a;s.pending.forEach(c=>{const u=c.provider,h=c.prefix;if(h===a&&u===i)return;i=u,a=h,r.push({provider:u,prefix:h}),Jo[u]===void 0&&(Jo[u]=Object.create(null));const d=Jo[u];d[h]===void 0&&(d[h]=Object.create(null)),o[u]===void 0&&(o[u]=Object.create(null));const f=o[u];f[h]===void 0&&(f[h]=[])});const l=Date.now();return s.pending.forEach(c=>{const u=c.provider,h=c.prefix,d=c.name,f=Jo[u][h];f[d]===void 0&&(f[d]=l,o[u][h].push(d))}),r.forEach(c=>{const u=c.provider,h=c.prefix;o[u][h].length&&VT(u,h,o[u][h])}),e?OT(e,s,r):Yx},jy="iconify2",wa="iconify",Ky=wa+"-count",qy=wa+"-version",Xy=36e5,GT=168,fp={local:!0,session:!0};let Xd=!1;const Yy={local:0,session:0},Zy={local:[],session:[]};let ec=typeof window=="undefined"?{}:window;function Jy(t){const e=t+"Storage";try{if(ec&&ec[e]&&typeof ec[e].length=="number")return ec[e]}catch{}return fp[t]=!1,null}function pp(t,e,n){try{return t.setItem(Ky,n.toString()),Yy[e]=n,!0}catch{return!1}}function Qy(t){const e=t.getItem(Ky);if(e){const n=parseInt(e);return n||0}return 0}function HT(t,e){try{t.setItem(qy,jy)}catch{}pp(t,e,0)}function jT(t){try{const e=Qy(t);for(let n=0;n<e;n++)t.removeItem(wa+n.toString())}catch{}}const e1=()=>{if(Xd)return;Xd=!0;const t=Math.floor(Date.now()/Xy)-GT;function e(n){const s=Jy(n);if(!s)return;const o=r=>{const i=wa+r.toString(),a=s.getItem(i);if(typeof a!="string")return!1;let l=!0;try{const c=JSON.parse(a);if(typeof c!="object"||typeof c.cached!="number"||c.cached<t||typeof c.provider!="string"||typeof c.data!="object"||typeof c.data.prefix!="string")l=!1;else{const u=c.provider,h=c.data.prefix,d=$r(u,h);l=cp(d,c.data).length>0}}catch{l=!1}return l||s.removeItem(i),l};try{const r=s.getItem(qy);if(r!==jy){r&&jT(s),HT(s,n);return}let i=Qy(s);for(let a=i-1;a>=0;a--)o(a)||(a===i-1?i--:Zy[n].push(a));pp(s,n,i)}catch{}}for(const n in fp)e(n)},KT=(t,e)=>{Xd||e1();function n(s){if(!fp[s])return!1;const o=Jy(s);if(!o)return!1;let r=Zy[s].shift();if(r===void 0&&(r=Yy[s],!pp(o,s,r+1)))return!1;try{const i={cached:Math.floor(Date.now()/Xy),provider:t,data:e};o.setItem(wa+r.toString(),JSON.stringify(i))}catch{return!1}return!0}!Object.keys(e.icons).length||(e.not_found&&(e=Object.assign({},e),delete e.not_found),n("local")||n("session"))},t1=/[\s,]+/;function qT(t,e){e.split(t1).forEach(n=>{switch(n.trim()){case"horizontal":t.hFlip=!0;break;case"vertical":t.vFlip=!0;break}})}function XT(t,e){e.split(t1).forEach(n=>{const s=n.trim();switch(s){case"left":case"center":case"right":t.hAlign=s;break;case"top":case"middle":case"bottom":t.vAlign=s;break;case"slice":case"crop":t.slice=!0;break;case"meet":t.slice=!1}})}function YT(t,e=0){const n=t.replace(/^-?[0-9.]*/,"");function s(o){for(;o<0;)o+=4;return o%4}if(n===""){const o=parseInt(t);return isNaN(o)?0:s(o)}else if(n!==t){let o=0;switch(n){case"%":o=25;break;case"deg":o=90}if(o){let r=parseFloat(t.slice(0,t.length-n.length));return isNaN(r)?0:(r=r/o,r%1===0?s(r):0)}}return e}const ZT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink","aria-hidden":!0,role:"img"};let io={};["horizontal","vertical"].forEach(t=>{["Align","Flip"].forEach(e=>{const s={attr:t.slice(0,1)+e,boolean:e==="Flip"};io[t+"-"+e.toLowerCase()]=s,io[t.slice(0,1)+"-"+e.toLowerCase()]=s,io[t+e]=s})});const Jx=(t,e)=>{const n=pT(jx,e),s={...ZT};let o=typeof e.style=="object"&&!(e.style instanceof Array)?{...e.style}:{};for(let l in e){const c=e[l];if(c!==void 0)switch(l){case"icon":case"style":case"onLoad":break;case"inline":case"hFlip":case"vFlip":n[l]=c===!0||c==="true"||c===1;break;case"flip":typeof c=="string"&&qT(n,c);break;case"align":typeof c=="string"&&XT(n,c);break;case"color":o.color=c;break;case"rotate":typeof c=="string"?n[l]=YT(c):typeof c=="number"&&(n[l]=c);break;case"ariaHidden":case"aria-hidden":c!==!0&&c!=="true"&&delete s["aria-hidden"];break;default:io[l]!==void 0?io[l].boolean&&(c===!0||c==="true"||c===1)?n[io[l].attr]=!0:!io[l].boolean&&typeof c=="string"&&c!==""&&(n[io[l].attr]=c):jx[l]===void 0&&(s[l]=c)}}const r=bT(t,n);for(let l in r.attributes)s[l]=r.attributes[l];r.inline&&o.verticalAlign===void 0&&o["vertical-align"]===void 0&&(o.verticalAlign="-0.125em");let i=0,a=e.id;return typeof a=="string"&&(a=a.replace(/-/g,"_")),s.innerHTML=IT(r.body,a?()=>a+"ID"+i++:"iconifyVue"),Object.keys(o).length>0&&(s.style=o),FN("svg",s)};Wy(!0);CT("",DT);if(typeof document!="undefined"&&typeof window!="undefined"){qd.store=KT,e1();const t=window;if(t.IconifyPreload!==void 0){const e=t.IconifyPreload,n="Invalid IconifyPreload syntax.";typeof e=="object"&&e!==null&&(e instanceof Array?e:[e]).forEach(s=>{try{(typeof s!="object"||s===null||s instanceof Array||typeof s.icons!="object"||typeof s.prefix!="string"||!fT(s))&&console.error(n)}catch{console.error(n)}})}if(t.IconifyProviders!==void 0){const e=t.IconifyProviders;if(typeof e=="object"&&e!==null)for(let n in e){const s="IconifyProviders["+n+"] is invalid.";try{const o=e[n];if(typeof o!="object"||!o||o.resources===void 0)continue;$T(n,o)||console.error(s)}catch{console.error(s)}}}}const JT=wu({body:""}),QT=gu({inheritAttrs:!1,data(){return{iconMounted:!1,counter:0}},mounted(){this._name="",this._loadingIcon=null,this.iconMounted=!0},unmounted(){this.abortLoading()},methods:{abortLoading(){this._loadingIcon&&(this._loadingIcon.abort(),this._loadingIcon=null)},getIcon(t,e){if(typeof t=="object"&&t!==null&&typeof t.body=="string")return this._name="",this.abortLoading(),{data:wu(t)};let n;if(typeof t!="string"||(n=vu(t,!1,!0))===null)return this.abortLoading(),null;const s=hT(n);if(s===null)return(!this._loadingIcon||this._loadingIcon.name!==t)&&(this.abortLoading(),this._name="",this._loadingIcon={name:t,abort:UT([n],()=>{this.counter++})}),null;this.abortLoading(),this._name!==t&&(this._name=t,e&&e(t));const o=["iconify"];return n.prefix!==""&&o.push("iconify--"+n.prefix),n.provider!==""&&o.push("iconify--"+n.provider),{data:s,classes:o}}},render(){this.counter;const t=this.$attrs,e=this.iconMounted?this.getIcon(t.icon,t.onLoad):null;if(!e)return Jx(JT,t);let n=t;return e.classes&&(n={...t,class:(typeof t.class=="string"?t.class+" ":"")+e.classes.join(" ")}),Jx(e.data,n)}});function e2(t){return{all:t=t||new Map,on:function(e,n){var s=t.get(e);s?s.push(n):t.set(e,[n])},off:function(e,n){var s=t.get(e);s&&(n?s.splice(s.indexOf(n)>>>0,1):t.set(e,[]))},emit:function(e,n){var s=t.get(e);s&&s.slice().map(function(o){o(n)}),(s=t.get("*"))&&s.slice().map(function(o){o(e,n)})}}}var Qx;const va=typeof window!="undefined",t2=t=>typeof t=="string",pd=()=>{};va&&((Qx=window==null?void 0:window.navigator)==null?void 0:Qx.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function n2(t,e){function n(...s){t(()=>e.apply(this,s),{fn:e,thisArg:this,args:s})}return n}const n1=t=>t();function s2(t=n1){const e=An(!0);function n(){e.value=!1}function s(){e.value=!0}return{isActive:e,pause:n,resume:s,eventFilter:(...r)=>{e.value&&t(...r)}}}function o2(t){return Kk()?(qk(t),!0):!1}var eb=Object.getOwnPropertySymbols,r2=Object.prototype.hasOwnProperty,i2=Object.prototype.propertyIsEnumerable,a2=(t,e)=>{var n={};for(var s in t)r2.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&eb)for(var s of eb(t))e.indexOf(s)<0&&i2.call(t,s)&&(n[s]=t[s]);return n};function l2(t,e,n={}){const s=n,{eventFilter:o=n1}=s,r=a2(s,["eventFilter"]);return qr(t,n2(o,e),r)}var c2=Object.defineProperty,u2=Object.defineProperties,h2=Object.getOwnPropertyDescriptors,Rc=Object.getOwnPropertySymbols,s1=Object.prototype.hasOwnProperty,o1=Object.prototype.propertyIsEnumerable,tb=(t,e,n)=>e in t?c2(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,d2=(t,e)=>{for(var n in e||(e={}))s1.call(e,n)&&tb(t,n,e[n]);if(Rc)for(var n of Rc(e))o1.call(e,n)&&tb(t,n,e[n]);return t},f2=(t,e)=>u2(t,h2(e)),p2=(t,e)=>{var n={};for(var s in t)s1.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&Rc)for(var s of Rc(t))e.indexOf(s)<0&&o1.call(t,s)&&(n[s]=t[s]);return n};function m2(t,e,n={}){const s=n,{eventFilter:o}=s,r=p2(s,["eventFilter"]),{eventFilter:i,pause:a,resume:l,isActive:c}=s2(o);return{stop:l2(t,e,f2(d2({},r),{eventFilter:i})),pause:a,resume:l,isActive:c}}function g2(t){var e;const n=oa(t);return(e=n==null?void 0:n.$el)!=null?e:n}const Dc=va?window:void 0;va&&window.document;va&&window.navigator;va&&window.location;function x2(...t){let e,n,s,o;if(t2(t[0])?([n,s,o]=t,e=Dc):[e,n,s,o]=t,!e)return pd;let r=pd;const i=qr(()=>g2(e),l=>{r(),l&&(l.addEventListener(n,s,o),r=()=>{l.removeEventListener(n,s,o),r=pd})},{immediate:!0,flush:"post"}),a=()=>{i(),r()};return o2(a),a}const Yd=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},Zd="__vueuse_ssr_handlers__";Yd[Zd]=Yd[Zd]||{};const b2=Yd[Zd];function y2(t,e){return b2[t]||e}function w2(t){return t==null?"any":t instanceof Set?"set":t instanceof Map?"map":t instanceof Date?"date":typeof t=="boolean"?"boolean":typeof t=="string"?"string":typeof t=="object"||Array.isArray(t)?"object":Number.isNaN(t)?"any":"number"}const v2={boolean:{read:t=>t==="true",write:t=>String(t)},object:{read:t=>JSON.parse(t),write:t=>JSON.stringify(t)},number:{read:t=>Number.parseFloat(t),write:t=>String(t)},any:{read:t=>t,write:t=>String(t)},string:{read:t=>t,write:t=>String(t)},map:{read:t=>new Map(JSON.parse(t)),write:t=>JSON.stringify(Array.from(t.entries()))},set:{read:t=>new Set(JSON.parse(t)),write:t=>JSON.stringify(Array.from(t))},date:{read:t=>new Date(t),write:t=>t.toISOString()}};function I2(t,e,n,s={}){var o;const{flush:r="pre",deep:i=!0,listenToStorageChanges:a=!0,writeDefaults:l=!0,shallow:c,window:u=Dc,eventFilter:h,onError:d=I=>{console.error(I)}}=s,f=(c?vS:An)(e);if(!n)try{n=y2("getDefaultStorage",()=>{var I;return(I=Dc)==null?void 0:I.localStorage})()}catch(I){d(I)}if(!n)return f;const p=oa(e),m=w2(p),g=(o=s.serializer)!=null?o:v2[m],{pause:x,resume:b}=m2(f,()=>w(f.value),{flush:r,deep:i,eventFilter:h});return u&&a&&x2(u,"storage",v),v(),f;function w(I){try{I==null?n.removeItem(t):n.setItem(t,g.write(I))}catch(C){d(C)}}function y(I){if(!(I&&I.key!==t)){x();try{const C=I?I.newValue:n.getItem(t);return C==null?(l&&p!==null&&n.setItem(t,g.write(p)),p):typeof C!="string"?C:g.read(C)}catch(C){d(C)}finally{b()}}}function v(I){I&&I.key!==t||(f.value=y(I))}}function C2(t,e,n={}){const{window:s=Dc}=n;return I2(t,e,s==null?void 0:s.localStorage,n)}var nb;(function(t){t.UP="UP",t.RIGHT="RIGHT",t.DOWN="DOWN",t.LEFT="LEFT",t.NONE="NONE"})(nb||(nb={}));const $2={key:0},k2={key:0},S2={key:1},N2=gu({__name:"MineBlock",props:{block:null,isCheat:{type:Boolean}},emits:["lrclick","lclick","rclick"],setup(t,{emit:e}){const n=["text-transparent","text-blue-500","text-green-500","text-yellow-500","text-orange-500","text-red-500","text-purple-500","text-pink-500","text-teal-500"];function s(r){return r.isFlag?"bg-gray-500/10":r.isOpen?r.isMine?"bg-red-500/50":n[r.aroundMines]:"bg-gray-500/10 hover:bg-gray-500/20"}function o(r){r.buttons===3?e("lrclick"):r.buttons===1?e("lclick"):r.buttons===2&&e("rclick")}return(r,i)=>{const a=QS("Icon");return Pt(),en("div",null,[Ee("button",{class:ya(["flex justify-center items-center flex-col border-2 m-0.5",s(t.block)]),style:{"min-width":"2rem","min-height":"2rem"},onMousedown:i[0]||(i[0]=l=>o(l))},[t.block.isFlag?(Pt(),en("div",$2,[Wt(a,{class:"text-red-500",icon:"bxs:flag-checkered",width:"22"})])):t.block.isOpen||t.isCheat?(Pt(),en(wn,{key:1},[t.block.isMine?(Pt(),en("div",k2,[Wt(a,{class:"text-black",icon:"mdi:mine"})])):(Pt(),en("div",S2,Ns(t.block.aroundMines),1))],64)):Ec("",!0)],34)])}}});var Gn=(t=>(t[t.UP=0]="UP",t[t.DOWN=1]="DOWN",t[t.LEFT=2]="LEFT",t[t.RIGHT=3]="RIGHT",t[t.CLICK=4]="CLICK",t))(Gn||{}),dn=(t=>(t[t.WIN=0]="WIN",t[t.LOSE=1]="LOSE",t[t.RUNNING=2]="RUNNING",t[t.STOP=3]="STOP",t))(dn||{});const T2={isMine:!1,isOpen:!1,isFlag:!1};class E2{constructor(e){Lt(this,"isMine");Lt(this,"isOpen");Lt(this,"isFlag");Lt(this,"aroundMines");Lt(this,"x");Lt(this,"y");const n=e||T2;this.isMine=n.isMine||!1,this.isOpen=n.isOpen||!1,this.isFlag=n.isFlag||!1,this.x=n.x||0,this.y=n.y||0,this.aroundMines=0}}const R2={width:5,height:5,mine:5},D2=[[0,1],[0,-1],[-1,0],[1,0]],sb=[[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]];class ob{constructor(e){Lt(this,"status");Lt(this,"width");Lt(this,"height");Lt(this,"mine");Lt(this,"remaining");Lt(this,"blocks");Lt(this,"isCheat");Lt(this,"isFirstClick");const n=Object.assign.call(R2,e||{});this.status=dn.STOP,this.width=n.width,this.height=n.height,this.mine=n.mine,this.remaining=n.mine,this.isCheat=!1,this.isFirstClick=!0,this.blocks=[],this.initGame()}initGame(){for(let e=0;e<this.width;e++){this.blocks.push([]);for(let n=0;n<this.height;n++)this.blocks[e].push(new E2({x:e,y:n}))}}generateMines(e){let n=0;for(;n<this.mine;){const s=Math.round(Math.random()*(this.width-1)),o=Math.round(Math.random()*(this.height-1));!this.blocks[s][o].isMine&&!(s===e.x&&o===e.y)&&(this.blocks[s][o].isMine=!0,n++,this.getBlocksFromDir(this.blocks[s][o],sb).forEach(i=>{i.aroundMines++}))}}openBlock(e){if(this.isFirstClick&&this.status===dn.STOP&&(this.isFirstClick=!1,this.status=dn.RUNNING,this.generateMines(e)),this.status===dn.RUNNING&&!(e.isFlag||e.isOpen)){if(e.isMine){this.status=dn.LOSE,this.onLose();return}e.isOpen=!0,this.expandZero(e),this.checkGameStatus()}}expandZero(e){const n=this.getBlocksFromDir(e,D2);for(const s of n)s.isFlag||s.isMine||s.isOpen||(s.isOpen=!0,this.expandZero(s))}autoOpen(e){if(this.status!==dn.RUNNING)return;const n=this.getBlocksFromDir(e,sb);let s=0;const o=[];for(const r of n)r.isFlag?s++:o.push(r);s===e.aroundMines&&o.forEach(r=>{this.openBlock(r)})}setFlag(e){this.status!==dn.RUNNING||e.isOpen||this.remaining<=0||(e.isFlag=e.isFlag!==!0,e.isFlag?this.remaining--:this.remaining++)}getBlocksFromDir(e,n){const s=[],o=e.x,r=e.y;for(const[i,a]of n){const l=o+i,c=r+a;l>=0&&l<this.width&&c>=0&&c<this.height&&s.push(this.blocks[l][c])}return s}toggleCheat(){this.isCheat=this.isCheat!==!0}checkGameStatus(){const e=this.blocks.flat();let n=!0;for(const s of e){if(s.isMine&&s.isOpen){this.status=dn.LOSE,this.onLose();return}!s.isMine&&!s.isOpen&&(n=!1)}n&&(this.status=dn.WIN,this.onWin())}onLose(){this.blocks.flat().forEach(e=>{e.isOpen=!0}),alert("you lose!!")}onWin(){alert("you win!!")}}var Iu=(t,e)=>{const n=t.__vccOpts||t;for(const[s,o]of e)n[s]=o;return n};const r1=t=>(gy("data-v-0d2a0471"),t=t(),xy(),t),A2={class:"flex justify-center flex-wrap items-center"},F2={class:"flex-none"},_2={class:"flex-1 text-center"},O2=["disabled"],M2={class:"flex items-center justify-center"},L2=r1(()=>Ee("br",null,null,-1)),P2=r1(()=>Ee("br",null,null,-1)),B2=gu({__name:"MineSweeper",setup(t){const e=An({width:5,height:5,mine:5}),n=An(new ob(e.value)),s=An({x:0,y:0}),o=An(0);let r=-1;const i=C2("mine-records",{}),{proxy:a}=My(),l=a.$mitt;l.on("predict",u=>{n.value&&(n.value.status===dn.RUNNING||n.value.status===dn.STOP)&&(u===Gn.LEFT&&(s.value.x=s.value.x===0?0:s.value.x-1),u===Gn.RIGHT&&(s.value.x=s.value.x===n.value.width-1?n.value.width-1:s.value.x+1),u===Gn.UP&&(s.value.y=s.value.y===0?0:s.value.y-1),u===Gn.DOWN&&(s.value.y=s.value.y===n.value.height-1?n.value.height-1:s.value.y+1),u===Gn.CLICK&&n.value.openBlock(n.value.blocks[s.value.x][s.value.y]))}),qr(()=>n.value.status,u=>{l.emit("gameStatusChange",u),u===dn.RUNNING?(o.value=0,r=setInterval(()=>{o.value++},1e3)):(clearInterval(r),u===dn.WIN&&(i.value[JSON.stringify(e.value)]?(i.value[JSON.stringify(e.value)].push(o.value),i.value[JSON.stringify(e.value)].sort()):i.value[JSON.stringify(e.value)]=[]))});function c(){e.value.mine>=e.value.height*e.value.width&&(e.value.mine=e.value.height*e.value.width-1),e.value.mine<=0&&(e.value.mine=1),i.value[JSON.stringify(e.value)]||(i.value[JSON.stringify(e.value)]=[]),n.value=new ob(e.value)}return(u,h)=>{var f;const d=N2;return Pt(),en("div",A2,[Ee("div",F2,[Ee("div",{class:"text-center"},[Ee("button",{class:"border-yellow-400 text-yellow-500 border-2 p-1 m-2 rounded-md",onClick:c}," Start Game ")]),Ee("div",null,[Hs(Ee("input",{"onUpdate:modelValue":h[0]||(h[0]=p=>e.value.width=p),type:"number",placeholder:"width",min:1,step:1,class:"input-props"},null,512),[[Zo,e.value.width]])]),Ee("div",null,[Hs(Ee("input",{"onUpdate:modelValue":h[1]||(h[1]=p=>e.value.height=p),type:"number",placeholder:"height",min:1,step:1,class:"input-props"},null,512),[[Zo,e.value.height]])]),Ee("div",null,[Hs(Ee("input",{"onUpdate:modelValue":h[2]||(h[2]=p=>e.value.mine=p),type:"number",placeholder:"mine",min:1,step:1,class:"input-props"},null,512),[[Zo,e.value.mine]])])]),Ee("div",_2,[n.value?(Pt(),en(wn,{key:0},[Ee("div",null,[Ee("button",{disabled:n.value.status!==oa(dn).RUNNING,class:"border-red-400 text-red-500 border-2 p-1 rounded-md",onClick:h[3]||(h[3]=(...p)=>{var m,g;return((m=n.value)==null?void 0:m.toggleCheat)&&((g=n.value)==null?void 0:g.toggleCheat(...p))})}," Toggle Cheat ",8,O2),Ee("p",null," Time: "+Ns(o.value),1),Ee("p",null," Remaining Mines: "+Ns(n.value.remaining),1)]),Ee("div",M2,[(Pt(!0),en(wn,null,Ld((f=n.value)==null?void 0:f.blocks,(p,m)=>(Pt(),en("div",{key:m,class:"flex items-center justify-center flex-col"},[(Pt(!0),en(wn,null,Ld(p,(g,x)=>(Pt(),_y(d,{key:m*n.value.height+x,block:g,"is-cheat":n.value.isCheat,class:ya({active:g.x===s.value.x&&g.y===s.value.y}),onLclick:b=>{var w;return(w=n.value)==null?void 0:w.openBlock(g)},onLrclick:b=>{var w;return(w=n.value)==null?void 0:w.autoOpen(g)},onRclick:b=>{var w;return(w=n.value)==null?void 0:w.setFlag(g)},onContextmenu:h[4]||(h[4]=eT(function(){},["prevent"]))},null,8,["block","is-cheat","class","onLclick","onLrclick","onRclick"]))),128))]))),128))]),Ee("div",null,[Ee("p",null,[xc(" Your Records in "),L2,xc(" Game(width:"+Ns(e.value.width)+",height:"+Ns(e.value.height)+",mine:"+Ns(e.value.mine)+"): ",1),P2,xc(" "+Ns(oa(i)[JSON.stringify(e.value)]),1)])])],64)):Ec("",!0)])])}}});var z2=Iu(B2,[["__scopeId","data-v-0d2a0471"]]);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W2=1e-7,V2=1e-4;class i1{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class mp{refCount(e){return Rn("refCount")}incRef(e){return Rn("incRef")}timerAvailable(){return!0}time(e){return Rn("time")}read(e){return Rn("read")}readSync(e){return Rn("readSync")}readToGPU(e,n){return Rn("readToGPU")}numDataIds(){return Rn("numDataIds")}disposeData(e,n){return Rn("disposeData")}write(e,n,s){return Rn("write")}move(e,n,s,o,r){return Rn("move")}memory(){return Rn("memory")}floatPrecision(){return Rn("floatPrecision")}epsilon(){return this.floatPrecision()===32?W2:V2}dispose(){return Rn("dispose")}}function Rn(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,Br(t,e,n)}function ur(t,e,n){return Math.max(t,Math.min(e,n))}function gp(t){return t%2===0?t:t+1}function Br(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function G2(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function $(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function ts(t,e,n=""){$(Ye(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function xp(t){$(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function si(t,e=[],n=!1){if(e==null&&(e=[]),Array.isArray(t)||Ws(t)&&!n)for(let s=0;s<t.length;++s)si(t[s],e,n);else e.push(t);return e}function q(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function Ye(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function oi(t){return t%1===0}function Jd(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Xr(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function rb(t,e=o=>0,n,s=setTimeout){return new Promise((o,r)=>{let i=0;const a=()=>{if(t()){o();return}i++;const l=e(i);if(n!=null&&i>=n){r();return}s(a,l)};a()})}function a1(t,e){let n=1,s=-1;for(let r=0;r<t.length;++r)if(t[r]>=0)n*=t[r];else if(t[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(t[r]<0)throw Error(`Shapes can not be < 0. Found ${t[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const o=t.slice();return o[s]=e/n,o}function We(t,e){const n=e.length;return t=t==null?e.map((s,o)=>o):[].concat(t),$(t.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),$(t.every(s=>oi(s)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(s=>s<0?n+s:s)}function ko(t,e){const n=[],s=[],o=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||o?null:We(e,t).sort();let i=0;for(let a=0;a<t.length;++a){if(r!=null){if(r[i]===a&&t[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${t[a]}' is not 1`);(r[i]==null||r[i]>a)&&t[a]===1&&(n.push(t[a]),s.push(a)),r[i]<=a&&i++}t[a]!==1&&(n.push(t[a]),s.push(a))}return{newShape:n,keptDims:s}}function Ut(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else throw new Error(`Unknown data type ${t}`);return n}function Ft(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function H2(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function j2(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function l1(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function Ws(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function Qd(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function K2(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Ia(t){return typeof t=="string"||t instanceof String}function q2(t){return typeof t=="boolean"}function ef(t){return typeof t=="number"}function Ca(t){return Array.isArray(t)?Ca(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":ef(t)?"float32":Ia(t)?"string":q2(t)?"bool":"float32"}function tf(t){return!!(t&&t.constructor&&t.call&&t.apply)}function nf(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function Se(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function c1(t,e,n,s=!1){const o=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let i=0;i<r;i++)o[i]=n[t+i]}else{const r=e[0],i=e.slice(1),a=i.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<r;l++)o[l]=c1(t+l*a,i,n,s)}return o}function ms(t,e,n=!1){if(t.length===0)return e[0];const s=t.reduce((o,r)=>o*r)*(n?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return c1(0,t,e,n)}function bp(t,e){const n=Xt(t,e);for(let s=0;s<n.length;s++)n[s]=1;return n}function Xt(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function u1(t,e){const n=t.reduce((s,o)=>s*o,1);if(e==null||e==="float32")return ms(t,new Float32Array(n));if(e==="int32")return ms(t,new Int32Array(n));if(e==="bool")return ms(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function h1(t){t.forEach(e=>{$(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function Os(t,e,n){if(e===0)return 0;if(e===1)return t[0];let s=t[t.length-1];for(let o=0;o<t.length-1;++o)s+=n[o]*t[o];return s}function vi(t,e,n){if(e===0)return[];if(e===1)return[t];const s=new Array(e);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(t/n[o]),t-=s[o]*n[o];return s[s.length-1]=t,s}function d1(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ib="tfjsflags";class X2{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Y2,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,s){if(this.flagRegistry[e]={evaluationFn:n,setHook:s},this.urlFlags[e]!=null){const o=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(d1(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const e=this.getQueryParams(this.global.location.search);ib in e&&e[ib].split(",").forEach(s=>{const[o,r]=s.split(":");this.urlFlags[o]=J2(o,r)})}}function Y2(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(Z2(e,s[0],s[1]),s.join("="))),e}function Z2(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function J2(t,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}function H(){return f1}let f1=null;function Q2(t){f1=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let md;function p1(){if(md==null){let t;if(typeof window!="undefined")t=window;else if(typeof global!="undefined")t=global;else if(typeof process!="undefined")t=process;else if(typeof self!="undefined")t=self;else throw new Error("Could not find a global object");md=t}return md}function eE(){const t=p1();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function yp(t,e){const n=eE();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const Cu="Abs",$a="Acos",ka="Acosh",Ii="Add",wp="AddN",vp="All",Ip="Any",$u="ArgMax",ku="ArgMin",Sa="Asin",Na="Asinh",Ta="Atan",Ea="Atanh",Ra="Atan2",Su="AvgPool",Cp="AvgPoolGrad",Nu="AvgPool3D",$p="AvgPool3DGrad",Tu="BatchMatMul",Eu="BatchToSpaceND",kp="Bincount",tE="BroadcastTo",m1="BroadcastArgs",Da="Cast",Aa="Ceil",Fa="ClipByValue",Sp="Complex",Ru="ComplexAbs",Du="Concat",Au="Conv2D",Np="Conv2DBackpropFilter",Fu="Conv2DBackpropInput",_u="Conv3D",Tp="Conv3DBackpropFilterV2",Ep="Conv3DBackpropInputV2",_a="Cos",Oa="Cosh",Rp="Cumprod",Ou="Cumsum",Dp="CropAndResize",g1="DenseBincount",Ap="DepthToSpace",Mu="DepthwiseConv2dNative",Fp="DepthwiseConv2dNativeBackpropFilter",_p="DepthwiseConv2dNativeBackpropInput",x1="Diag",Lu="Dilation2D",sf="Dilation2DBackpropInput",of="Dilation2DBackpropFilter",Ma="RealDiv",b1="Einsum",La="Elu",Op="EluGrad",Pa="Erf",Pu="Equal",Ba="Exp",Bu="ExpandDims",za="Expm1",Mp="FFT",Lp="Fill",Pp="FlipLeftRight",Wa="Floor",Va="FloorDiv",zu="FusedBatchNorm",Wu="GatherV2",y1="GatherNd",Vu="Greater",Ua="GreaterEqual",Ga="Identity",Bp="IFFT",zp="Imag",Ha="IsFinite",ja="IsInf",Ka="IsNan",Uu="LeakyRelu",Gu="Less",Hu="LessEqual",w1="LinSpace",qa="Log",Xa="Log1p",ju="LogicalAnd",Ku="LogicalNot",qu="LogicalOr",nE="LogSoftmax",Xu="LRN",Wp="LRNGrad",Yu="Max",Ya="Maximum",Zu="MaxPool",Vp="MaxPoolGrad",Ju="MaxPool3D",Up="MaxPool3DGrad",v1="MaxPoolWithArgmax",Qu="Mean",eh="Min",Za="Minimum",th="MirrorPad",Ja="Mod",I1="Multinomial",Qa="Multiply",nh="Neg",sh="NotEqual",Gp="NonMaxSuppressionV3",Hp="NonMaxSuppressionV4",jp="NonMaxSuppressionV5",oh="OnesLike",rh="OneHot",ih="Pack",ah="PadV2",el="Pow",lh="Prelu",ch="Prod",C1="RaggedGather",$1="RaggedTensorToTensor",Kp="Range",qp="Real",tl="Reciprocal",nl="Relu",uh="Reshape",hh="ResizeNearestNeighbor",Xp="ResizeNearestNeighborGrad",dh="ResizeBilinear",Yp="ResizeBilinearGrad",sl="Relu6",fh="Reverse",ol="Round",rl="Rsqrt",k1="ScatterNd",S1="SearchSorted",ph="Select",il="Selu",mh="Slice",al="Sin",ll="Sinh",cl="Sign",ul="Sigmoid",hl="Softplus",dl="Sqrt",gh="Sum",xh="SpaceToBatchND",bh="SplitV",yh="Softmax",Zp="SparseFillEmptyRows",Jp="SparseReshape",Qp="SparseSegmentMean",em="SparseSegmentSum",N1="SparseToDense",fl="SquaredDifference",tm="Square",nm="StridedSlice",sm="StringNGrams",om="StringSplit",rm="StringToHashBucketFast",pl="Sub",ml="Tan",gl="Tanh",xl="Tile",im="TopK",am="Transform",Yr="Transpose",lm="Unique",wh="Unpack",vh="UnsortedSegmentSum",Ih="ZerosLike",bl="Step",rf="FromPixels",cm="RotateWithOffset",Ac="_FusedMatMul",Fc="FusedConv2D",T1="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(...t){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...t)}function sE(...t){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c=yp("kernelRegistry",()=>new Map),af=yp("gradRegistry",()=>new Map);function lf(t,e){const n=R1(t,e);return _c.get(n)}function ab(t){return af.get(t)}function lb(t){const e=_c.entries(),n=[];for(;;){const{done:s,value:o}=e.next();if(s)break;const[r,i]=o,[a]=r.split("_");a===t&&n.push(i)}return n}function E1(t){const{kernelName:e,backendName:n}=t,s=R1(e,n);_c.has(s)&&_n(`The kernel '${e}' for backend '${n}' is already registered`),_c.set(s,t)}function oE(t){const{kernelName:e}=t;af.has(e)&&H().getBool("DEBUG")&&_n(`Overriding the gradient for '${e}'`),af.set(e,t)}function R1(t,e){return`${e}_${t}`}var kr=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},cf=ct,Kn=null;try{Kn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ct(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}ct.prototype.__isLong__;Object.defineProperty(ct.prototype,"__isLong__",{value:!0});function En(t){return(t&&t.__isLong__)===!0}ct.isLong=En;var cb={},ub={};function Sr(t,e){var n,s,o;return e?(t>>>=0,(o=0<=t&&t<256)&&(s=ub[t],s)?s:(n=ut(t,(t|0)<0?-1:0,!0),o&&(ub[t]=n),n)):(t|=0,(o=-128<=t&&t<128)&&(s=cb[t],s)?s:(n=ut(t,t<0?-1:0,!1),o&&(cb[t]=n),n))}ct.fromInt=Sr;function qn(t,e){if(isNaN(t))return e?Qo:Xn;if(e){if(t<0)return Qo;if(t>=D1)return _1}else{if(t<=-db)return In;if(t+1>=db)return F1}return t<0?qn(-t,e).neg():ut(t%ri|0,t/ri|0,e)}ct.fromNumber=qn;function ut(t,e,n){return new ct(t,e,n)}ct.fromBits=ut;var Oc=Math.pow;function um(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return Xn;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return um(t.substring(1),e,n).neg();for(var o=qn(Oc(n,8)),r=Xn,i=0;i<t.length;i+=8){var a=Math.min(8,t.length-i),l=parseInt(t.substring(i,i+a),n);if(a<8){var c=qn(Oc(n,a));r=r.mul(c).add(qn(l))}else r=r.mul(o),r=r.add(qn(l))}return r.unsigned=e,r}ct.fromString=um;function ws(t,e){return typeof t=="number"?qn(t,e):typeof t=="string"?um(t,e):ut(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}ct.fromValue=ws;var hb=1<<16,rE=1<<24,ri=hb*hb,D1=ri*ri,db=D1/2,fb=Sr(rE),Xn=Sr(0);ct.ZERO=Xn;var Qo=Sr(0,!0);ct.UZERO=Qo;var Vr=Sr(1);ct.ONE=Vr;var A1=Sr(1,!0);ct.UONE=A1;var uf=Sr(-1);ct.NEG_ONE=uf;var F1=ut(-1,2147483647,!1);ct.MAX_VALUE=F1;var _1=ut(-1,-1,!0);ct.MAX_UNSIGNED_VALUE=_1;var In=ut(0,-2147483648,!1);ct.MIN_VALUE=In;var he=ct.prototype;he.toInt=function(){return this.unsigned?this.low>>>0:this.low};he.toNumber=function(){return this.unsigned?(this.high>>>0)*ri+(this.low>>>0):this.high*ri+(this.low>>>0)};he.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(In)){var n=qn(e),s=this.div(n),o=s.mul(n).sub(this);return s.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=qn(Oc(e,6),this.unsigned),i=this,a="";;){var l=i.div(r),c=i.sub(l.mul(r)).toInt()>>>0,u=c.toString(e);if(i=l,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};he.getHighBits=function(){return this.high};he.getHighBitsUnsigned=function(){return this.high>>>0};he.getLowBits=function(){return this.low};he.getLowBitsUnsigned=function(){return this.low>>>0};he.getNumBitsAbs=function(){if(this.isNegative())return this.eq(In)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&(e&1<<n)==0;n--);return this.high!=0?n+33:n+1};he.isZero=function(){return this.high===0&&this.low===0};he.eqz=he.isZero;he.isNegative=function(){return!this.unsigned&&this.high<0};he.isPositive=function(){return this.unsigned||this.high>=0};he.isOdd=function(){return(this.low&1)===1};he.isEven=function(){return(this.low&1)===0};he.equals=function(e){return En(e)||(e=ws(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};he.eq=he.equals;he.notEquals=function(e){return!this.eq(e)};he.neq=he.notEquals;he.ne=he.notEquals;he.lessThan=function(e){return this.comp(e)<0};he.lt=he.lessThan;he.lessThanOrEqual=function(e){return this.comp(e)<=0};he.lte=he.lessThanOrEqual;he.le=he.lessThanOrEqual;he.greaterThan=function(e){return this.comp(e)>0};he.gt=he.greaterThan;he.greaterThanOrEqual=function(e){return this.comp(e)>=0};he.gte=he.greaterThanOrEqual;he.ge=he.greaterThanOrEqual;he.compare=function(e){if(En(e)||(e=ws(e)),this.eq(e))return 0;var n=this.isNegative(),s=e.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};he.comp=he.compare;he.negate=function(){return!this.unsigned&&this.eq(In)?In:this.not().add(Vr)};he.neg=he.negate;he.add=function(e){En(e)||(e=ws(e));var n=this.high>>>16,s=this.high&65535,o=this.low>>>16,r=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,c=e.low&65535,u=0,h=0,d=0,f=0;return f+=r+c,d+=f>>>16,f&=65535,d+=o+l,h+=d>>>16,d&=65535,h+=s+a,u+=h>>>16,h&=65535,u+=n+i,u&=65535,ut(d<<16|f,u<<16|h,this.unsigned)};he.subtract=function(e){return En(e)||(e=ws(e)),this.add(e.neg())};he.sub=he.subtract;he.multiply=function(e){if(this.isZero())return Xn;if(En(e)||(e=ws(e)),Kn){var n=Kn.mul(this.low,this.high,e.low,e.high);return ut(n,Kn.get_high(),this.unsigned)}if(e.isZero())return Xn;if(this.eq(In))return e.isOdd()?In:Xn;if(e.eq(In))return this.isOdd()?In:Xn;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(fb)&&e.lt(fb))return qn(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,o=this.high&65535,r=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,c=e.low>>>16,u=e.low&65535,h=0,d=0,f=0,p=0;return p+=i*u,f+=p>>>16,p&=65535,f+=r*u,d+=f>>>16,f&=65535,f+=i*c,d+=f>>>16,f&=65535,d+=o*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,h+=s*u+o*c+r*l+i*a,h&=65535,ut(f<<16|p,h<<16|d,this.unsigned)};he.mul=he.multiply;he.divide=function(e){if(En(e)||(e=ws(e)),e.isZero())throw Error("division by zero");if(Kn){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Kn.div_u:Kn.div_s)(this.low,this.high,e.low,e.high);return ut(n,Kn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Qo:Xn;var s,o,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Qo;if(e.gt(this.shru(1)))return A1;r=Qo}else{if(this.eq(In)){if(e.eq(Vr)||e.eq(uf))return In;if(e.eq(In))return Vr;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(Xn)?e.isNegative()?Vr:uf:(o=this.sub(e.mul(s)),r=s.add(o.div(e)),r)}else if(e.eq(In))return this.unsigned?Qo:Xn;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=Xn}for(o=this;o.gte(e);){s=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:Oc(2,a-48),c=qn(s),u=c.mul(e);u.isNegative()||u.gt(o);)s-=l,c=qn(s,this.unsigned),u=c.mul(e);c.isZero()&&(c=Vr),r=r.add(c),o=o.sub(u)}return r};he.div=he.divide;he.modulo=function(e){if(En(e)||(e=ws(e)),Kn){var n=(this.unsigned?Kn.rem_u:Kn.rem_s)(this.low,this.high,e.low,e.high);return ut(n,Kn.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};he.mod=he.modulo;he.rem=he.modulo;he.not=function(){return ut(~this.low,~this.high,this.unsigned)};he.and=function(e){return En(e)||(e=ws(e)),ut(this.low&e.low,this.high&e.high,this.unsigned)};he.or=function(e){return En(e)||(e=ws(e)),ut(this.low|e.low,this.high|e.high,this.unsigned)};he.xor=function(e){return En(e)||(e=ws(e)),ut(this.low^e.low,this.high^e.high,this.unsigned)};he.shiftLeft=function(e){return En(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?ut(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):ut(0,this.low<<e-32,this.unsigned)};he.shl=he.shiftLeft;he.shiftRight=function(e){return En(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?ut(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):ut(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};he.shr=he.shiftRight;he.shiftRightUnsigned=function(e){if(En(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var s=this.low;return ut(s>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?ut(n,0,this.unsigned):ut(n>>>e-32,0,this.unsigned)};he.shru=he.shiftRightUnsigned;he.shr_u=he.shiftRightUnsigned;he.toSigned=function(){return this.unsigned?ut(this.low,this.high,!1):this};he.toUnsigned=function(){return this.unsigned?this:ut(this.low,this.high,!0)};he.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};he.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};he.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};ct.fromBytes=function(e,n,s){return s?ct.fromBytesLE(e,n):ct.fromBytesBE(e,n)};ct.fromBytesLE=function(e,n){return new ct(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};ct.fromBytesBE=function(e,n){return new ct(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};var iE=Dk({__proto__:null,default:cf},[cf]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=cf||iE;function Ch(t){return Ko.fromString(t,!0,16)}const O1=Ch("c3a5c85c97cb3127"),Uo=Ch("b492b66fbe98f273"),Jt=Ch("9ae16a3b2f90404f");function hf(t){return t.xor(t.shru(47))}function M1(t,e,n){const s=t.slice(e,e+n);return Ko.fromBytes(Array.from(s),!0,!0)}function nt(t,e){return M1(t,e,8)}function pb(t,e){return M1(t,e,4)}function Dt(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function fo(t,e,n=Ch("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let o=e.xor(s).mul(n);return o=o.xor(o.shru(47)),o=o.mul(n),o}function aE(t,e,n,s,o,r){o=o.add(t),r=Dt(r.add(o).add(s),21);const i=o;return o=o.add(e),o=o.add(n),r=r.add(Dt(o,44)),[o.add(s),r.add(i)]}function tc(t,e,n,s){return aE(nt(t,e),nt(t,e+8),nt(t,e+16),nt(t,e+24),n,s)}function lE(t,e=t.length){if(e>=8){const n=Jt.add(e*2),s=nt(t,0).add(Jt),o=nt(t,e-8),r=Dt(o,37).mul(n).add(s),i=Dt(s,25).add(o).mul(n);return fo(r,i,n)}if(e>=4){const n=Jt.add(e*2),s=pb(t,0);return fo(s.shl(3).add(e),pb(t,e-4),n)}if(e>0){const n=t[0],s=t[e>>1],o=t[e-1],r=n+(s<<8),i=e+(o<<2);return hf(Jt.mul(r).xor(O1.mul(i))).mul(Jt)}return Jt}function cE(t,e=t.length){const n=Jt.add(e*2),s=nt(t,0).mul(Uo),o=nt(t,8),r=nt(t,e-8).mul(n),i=nt(t,e-16).mul(Jt);return fo(Dt(s.add(o),43).add(Dt(r,30)).add(i),s.add(Dt(o.add(Jt),18)).add(r),n)}function uE(t,e=t.length){const n=Jt.add(e*2),s=nt(t,0).mul(Jt),o=nt(t,8),r=nt(t,e-8).mul(n),i=nt(t,e-16).mul(Jt),a=Dt(s.add(o),43).add(Dt(r,30)).add(i),l=fo(a,s.add(Dt(o.add(Jt),18)).add(r),n),c=nt(t,16).mul(n),u=nt(t,24),h=a.add(nt(t,e-32)).mul(n),d=l.add(nt(t,e-24)).mul(n);return fo(Dt(c.add(u),43).add(Dt(h,30)).add(d),c.add(Dt(u.add(s),18)).add(h),n)}function hE(t,e=t.length){const n=Ko.fromNumber(81,!0);if(e<=32)return e<=16?lE(t,e):cE(t,e);if(e<=64)return uE(t,e);let s=n,o=n.mul(Uo).add(113),r=hf(o.mul(Jt).add(113)).mul(Jt),i=[Ko.UZERO,Ko.UZERO],a=[Ko.UZERO,Ko.UZERO];s=s.mul(Jt).add(nt(t,0));let l=0;const c=(e-1>>6)*64,u=c+(e-1&63)-63;do s=Dt(s.add(o).add(i[0]).add(nt(t,l+8)),37).mul(Uo),o=Dt(o.add(i[1]).add(nt(t,l+48)),42).mul(Uo),s=s.xor(a[1]),o=o.add(i[0]).add(nt(t,l+40)),r=Dt(r.add(a[0]),33).mul(Uo),i=tc(t,l,i[1].mul(Uo),s.add(a[0])),a=tc(t,l+32,r.add(a[1]),o.add(nt(t,l+16))),[r,s]=[s,r],l+=64;while(l!==c);const h=Uo.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=Dt(s.add(o).add(i[0]).add(nt(t,l+8)),37).mul(h),o=Dt(o.add(i[1]).add(nt(t,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(nt(t,l+40))),r=Dt(r.add(a[0]),33).mul(h),i=tc(t,l,i[1].mul(h),s.add(a[0])),a=tc(t,l+32,r.add(a[1]),o.add(nt(t,l+16))),[r,s]=[s,r],fo(fo(i[0],a[0],h).add(hf(o).mul(O1)).add(r),fo(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(t,e){return e==="string"?po(t):Nr([t],e)}function dE(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function Nr(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=si(t)),H().getBool("DEBUG")&&H2(t,e),dE(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let s=0;s<n.length;++s)Math.round(t[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${e}`)}function Zt(){return H().platform.now()}function po(t,e="utf-8"){return e=e||"utf-8",H().platform.encode(t,e)}function bo(t,e="utf-8"){return e=e||"utf-8",H().platform.decode(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fE{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new mE)}profileKernel(e,n,s){let o;const r=()=>{o=s()};let i;const a=Zt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const c of o)c.dataSync();i=Promise.resolve({kernelMs:Zt()-a})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<o.length;c++){const u=o[c];u.data().then(h=>{pE(h,u.dtype,e)})}return{kernelName:e,outputs:o,inputs:n,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:s,timeMs:o,inputs:r,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),o,i]).then(l=>{this.logger.logKernelProfile(n,a,l[0],l[1],r,l[2])})})}}function pE(t,e,n){if(e!=="float32")return!1;for(let s=0;s<t.length;s++){const o=t[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${n}'`),!0}return!1}class mE{logKernelProfile(e,n,s,o,r,i){const a=typeof o=="number"?Xr(`${o}ms`,9):o.error,l=Xr(e,25),c=n.rank,u=n.size,h=Xr(n.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const m=p.shape||n.shape,g=m.length;d+=`${f}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(t,e,n){const s={},o={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<t.length;l++){const c=t[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<e.length;p++)if(s[d.id]){c.outputs.forEach(m=>s[m.id]=!0),f=!0,o[c.id]=!0;break}if(f)break}}const r={};r[n.id]=!0;const i={};for(let l=t.length-1;l>=0;l--){const c=t[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,i[c.id]=!0;break}}const a=[];for(let l=0;l<t.length;l++){const c=t[l];if(o[c.id]&&i[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];s[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function xE(t,e,n,s){for(let o=e.length-1;o>=0;o--){const r=e[o],i=[];if(r.outputs.forEach(l=>{const c=t[l.id];c!=null?i.push(c):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(i);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=n(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Ye(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(t[u.id]==null)t[u.id]=c;else{const h=t[u.id];t[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mb=20,zi=3,gd=7;function bE(t,e,n,s){const o=Se(e),r=yE(t,e,n,o),i=e.length,a=vc(t,e,n,o,r),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function yE(t,e,n,s){const o=q(e),r=s[s.length-1],i=new Array(r).fill(0),a=e.length,l=n==="complex64"?Gi(t):t;if(a>1)for(let c=0;c<o/r;c++){const u=c*r;for(let h=0;h<r;h++)i[h]=Math.max(i[h],Ui(l[u+h],0,n).length)}return i}function Ui(t,e,n){let s;return Array.isArray(t)?s=`${parseFloat(t[0].toFixed(gd))} + ${parseFloat(t[1].toFixed(gd))}j`:Ia(t)?s=`'${t}'`:n==="bool"?s=L1(t):s=parseFloat(t.toFixed(gd)).toString(),Xr(s,e)}function L1(t){return t===0?"false":"true"}function vc(t,e,n,s,o,r=!0){const i=n==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(n==="complex64"){const m=Gi(t);return[Ui(m[0],0,n)]}return n==="bool"?[L1(t[0])]:[t[0].toString()]}if(l===1){if(a>mb){const g=zi*i;let x=Array.from(t.slice(0,g)),b=Array.from(t.slice((a-zi)*i,a*i));return n==="complex64"&&(x=Gi(x),b=Gi(b)),["["+x.map((w,y)=>Ui(w,o[y],n)).join(", ")+", ..., "+b.map((w,y)=>Ui(w,o[a-zi+y],n)).join(", ")+"]"]}const m=n==="complex64"?Gi(t):Array.from(t);return["["+m.map((g,x)=>Ui(g,o[x],n)).join(", ")+"]"]}const c=e.slice(1),u=s.slice(1),h=s[0]*i,d=[];if(a>mb){for(let m=0;m<zi;m++){const g=m*h,x=g+h;d.push(...vc(t.slice(g,x),c,n,u,o,!1))}d.push("...");for(let m=a-zi;m<a;m++){const g=m*h,x=g+h;d.push(...vc(t.slice(g,x),c,n,u,o,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...vc(t.slice(g,x),c,n,u,o,m===a-1))}const f=l===2?",":"";d[0]="["+d[0]+f;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+f;let p=`,
`;for(let m=2;m<l;m++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function Gi(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kt{constructor(e,n,s){if(this.dtype=n,this.shape=e.slice(),this.size=q(e),s!=null){const o=s.length;$(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ft(n,this.size),this.strides=Se(e)}set(e,...n){n.length===0&&(n=[0]),$(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const o of e){if(o<0||o>=this.shape[n]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}n++}let s=e[e.length-1];for(let o=0;o<e.length-1;++o)s+=this.strides[o]*e[o];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(e/this.strides[s]),e-=n[s]*this.strides[s];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return as().makeTensor(this.values,this.shape,this.dtype)}}let as=null,zr=null;function wE(t){as=t}function vE(t){zr=t}class ht{constructor(e,n,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=q(e),this.strides=Se(e),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return zr.buffer(this.shape,this.dtype,e)}bufferSync(){return zr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ms(this.shape,e,this.dtype==="complex64")}arraySync(){return ms(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=as().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(s=>bo(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),as().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=as().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>bo(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await as().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(as().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return zr.print(this,e)}clone(){return this.throwIfDisposed(),zr.clone(this)}toString(e=!1){const n=this.dataSync();return bE(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),zr.cast(this,e)}variable(e=!0,n,s){return this.throwIfDisposed(),as().makeVariable(this,e,n,s)}}Object.defineProperty(ht,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function K(){return yp("Tensor",()=>ht)}K();class Mc extends ht{constructor(e,n,s,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=n,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ye(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);as().disposeTensor(this),this.dataId=e.dataId,as().incRef(this,null)}dispose(){as().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Mc,Symbol.hasInstance,{value:t=>t instanceof ht&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var gb;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(gb||(gb={}));var df;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(df||(df={}));var ff;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(ff||(ff={}));var pf;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(pf||(pf={}));var mf;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(mf||(mf={}));const IE={float32:pf,int32:df,bool:ff,complex64:mf};function $n(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return IE[t][e]}function hm(t){return $n(t,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(t,e){if(t.dtype===e.dtype)return[t,e];const n=$n(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function dm(t,e){return e.some(n=>n.id===t.id)}function yo(t){const e=[];return P1(t,e,new Set),e}function P1(t,e,n){if(t==null)return;if(t instanceof ht){e.push(t);return}if(!CE(t))return;const s=t;for(const o in s){const r=s[o];n.has(r)||(n.add(r),P1(r,e,n))}}function CE(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xd(t){return t.kernelName!=null}class xb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ii{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new xb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,s=1){return e in this.registryFactory?(_n(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(e);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new fE(this.backendInstance),!0}setupRegisteredKernels(){lb(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){lb(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof mp)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,r=s.then(i=>o<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,_n(`Initialization of backend ${e} failed`),_n(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return _n(`Initialization of backend ${e} failed`),_n(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n],{success:o,asyncInit:r}=this.initializeBackend(s);if(r||o)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const s=this.state.tensorInfo.get(n),o=s.backend,r=this.readSync(n),i=o.refCount(n);o.disposeData(n,!0),s.backend=e,e.move(n,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let s=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=n(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,n,s){e();try{const o=s();return n(),o}catch(o){throw n(),o}}nextTensorId(){return ii.nextTensorId++}nextVariableId(){return ii.nextVariableId++}clone(e){const n=_.runKernel(Ga,{x:e}),s={x:e},o=i=>({x:()=>{const a="float32",l={x:i},c={dtype:a};return _.runKernel(Da,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[n],o,r,{}),n}runKernel(e,n,s){if(this.backendName==null&&this.backend,!(lf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,s){const o=this.backend.numDataIds();let r=0;s.forEach(l=>{r+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-n-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let n,s=[];const o=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=xd(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(xd(e)){const{kernelName:p,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const x=lf(p,this.backendName);$(x!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();l=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,b,w);const y=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(o){const v=this.getTensorsForGradient(p,m,y);s=this.saveTensorsForBackwardMode(v)}return y}}else{const{forwardFunc:p}=e,m=g=>{!o||(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,m));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}const{inputs:u,attrs:h}=e,d=xd(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),n=f.outputs)}),o&&this.addTapeNode(c,u,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:n.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,n,s){const o=ab(e);if(o!=null){const r=o.inputsToSave||[],i=o.outputsToSave||[];let a;o.saveAllInputs?($(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(n).map(c=>n[c])):a=r.map(c=>n[c]);const l=s.filter((c,u)=>i[u]);return a.concat(l)}return[]}makeTensor(e,n,s,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let r=e;s==="string"&&Ia(e[0])&&(r=e.map(l=>po(l)));const i=o.write(r,n,s),a=new ht(n,s,i,this.nextTensorId());if(this.trackTensor(a,o),s==="string"){const l=this.state.tensorInfo.get(i),c=K2(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(e,n,s,o){s=s||"float32";const r={dataId:e,shape:n,dtype:s};return this.makeTensorFromTensorInfo(r,o)}makeTensorFromTensorInfo(e,n){const{dataId:s,shape:o,dtype:r}=e,i=new ht(o,r,s,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(e,n=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));const r=new Mc(e,n,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Qd(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Mc||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Qd(e.dtype);this.state.numBytes-=s}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,s,o,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:s,saved:r},l=ab(e);l!=null&&(o=l.gradFunc),o!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],f=Xt(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),o(c.length>1?c:c[0],r,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=yo(e),s=new Set(n.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(r=>{!r.kept&&r.scopeId===o.id&&this.track(r)})}gradients(e,n,s,o=!1){if($(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(r instanceof ht,()=>"The result y returned by f() must be a tensor.");const i=gE(this.state.activeTape,n,r);if(!o&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=s==null?$E(r.shape):s,xE(a,i,c=>this.tidy(c),kE);const l=n.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return $(tf(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{$(n.every(a=>a instanceof ht),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};n.forEach((a,l)=>{o[l]=a});const r=(a,l)=>(s=e(...n,l),$(s.value instanceof ht,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(tf(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];$(u.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(u.every(d=>d instanceof ht),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=Zt(),s=await this.backend.time(e);return s.wallMs=Zt()-n,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xb;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ii.nextTensorId=0;ii.nextVariableId=0;function $E(t){const e=bp(q(t),"float32");return _.makeTensor(e,t,"float32")}function B1(){const t=p1();if(t._tfengine==null){const e=new X2(t);t._tfengine=new ii(e)}return Q2(t._tfengine.ENV),wE(()=>t._tfengine),t._tfengine}const _=B1();function kE(t,e){const n={a:t,b:e};return _.runKernel(Ii,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(){return typeof navigator!="undefined"&&navigator!=null}function z1(t){if(t||SE()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window!="undefined"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function W1(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kn=H();kn.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});kn.registerFlag("IS_BROWSER",()=>W1());kn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");kn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));kn.registerFlag("PROD",()=>!1);kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>kn.getBool("DEBUG"));kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);kn.registerFlag("IS_TEST",()=>!1);kn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);kn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);kn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);kn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);kn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yl(t,e){let n=t;if(Ws(t))return e==="string"?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||Ws(n)&&e!=="string";)s.push(n.length),n=n[0];return Array.isArray(t)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&V1(t,s,[]),s}function V1(t,e,n){if(n=n||[],!Array.isArray(t)&&!Ws(t)){$(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}$(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),$(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const s=e.slice(1);for(let o=0;o<t.length;++o)V1(t[o],s,n.concat(o))}function bb(t,e,n,s){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function S(t,e,n,s="numeric"){if(t instanceof ht)return bb(s,t.dtype,e,n),t;let o=Ca(t);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),bb(s,o,e,n),t==null||!Ws(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const l=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const r=yl(t,o);!Ws(t)&&!Array.isArray(t)&&(t=[t]);const a=o!=="string"?Nr(t,o):si(t,[],!0);return _.makeTensor(a,r,o)}function U1(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((r,i)=>S(r,`${e}[${i}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE="__op";function O(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+NE;const o=(...r)=>{_.startScope(n);try{const i=s(...r);return d1(i)&&console.error("Cannot return a Promise inside of tidy."),_.endScope(i),i}catch(i){throw _.endScope(null),i}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(t,e){const n=S(t,"real","complex"),s=S(e,"imag","complex");ts(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:n,imag:s};return _.runKernel(Sp,o)}const hr=O({complex_:TE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(t,e,n,s){if(s==null&&(s=Ca(t)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ws(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){h1(e);const o=q(e),r=q(n);$(o===r,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${r}`);for(let i=0;i<n.length;++i){const a=n[i],l=i===n.length-1?a!==q(e.slice(i)):!0;$(n[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!Ws(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=s!=="string"?Nr(t,s):si(t,[],!0),_.makeTensor(t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ic(t,e,n){const s=yl(t,n);return wl(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yb={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lc=4;async function wb(t,e){const n=[],s=[],o=Array.isArray(t)?t.map(i=>i.name):Object.keys(t);for(let i=0;i<o.length;++i){const a=o[i],l=Array.isArray(t)?t[i].tensor:t[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((g,x)=>g+x.length,0)+Lc*d.length,p=new Uint8Array(f);let m=0;for(let g=0;g<d.length;g++){const x=d[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);p.set(b,m),m+=Lc,p.set(x,m),m+=x.length}h(p)});s.push(u)}else s.push(l.data());e!=null&&(c.group=e),n.push(c)}const r=await Promise.all(s);return{data:RE(r),specs:n}}function EE(t,e){const n={};let s,o=0;for(const r of e){const i=r.name,a=r.dtype,l=r.shape,c=q(l);let u;if("quantization"in r){const h=r.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${r.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${r.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=yb[h.dtype],f=t.slice(o,o+c*d),p=h.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(a==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(p.length);for(let m=0;m<p.length;m++){const g=p[m];u[m]=g*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=BE()),u=s(p);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(a==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(p.length);for(let m=0;m<p.length;m++){const g=p[m];u[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=c*d}else if(a==="string"){const h=q(r.shape);u=[];for(let d=0;d<h;d++){const f=new Uint32Array(t.slice(o,o+Lc))[0];o+=Lc;const p=new Uint8Array(t.slice(o,o+f));u.push(p),o+=f}}else{const h=yb[a],d=t.slice(o,o+c*h);if(a==="float32")u=new Float32Array(d);else if(a==="int32")u=new Int32Array(d);else if(a==="bool")u=new Uint8Array(d);else if(a==="complex64"){u=new Float32Array(d);const f=new Float32Array(u.length/2),p=new Float32Array(u.length/2);for(let x=0;x<f.length;x++)f[x]=u[x*2],p[x]=u[x*2+1];const m=Ic(f,l,"float32"),g=Ic(p,l,"float32");n[i]=hr(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=c*h}a!=="complex64"&&(n[i]=Ic(u,l,a))}return n}function RE(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(r=>{if(e+=r.byteLength,n.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let o=0;return n.forEach(r=>{s.set(new Uint8Array(r.buffer),o),o+=r.byteLength}),s.buffer}const fm=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function vb(t){return fm?Buffer.byteLength(t):new Blob([t]).size}function DE(t){if(fm)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let s=0,o=e.length;s<o;s++)n+=String.fromCharCode(e[s]);return btoa(n)}function AE(t){if(fm){const s=Buffer.from(t,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let s=0;s<e.length;++s)n.set([e.charCodeAt(s)],s);return n.buffer}function G1(t){if(t.length===1)return t[0];let e=0;t.forEach(o=>{e+=o.byteLength});const n=new Uint8Array(e);let s=0;return t.forEach(o=>{n.set(new Uint8Array(o),s),s+=o.byteLength}),n.buffer}function H1(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function FE(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(s.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return t.signature!=null&&(s.signature=t.signature),t.userDefinedMetadata!=null&&(s.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(s.modelInitializer=t.modelInitializer),s}async function _E(t,e){let n,s;return t.weightsManifest!=null&&([n,s]=await e(t.weightsManifest)),FE(t,n,s)}function $h(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:vb(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:vb(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:t.weightData.byteLength}}function OE(t){const e=[];for(const n of t)e.push(...n.weights);return e}function ME(){const t=n=>{let s=n<<13,o=0;for(;(s&8388608)===0;)o-=8388608,s<<=1;return s&=-8388609,o+=947912704,s|o},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function LE(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function PE(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function BE(){const t=ME(),e=LE(),n=PE();return s=>{const o=new ArrayBuffer(4*s.length),r=new Uint32Array(o);for(let i=0;i<s.length;i++){const a=s[i],l=t[n[a>>10]+(a&1023)]+e[a>>10];r[i]=l}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $t{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return $t.instance==null&&($t.instance=new $t),$t.instance}static registerSaveRouter(e){$t.getInstance().saveRouters.push(e)}static registerLoadRouter(e){$t.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return $t.getHandlers(e,"save")}static getLoadHandlers(e,n){return $t.getHandlers(e,"load",n)}static getHandlers(e,n,s){const o=[];return(n==="load"?$t.getInstance().loadRouters:$t.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&o.push(a)}),o}}const zE=t=>$t.getSaveHandlers(t),WE=(t,e)=>$t.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gf="tensorflowjs",xf=1,er="models_store",ao="model_info_store";function j1(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window=="undefined"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function bf(t){const e=t.result;e.createObjectStore(er,{keyPath:"modelPath"}),e.createObjectStore(ao,{keyPath:"modelPath"})}class dr{constructor(e){if(this.indexedDB=j1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((s,o)=>{const r=this.indexedDB.open(gf,xf);r.onupgradeneeded=()=>bf(r),r.onsuccess=()=>{const i=r.result;if(n==null){const a=i.transaction(er,"readonly"),c=a.objectStore(er).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(i.close(),o(c.error)),a.oncomplete=()=>i.close()}else{const a=$h(n),l=i.transaction(ao,"readwrite");let c=l.objectStore(ao);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=i.transaction(er,"readwrite");const f=h.objectStore(er).put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:a});f.onsuccess=()=>s({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(ao);const m=c.delete(this.modelPath);m.onsuccess=()=>(i.close(),o(f.error)),m.onerror=g=>(i.close(),o(f.error))}},u.onerror=d=>(i.close(),o(u.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},r.onerror=i=>o(r.error)})}}dr.URL_SCHEME="indexeddb://";const K1=t=>H().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(dr.URL_SCHEME)?VE(t.slice(dr.URL_SCHEME.length)):null;$t.registerSaveRouter(K1);$t.registerLoadRouter(K1);function VE(t){return new dr(t)}function UE(t){return t.startsWith(dr.URL_SCHEME)?t.slice(dr.URL_SCHEME.length):t}class GE{constructor(){this.indexedDB=j1()}async listModels(){return new Promise((e,n)=>{const s=this.indexedDB.open(gf,xf);s.onupgradeneeded=()=>bf(s),s.onsuccess=()=>{const o=s.result,r=o.transaction(ao,"readonly"),a=r.objectStore(ao).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},a.onerror=l=>(o.close(),n(a.error)),r.oncomplete=()=>o.close()},s.onerror=o=>n(s.error)})}async removeModel(e){return e=UE(e),new Promise((n,s)=>{const o=this.indexedDB.open(gf,xf);o.onupgradeneeded=()=>bf(o),o.onsuccess=()=>{const r=o.result,i=r.transaction(ao,"readwrite"),a=i.objectStore(ao),l=a.get(e);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=a.delete(e),h=()=>{c=r.transaction(er,"readwrite");const f=c.objectStore(er).delete(e);f.onsuccess=()=>n(l.result.modelArtifactsInfo),f.onerror=p=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),s(l.error))}},l.onerror=u=>(r.close(),s(l.error)),i.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},o.onerror=r=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ks="/",Wr="tensorflowjs_models",q1="info",HE="model_topology",jE="weight_specs",KE="weight_data",qE="model_metadata";function X1(t){return{info:[Wr,t,q1].join(Ks),topology:[Wr,t,HE].join(Ks),weightSpecs:[Wr,t,jE].join(Ks),weightData:[Wr,t,KE].join(Ks),modelMetadata:[Wr,t,qE].join(Ks)}}function Y1(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function XE(t){const e=t.split(Ks);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Ks)}function YE(t){return t.startsWith(fr.URL_SCHEME)?t.slice(fr.URL_SCHEME.length):t}class fr{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=X1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),o=$h(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,DE(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:o}}catch{throw Y1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=o;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);n.format=a.format,n.generatedBy=a.generatedBy,n.convertedBy=a.convertedBy,a.signature!=null&&(n.signature=a.signature),a.userDefinedMetadata!=null&&(n.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(n.modelInitializer=a.modelInitializer),a.trainingConfig!=null&&(n.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=AE(i),n}}fr.URL_SCHEME="localstorage://";const Z1=t=>H().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(fr.URL_SCHEME)?ZE(t.slice(fr.URL_SCHEME.length)):null;$t.registerSaveRouter(Z1);$t.registerLoadRouter(Z1);function ZE(t){return new fr(t)}class JE{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=Wr+Ks,s=Ks+q1;for(let o=0;o<this.LS.length;++o){const r=this.LS.key(o);if(r.startsWith(n)&&r.endsWith(s)){const i=XE(r);e[i]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=YE(e);const n=X1(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return Y1(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ib="://";class Ss{constructor(){this.managers={}}static getInstance(){return Ss.instance==null&&(Ss.instance=new Ss),Ss.instance}static registerManager(e,n){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ib)&&(e=e.slice(0,e.indexOf(Ib))),$(e.length>0,()=>"scheme must not be an empty string.");const s=Ss.getInstance();$(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=n}static getManager(e){const n=Ss.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(Ss.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QE{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(!window||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const o=this.functionRefs[s.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new QE);try{Ss.registerManager(fr.URL_SCHEME,new JE)}catch{}try{Ss.registerManager(dr.URL_SCHEME,new GE)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR={importFetch:()=>require("node-fetch")};let bd;class tR{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return H().global.fetch!=null?H().global.fetch(e,n):(bd==null&&(bd=eR.importFetch()),bd(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new tR);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(t,e="float32",n){return e=e||"float32",h1(t),new Kt(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nR(t,e){const n=S(t,"x","cast");if(!j2(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},o={dtype:e};return _.runKernel(Da,s,o)}const pe=O({cast_:nR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(t){const n={x:S(t,"x","clone","string_or_numeric")};return _.runKernel(Ga,n)}const or=O({clone_:sR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */B1();const rR={buffer:ze,cast:pe,clone:or,print:oR};vE(rR);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR="model",aR=".json",lR=".weights.bin";function Cb(t){return new Promise(e=>setTimeout(e)).then(t)}class pr{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(pr.URL_SCHEME)&&(e=e.slice(pr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=iR),this.modelJsonFileName=e+aR,this.weightDataFileName=e+lR}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=H1(e,s),r=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await Cb(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=n,await Cb(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:$h(e)}}}}pr.URL_SCHEME="downloads://";const cR=t=>H().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(pr.URL_SCHEME)?uR(t.slice(pr.URL_SCHEME.length)):null;$t.registerSaveRouter(cR);function uR(t="model"){return new pr(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $b(t,e,n,s){i(t),n=n==null?0:n,s=s==null?1:s,a(n,s);let o=0;const r=l=>(l.then(c=>{const u=n+ ++o/t.length*(s-n);return e(u),c}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),$(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(t.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hR(t,e){e==null&&(e={});const n=e.fetchFunc==null?H().platform.fetch:e.fetchFunc,s=t.map(h=>n(h,e.requestInit,{isBinary:!0})),o=0,r=.5,a=(e.onProgress==null?await Promise.all(s):await $b(s,e.onProgress,o,r)).map(h=>h.arrayBuffer()),l=.5,c=1;return e.onProgress==null?await Promise.all(a):await $b(a,e.onProgress,l,c)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR="application/octet-stream",fR="application/json";class pm{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?($(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=H().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=H1(e,s);n.body.append("model.json",new Blob([JSON.stringify(o)],{type:fR}),"model.json"),e.weightData!=null&&n.body.append("model.weights.bin",new Blob([e.weightData],{type:dR}),"model.weights.bin");const r=await this.fetch(this.path,n);if(r.ok)return{modelArtifactsInfo:$h(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=n.modelTopology,o=n.weightsManifest;if(s==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return _E(n,r=>this.loadWeights(r))}async loadWeights(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,o]=pR(n),r=this.weightPathPrefix||s,i=OE(e),a=[],l=[];for(const u of e)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(r+h+o);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await hR(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,G1(c)]}}pm.URL_SCHEME_REGEX=/^https?:\/\//;function pR(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),o=n>e?t.substring(n):"";return[s+"/",o]}function kb(t){return t.match(pm.URL_SCHEME_REGEX)!=null}const J1=(t,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(s=>kb(s)):n=kb(t),n)return Q1(t,e)}return null};$t.registerSaveRouter(J1);$t.registerLoadRouter(J1);function Q1(t,e){return new pm(t,e)}function mR(t,e){return Q1(t,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(t,e,n=!1,s=!1){let o=S(t,"a","matMul"),r=S(e,"b","matMul");[o,r]=yt(o,r);const i={a:o,b:r},a={transposeA:n,transposeB:s};return _.runKernel(Tu,i,a)}const Xe=O({matMul_:gR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(t,e,n=1,s=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:S(t,"indices","oneHot","int32")},a={dtype:o,depth:e,onValue:n,offValue:s};return _.runKernel(rh,i,a)}const mm=O({oneHot_:xR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(){return _}function yf(){return _.memory()}function W(t,e){return _.tidy(t,e)}function Me(t){yo(t).forEach(n=>n.dispose())}function Cn(t){return _.keep(t)}function ew(t,e,n=1){return _.registerBackend(t,e,n)}function bR(){return _.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(t){const n={input:S(t,"input","imag")};return _.runKernel(zp,n)}const gm=O({imag_:yR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(t){const n={x:S(t,"x","neg")};return _.runKernel(nh,n)}const mt=O({neg_:wR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(t){const n={input:S(t,"input","real")};return _.runKernel(qp,n)}const Pc=O({real_:vR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(t,e,n){const s=S(t,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),$(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{$(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const o={x:s},r={perm:e};return s.dtype==="complex64"?W(()=>{let i=Pc(s),a=gm(s);return i=_.runKernel(Yr,{x:i},r),a=_.runKernel(Yr,{x:a},r),n&&(a=mt(a)),hr(i,a)}):_.runKernel(Yr,o,r)}const Ue=O({transpose_:IR});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(t,e){const n=t.length,s=[];for(let o=0;o<n;o++){const r=n-1-o,i=t[r]||1;(e[e.length-1-o]||1)>1&&i===1&&s.unshift(r)}return s}function Et(t,e){const n=[];for(let s=0;s<e.length;s++){const o=t[t.length-s-1],r=e.length-s-1,i=e[r];(o==null||o===1&&i>1)&&n.unshift(r)}return n}function Fe(t,e){const n=[],s=Math.max(t.length,e.length);for(let o=0;o<s;o++){let r=t[t.length-o-1];r==null&&(r=1);let i=e[e.length-o-1];if(i==null&&(i=1),r===1)n.unshift(i);else if(i===1)n.unshift(r);else if(r!==i){const a=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(a)}else n.unshift(r)}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CR(t,e,n){if(xp(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=yl(t,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return wl(t,e,s,n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Po;function $R(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,o=!1,r=!1,i=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&t instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&t instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement)r=!0;else if(t.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(lf(rf,_.backendName)!=null){const p={pixels:t},m={numChannels:e};return _.runKernel(rf,p,m)}const[c,u]=o?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h;if(i)h=t.getContext("2d").getImageData(0,0,c,u).data;else if(s||n)h=t.data;else if(r||o||a){if(Po==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Po=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Po=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Po.canvas.width=c,Po.canvas.height=u,Po.drawImage(t,0,0,c,u),h=Po.getImageData(0,0,c,u).data}let d;if(e===4)d=new Int32Array(h);else{const p=c*u;d=new Int32Array(p*e);for(let m=0;m<p;m++)for(let g=0;g<e;++g)d[m*e+g]=h[m*4+g]}return CR(d,[u,c,e],"int32")}const kR=O({fromPixels_:$R});function xm(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(q(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const o=e.shape,r=o[o.length-1];let i=1;for(let h=0;h<o.length-1;++h)i*=o[h];const a=t.shape,l=o.slice();l.pop();let c=1;for(let h=r;h<n;++h)c*=a[h],l.push(a[h]);const u=[...Se(t.shape).map(h=>h/c),1].slice(0,r);return[l,i,c,u]}function tw(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(r+` update.rank < ${o}. `);if(t.length<s+(n.rank-o))throw new Error(r+` Output shape length < ${s+(n.rank-o)}`);if(n.rank!==o+t.length-s)throw new Error(r+` update.rank != ${o+t.length-s}`);for(let i=0;i<o;++i)if(n.shape[i]!==e.shape[i])throw new Error(r+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-o;++i)if(n.shape[i+o]!==t[i+s])throw new Error(r+` updates.shape[${i+o}] (${n.shape[i+o]}) != shape[${i+o}] (${t[i+o]})`)}function SR(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}tw(n,e,t)}function vl(t,e,n){const s=e.shape.length,o=s>1?e.shape[s-1]:1,r=n.length;let i=1;for(let h=o;h<r;++h)i*=n[h];const a=o<1?1:o,l=q(e.shape)/a,c=[...Se(n.slice(0,o)),1],u=q(n);return{sliceRank:o,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wf=-2,NR=-1;function bm(t,e,n){const s=t.shape.length;$(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),$(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)$(e[o]+n[o]<=t.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${e[o]+n[o]}) would overflow input.shape[${o}] (${t.shape[o]})`)}function TR(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function ym(t,e,n){const s=[];for(let o=0;o<t.length;o++)s[o]=Math.ceil((e[o]-t[o])/n[o]);return s}function nw(t,e,n,s){const o=[...t];for(let r=o.length;r<s.length;r++)o.push(1);for(let r=0;r<n;r++)r===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function sw(t,e,n){return n<=t?n:n-(e-1)}function ow(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function ER(t,e,n,s,o,r,i,a,l){const c=t.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&n>0){const f=e[0],p=n+1;u=rw(i,f,p,s,t),h=iw(a,f,p,o,t),d=nw(r,f,p,t)}else for(let f=0;f<c;f++)u[f]=lw(i,s,r,t,f,l),h[f]=cw(a,o,r,t,f,l),d[f]=aw(r,f,l);return{begin:u,end:h,strides:d}}function rw(t,e,n,s,o){const r=[...o],i=ow(n,e);for(let a=0;a<r.length;a++)if(i.indexOf(a)>-1)r[a]=0;else{const l=sw(e,n,a);let c=s[l];t&1<<l&&(c=0),r[a]=c}return r}function iw(t,e,n,s,o){const r=[...o],i=ow(n,e);for(let a=0;a<r.length;a++)if(i.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=sw(e,n,a);let c=s[l];t&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=o[a];r[a]<0&&(r[a]+=l),r[a]=ur(0,r[a],o[a])}return r}function aw(t,e,n){let s=t[e];return(n&1<<e||s==null)&&(s=1),s}function lw(t,e,n,s,o,r){let i=e[o];const a=n[o]||1;(t&1<<o||r&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[o];return i<0&&(i+=l),i=ur(0,i,l-1),i}function cw(t,e,n,s,o,r){let i=e[o];const a=n[o]||1;(t&1<<o||r&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[o];return i<0&&(i+=l),a>0?i=ur(0,i,l):i=ur(-1,i,l-1),i}function wm(t,e,n){let s=n.length;for(let o=0;o<n.length;o++)if(n[o]>1){s=o;break}for(let o=s+1;o<n.length;o++)if(e[o]>0||n[o]!==t[o])return!1;return!0}function vm(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function kh(t,e,n){let s;const o=t.shape.length;typeof e=="number"?s=[e,...new Array(o-1).fill(0)]:e.length<o?s=e.concat(new Array(o-e.length).fill(0)):s=e.slice(),s.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return n==null?r=new Array(o).fill(-1):typeof n=="number"?r=[n,...new Array(o-1).fill(-1)]:n.length<o?r=n.concat(new Array(o-n.length).fill(-1)):r=n,r=r.map((i,a)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),t.shape[a]-s[a])),[s,r]}function Im(t,e,n,s,o,r,i,a,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:c.slice(),beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)u&&(1<<w&a)!==0&&h.numAddAxisAfterEllipsis++,1<<w&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};RR(h,d);let f=!0,p=!0,m=!0;const g=[],x=[];for(let w=0;w<t.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<w),v=t[w];if(v===-1){g.push(y?1:-1);continue}const I=[d.beginMask&1<<w,d.endMask&1<<w],C=[d.strides[w]>0?0:-1,d.strides[w]>0?v:v-1];if(y&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const k=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(y){const L=d.begin[w]<0?v+d.begin[w]:d.begin[w];if(d.begin[w]=L,d.end[w]=d.begin[w]+1,L<0||L>=v)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=Sb(d.begin[w],0,d.strides[w],v,I,C),d.end[w]=Sb(d.end[w],1,d.strides[w],v,I,C);const A=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===v;f=f&&A,p=p&&(w===0&&d.strides[w]===1||A)}else f=f&&d.strides[w]===1&&k,p=p&&(w===0&&d.strides[w]===1||k);let N,T=!1;if(d.beginValid&&d.endValid?(N=d.end[w]-d.begin[w],T=!0):y?(N=1,T=!0):k&&v>=0&&(d.strides[w]<0?N=-v:N=v,T=!0),T){let A;N===0||N<0!=d.strides[w]<0?A=0:A=Math.trunc(N/d.strides[w])+(N%d.strides[w]!==0?1:0),g.push(A)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const y=d.finalShapeGatherIndices[w];y>=0?x.push(g[y]):y===wf&&x.push(1)}return{finalShapeSparse:x.filter((w,y)=>d.finalShapeGatherIndices[y]!==wf),finalShape:x,isIdentity:f,sliceDim0:p,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function RR(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const o=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<o;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(wf),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[s]),t.end!=null&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(NR),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}function Sb(t,e,n,s,o,r){if(o[e])return n>0?r[e]:r[e+1&1];{const i=t<0?s+t:t;return i<r[0]?r[0]:i>r[1]?r[1]:i}}var DR=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:bm,maskToAxes:TR,computeOutShape:ym,stridesWithElidedDims:nw,getNormalizedAxes:ER,startIndicesWithElidedDims:rw,stopIndicesWithElidedDims:iw,stridesForAxis:aw,startForAxis:lw,stopForAxis:cw,isSliceContinous:wm,computeFlatOffset:vm,parseSliceParams:kh,sliceInfo:Im},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ci{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class Hn{constructor(){this.classNameMap={}}static getMap(){return Hn.instance==null&&(Hn.instance=new Hn),Hn.instance}static register(e){Hn.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ee(t){$(t.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),$(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Hn.register(t)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(t,e){let n=S(t,"a","add"),s=S(e,"b","add");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(Ii,o)}const se=O({add_:AR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(t,e){let n=S(t,"a","floorDiv"),s=S(e,"b","floorDiv");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(Va,o)}const uw=O({floorDiv_:FR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(t,e){let n=S(t,"a","div"),s=S(e,"b","div");if([n,s]=yt(n,s),n.dtype==="int32"&&s.dtype==="int32")return uw(n,s);const o={a:n,b:s},r={};return _.runKernel(Ma,o,r)}const ke=O({div_:_R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(t,e){let n=S(t,"a","mul"),s=S(e,"b","mul");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(Qa,o)}const D=O({mul_:OR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(t){const e=S(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return _.runKernel(Ru,n)}else{const n={x:e};return _.runKernel(Cu,n)}}const Rt=O({abs_:MR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(t){const n={x:S(t,"x","acos")};return _.runKernel($a,n)}const PR=O({acos_:LR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(t){const n={x:S(t,"x","acosh")};return _.runKernel(ka,n)}const zR=O({acosh_:BR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(t,e=null,n=!1){const o={x:S(t,"x","all","bool")},r={axis:e,keepDims:n};return _.runKernel(vp,o,r)}const hw=O({all_:WR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(t,e=null,n=!1){const o={x:S(t,"x","any","bool")},r={axis:e,keepDims:n};return _.runKernel(Ip,o,r)}const vf=O({any_:VR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(t,e=0){const s={x:S(t,"x","argMax")},o={axis:e};return _.runKernel($u,s,o)}const ua=O({argMax_:UR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(t,e=0){const s={x:S(t,"x","argMin")},o={axis:e};return _.runKernel(ku,s,o)}const HR=O({argMin_:GR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(t){const n={x:S(t,"x","asin")};return _.runKernel(Sa,n)}const KR=O({asin_:jR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(t){const n={x:S(t,"x","asinh")};return _.runKernel(Na,n)}const XR=O({asinh_:qR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(t){const n={x:S(t,"x","atan")};return _.runKernel(Ta,n)}const ZR=O({atan_:YR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(t,e){let n=S(t,"a","atan2"),s=S(e,"b","atan2");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(Ra,o)}const QR=O({atan2_:JR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(t){const n={x:S(t,"x","atanh")};return _.runKernel(Ea,n)}const tD=O({atanh_:eD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Il(t,e,n,s,o="NHWC",r){const i=t[3],a=[...e,i],l=eo(o);return Gt(t,a,n,r,s,null,null,l)}function ns(t,e,n,s,o,r,i="channelsLast"){const[a,l]=Bc(e);let c;if(i==="channelsLast")c=[a,l,t[3],t[3]];else if(i==="channelsFirst")c=[a,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return Gt(t,c,n,s,o,r,!1,i)}function Qs(t,e,n,s,o,r,i="NDHWC"){const[a,l,c]=If(e);let u,h;if(i==="NDHWC")h="channelsLast",u=[a,l,c,t[4],t[4]];else if(i==="NCDHW")h="channelsFirst",u=[a,l,c,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return No(t,u,n,s,o,!1,h,r)}function Gt(t,e,n,s,o,r,i=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=t;else if(a==="channelsFirst")[l,h,c,u]=t;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=e,[m,g]=Bc(n),[x,b]=Bc(s),w=Zr(d,x),y=Zr(f,b),{padInfo:v,outHeight:I,outWidth:C}=oD(o,c,u,m,g,w,y,r,a),k=i?p*h:p;let N;return a==="channelsFirst"?N=[l,k,I,C]:a==="channelsLast"&&(N=[l,I,C,k]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:I,outWidth:C,outChannels:k,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:t,outShape:N,filterShape:e}}function No(t,e,n,s,o,r=!1,i="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,h,d]=t;else if(i==="channelsFirst")[l,d,c,u,h]=t;else throw new Error(`Unknown dataFormat ${i}`);const[f,p,m,,g]=e,[x,b,w]=If(n),[y,v,I]=If(s),C=Zr(f,y),k=Zr(p,v),N=Zr(m,I),{padInfo:T,outDepth:A,outHeight:L,outWidth:z}=rD(o,c,u,h,x,b,w,C,k,N,a),U=r?g*d:g;let V;return i==="channelsFirst"?V=[l,U,A,L,z]:i==="channelsLast"&&(V=[l,A,L,z,U]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:A,outHeight:L,outWidth:z,outChannels:U,padInfo:T,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:p,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:k,effectiveFilterWidth:N,dilationDepth:y,dilationHeight:v,dilationWidth:I,inShape:t,outShape:V,filterShape:e}}function nD(t,e,n,s,o){s==null&&(s=Cm(t,e,n));const r=t[0],i=t[1],a=rr((r-e+2*s)/n+1,o),l=rr((i-e+2*s)/n+1,o);return[a,l]}function sD(t,e,n,s,o,r){o==null&&(o=Cm(t,e,s));const i=t[0],a=t[1],l=t[2],c=rr((i-e+2*o)/s+1,r),u=rr((a-e+2*o)/s+1,r),h=rr((l-e+2*o)/s+1,r);return[c,u,h,n]}function Cm(t,e,n,s=1){const o=Zr(e,s);return Math.floor((t[0]*(n-1)-n+o)/2)}function Bc(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function If(t){return typeof t=="number"?[t,t,t]:t}function Zr(t,e){return e<=1?t:t+(t-1)*(e-1)}function oD(t,e,n,s,o,r,i,a,l){let c,u,h;if(typeof t=="number"){c={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const f=nD([e,n],r,s,t,a);u=f[0],h=f[1]}else if(t==="same"){u=Math.ceil(e/s),h=Math.ceil(n/o);const d=Math.max(0,(u-1)*s+r-e),f=Math.max(0,(h-1)*o+i-n),p=Math.floor(d/2),m=d-p,g=Math.floor(f/2),x=f-g;c={top:p,bottom:m,left:g,right:x,type:"SAME"}}else if(t==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-r+1)/s),h=Math.ceil((n-i+1)/o);else if(typeof t=="object"){const d=l==="channelsLast"?t[1][0]:t[2][0],f=l==="channelsLast"?t[1][1]:t[2][1],p=l==="channelsLast"?t[2][0]:t[3][0],m=l==="channelsLast"?t[2][1]:t[3][1];c={top:d,bottom:f,left:p,right:m,type:d===0&&f===0&&p===0&&m===0?"VALID":"EXPLICIT"},u=rr((e-r+d+f)/s+1,a),h=rr((n-i+p+m)/o+1,a)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:c,outHeight:u,outWidth:h}}function rD(t,e,n,s,o,r,i,a,l,c,u){let h,d,f,p;if(typeof t=="number"){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const g=sD([e,n,s,1],a,1,o,t,u);d=g[0],f=g[1],p=g[2]}else if(t==="same"){d=Math.ceil(e/o),f=Math.ceil(n/r),p=Math.ceil(s/i);const m=(d-1)*o+a-e,g=(f-1)*r+l-n,x=(p-1)*i+c-s,b=Math.floor(m/2),w=m-b,y=Math.floor(g/2),v=g-y,I=Math.floor(x/2),C=x-I;h={top:y,bottom:v,left:I,right:C,front:b,back:w,type:"SAME"}}else if(t==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-a+1)/o),f=Math.ceil((n-l+1)/r),p=Math.ceil((s-c+1)/i);else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function rr(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function mr(t){const[e,n,s]=Bc(t);return e===1&&n===1&&s===1}function Yt(t,e){return mr(t)||mr(e)}function eo(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function xn(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")$(oi(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(o=>{$(oi(o),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${o}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(t,e){const s={x:S(t,"x","reshape","string_or_numeric")},o={shape:e};return _.runKernel(uh,s,o)}const M=O({reshape_:iD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(t,e,n,s,o){const r=S(t,"x","avgPool","float32"),i=1;$(Yt(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=M(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),xn("avgPool",s,o);const c={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:o};let h=_.runKernel(Su,c,u);return h=pe(h,r.dtype),l?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const $m=O({avgPool_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(t,e,n,s,o,r="NDHWC"){const i=S(t,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),$(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xn("avgPool3d",s,o);const c={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:o,dataFormat:r};let h=_.runKernel(Nu,c,u);return h=pe(h,a.dtype),l?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const cD=O({avgPool3d_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(t,e=0){$(t.length>=1,()=>"Pass at least one tensor to concat");const n=U1(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),n.length===1)return or(n[0]);const s=n,o={axis:e};return _.runKernel(Du,s,o)}const qt=O({concat_:uD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(t){const n={x:S(t,"x","sigmoid","float32")};return _.runKernel(ul,n)}const $i=O({sigmoid_:hD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(t,e,n){const s=S(t,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},r={begin:e,size:n};return _.runKernel(mh,o,r)}const et=O({slice_:dD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(t){const n={x:S(t,"x","tanh","float32")};return _.runKernel(gl,n)}const km=O({tanh_:fD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(t,e,n){const s=S(t,"x","batchToSpaceND"),o=e.reduce((a,l)=>a*l);$(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),$(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),$(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const r={x:s},i={blockShape:e,crops:n};return _.runKernel(Eu,r,i)}const Sm=O({batchToSpaceND_:pD});function mD(t){let e;return t.rank===0||t.rank===1?e=M(t,[1,1,1,t.size]):t.rank===2?e=M(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=M(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(t,e,n,s,o,r){r==null&&(r=.001);const i=S(t,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(n,"variance","batchNorm");let c;o!=null&&(c=S(o,"scale","batchNorm"));let u;s!=null&&(u=S(s,"offset","batchNorm")),$(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:mD(i),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:r},p=_.runKernel(zu,d,f);return M(p,i.shape)}const Sh=O({batchNorm_:gD});function xD(t,e,n,s,o,r){const i=S(t,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(n,"variance","batchNorm");let c;o!=null&&(c=S(o,"scale","batchNorm"));let u;return s!=null&&(u=S(s,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Sh(i,a,l,u,c,r)}const bD=O({batchNorm2d_:xD});function yD(t,e,n,s,o,r){const i=S(t,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(n,"variance","batchNorm");let c;o!=null&&(c=S(o,"scale","batchNorm"));let u;return s!=null&&(u=S(s,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Sh(i,a,l,u,c,r)}const wD=O({batchNorm3d_:yD});function vD(t,e,n,s,o,r){const i=S(t,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(n,"variance","batchNorm");let c;o!=null&&(c=S(o,"scale","batchNorm"));let u;return s!=null&&(u=S(s,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Sh(i,a,l,u,c,r)}const ID=O({batchNorm4d_:vD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(t,e,n){const s=S(t,"x","bincount"),o=S(e,"weights","bincount");$(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const r={x:s,weights:o},i={size:n};return _.runKernel(kp,r,i)}const $D=O({bincount_:CD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(t,e){let n=S(t,"broadcastTo","x");const s=n.shape;if(e.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const c=n.shape.slice();for(;c.length<e.length;)c.unshift(1);n=M(n,c)}const o=n.shape,r=Array.from(e);for(let c=e.length-1;c>=0;c--)if(o[c]===e[c])r[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return or(n);const a={x:n},l={reps:r};return _.runKernel(xl,a,l)}const ea=O({broadcastTo_:kD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(t){const n={x:S(t,"x","ceil","float32")};return _.runKernel(Aa,n)}const ND=O({ceil_:SD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(t,e,n){const s={shape:t,value:e,dtype:n};return _.runKernel(Lp,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(t,e,n){const s=S(t,"x","clipByValue");if($(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Cl(s.shape,e,s.dtype);const o={x:s},r={clipValueMin:e,clipValueMax:n};return _.runKernel(Fa,o,r)}const Pn=O({clipByValue_:TD});function ED(t){return qt(t,0)}const RD=O({concat1d_:ED});function DD(t,e){return qt(t,e)}const AD=O({concat2d_:DD});function FD(t,e){return qt(t,e)}const _D=O({concat3d_:FD});function OD(t,e){return qt(t,e)}const MD=O({concat4d_:OD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(t,e,n,s,o="NHWC",r=[1,1],i){const a=S(t,"x","conv2d","float32"),l=S(e,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),$(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),xn("conv2d",s,i);const h=o==="NHWC"?c.shape[3]:c.shape[1];$(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),$(Yt(n,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`);const d={x:c,filter:l},f={strides:n,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},p=_.runKernel(Au,d,f);return u?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const gr=O({conv2d_:LD});function PD(t,e,n,s,o="NWC",r=1,i){const a=S(t,"x","conv1d"),l=S(e,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=M(a,[1,a.shape[0],a.shape[1]])),$(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),xn("conv1d",s,i),$(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(Yt(n,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${r}'`),$(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const h=M(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=M(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=gr(d,h,[1,n],s,"NHWC",[1,r],i);return u?M(g,[g.shape[2],g.shape[3]]):M(g,[g.shape[0],g.shape[2],g.shape[3]])}const dw=O({conv1d_:PD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(t,e,n,s,o,r="NHWC",i){$(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,l=e,c=!1;e.rank===3&&(c=!0,l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),$(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];$(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),$(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),xn("conv2dDerInput",o,i);const d={dy:l,filter:n},f={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,inputShape:a},p=_.runKernel(Fu,d,f);return c?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Nm=O({conv2DBackpropInput_:BD});function zD(t,e,n,s,o,r){const i=S(t,"x","conv2dTranspose"),a=S(e,"filter","conv2dTranspose");return Nm(n,i,a,s,o,"NHWC",r)}const fw=O({conv2dTranspose_:zD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(t,e,n,s,o="NDHWC",r=[1,1,1]){const i=S(t,"x","conv3d"),a=S(e,"filter","conv3d");let l=i,c=!1;i.rank===4&&(c=!0,l=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),$(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),$(Yt(n,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),$(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:n,pad:s,dataFormat:o,dilations:r},d=_.runKernel(_u,u,h);return c?M(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const VD=O({conv3d_:WD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(t,e,n,s,o){$(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let r=t,i=e,a=!1;e.rank===4&&(a=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,t[0],t[1],t[2],t[3]]);const l=r[4],c=i.shape[4];$(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const u={dy:i,filter:n},h={pad:o,strides:s,inputShape:r},d=_.runKernel(Ep,u,h);return a?M(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const pw=O({conv3DBackpropInput_:UD});function GD(t,e,n,s,o){const r=S(t,"x","conv3dTranspose"),i=S(e,"filter","conv3dTranspose");return pw(n,r,i,s,o)}const HD=O({conv3dTranspose_:GD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(t){const n={x:S(t,"x","cos","float32")};return _.runKernel(_a,n)}const Tm=O({cos_:jD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(t){const n={x:S(t,"x","cosh","float32")};return _.runKernel(Oa,n)}const mw=O({cosh_:KD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(t,e=0,n=!1,s=!1){const r={x:S(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:s};return _.runKernel(Rp,r,i)}const Cf=O({cumprod_:qD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(t,e=0,n=!1,s=!1){const r={x:S(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return _.runKernel(Ou,r,i)}const gw=O({cumsum_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(t,e,n="NHWC"){const s=S(t,"x","depthToSpace","float32"),o=n==="NHWC"?s.shape[1]:s.shape[2],r=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];$(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),$(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${s.shape}`),$(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),$(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:n};return _.runKernel(Ap,a,l)}const ZD=O({depthToSpace_:YD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JD(t,e,n,s,o="NHWC",r=[1,1],i){const a=S(t,"x","depthwiseConv2d","float32"),l=S(e,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),$(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=o==="NHWC"?c.shape[3]:c.shape[1];$(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),xn("depthwiseConv2d",s,i);const d={x:c,filter:l},f={strides:n,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},p=_.runKernel(Mu,d,f);return u?M(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Em=O({depthwiseConv2d_:JD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(t,e,n,s,o=[1,1],r="NHWC"){const i=S(t,"x","dilation2d"),a=S(e,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),$(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=i,c=!1;i.rank===3&&(l=M(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:n,pad:s,dilations:o},d=_.runKernel(Lu,u,h);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const eA=O({dilation2d_:QD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(t,e){let n=S(t,"a","equal","string_or_numeric"),s=S(e,"b","equal","string_or_numeric");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Pu,o)}const Vs=O({equal_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(t,e,n){const s=S(e,"a","where"),o=S(n,"b","where"),r=S(t,"condition","where","bool"),i=Fe(Fe(r.shape,s.shape),o.shape),a=ea(r,i),l=ea(s,i),c=ea(o,i),u={condition:a,t:l,e:c};return _.runKernel(ph,u)}const Sn=O({where_:nA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(t){const n={x:S(t,"x","zerosLike")};return _.runKernel(Ih,n)}const Ke=O({zerosLike_:sA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(t,e){let n=S(t,"a","div"),s=S(e,"b","div");[n,s]=yt(n,s);const o=ke(n,s),r=Ke(o),i=Vs(s,r);return Sn(i,r,o)}const rA=O({divNoNan_:oA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(t,e){const n=S(t,"t1","dot"),s=S(e,"t2","dot");$((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const o=n.rank===1?n.size:n.shape[1],r=s.rank===1?s.size:s.shape[0];if($(o===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${r}.`),n.rank===1&&s.rank===1){const i=M(n,[1,-1]),a=M(s,[-1,1]),l=Xe(i,a);return M(l,[])}else if(n.rank===1&&s.rank===2){const i=M(n,[1,-1]),a=M(s,[s.shape[0],s.shape[1]]),l=Xe(i,a);return M(l,[l.size])}else if(n.rank===2&&s.rank===1){const i=M(s,[-1,1]),a=Xe(n,i);return M(a,[a.size])}else{const i=M(s,[s.shape[0],s.shape[1]]);return Xe(n,i)}}const aA=O({dot_:iA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(t){const n={x:S(t,"x","elu","float32")};return _.runKernel(La,n)}const Nh=O({elu_:lA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(t){let e=S(t,"x","erf");$(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=pe(e,"float32"));const n={x:e};return _.runKernel(Pa,n)}const uA=O({erf_:cA});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rm(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function xw(t,e,n){const s=t.length+e.length,o=[];let r=0,i=0;for(let a=0;a<s;a++)n.indexOf(a)===-1?o.push(t[r++]):o.push(e[i++]);return o}function Ot(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&n.push(t[r]);const o=e.map(r=>t[r]);return[n,o]}function wt(t,e){const n=e.map(s=>1);return xw(t,n,e)}function Ht(t,e,n){$(Rm(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function xt(t,e){if(Rm(t,e))return null;const n=[];for(let s=0;s<e;++s)t.indexOf(s)===-1&&n.push(s);return t.forEach(s=>n.push(s)),n}function To(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function vt(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(t,e=null,n=!1){const o={x:S(t,"x","max")},r={reductionIndices:e,keepDims:n};return _.runKernel(Yu,o,r)}const Ms=O({max_:hA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(t,e=null,n=!1){const o={x:S(t,"x","min")},r={axis:e,keepDims:n};return _.runKernel(eh,o,r)}const $f=O({min_:dA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(t,e){let n=S(t,"base","pow"),s=S(e,"exp","pow");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(el,o)}const li=O({pow_:fA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Re(t,e){if((Ws(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Ws(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wl(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(t){const n={x:S(t,"x","sqrt","float32")};return _.runKernel(dl,n)}const on=O({sqrt_:pA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(t){const e=S(t,"x","square"),n={};return _.runKernel("Square",{x:e},n)}const ot=O({square_:mA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(t,e=null,n=!1){let s=S(t,"x","sum");s.dtype==="bool"&&(s=pe(s,"int32"));const o={x:s},r={axis:e,keepDims:n};return _.runKernel(gh,o,r)}const ve=O({sum_:gA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(t,e="euclidean",n=null,s=!1){t=S(t,"x","norm");const o=bw(t,e,n);let r=o.shape;if(s){const i=We(n,t.shape);r=wt(o.shape,i)}return M(o,r)}function bw(t,e,n=null){if(t.rank===0)return Rt(t);if(t.rank!==1&&n===null)return bw(M(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return ve(Rt(t),n);if(e===1/0)return Ms(Rt(t),n);if(e===-1/0)return $f(Rt(t),n);if(e==="euclidean"||e===2)return on(ve(li(Rt(t),Re(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return Ms(ve(Rt(t),n[0]),n[1]-1);if(e===1/0)return Ms(ve(Rt(t),n[1]),n[0]);if(e===-1/0)return $f(ve(Rt(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return on(ve(ot(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Th=O({norm_:xA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(t,e=null,n=!1){return Th(t,"euclidean",e,n)}const yA=O({euclideanNorm_:bA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(t){const n={x:S(t,"x","exp")};return _.runKernel(Ba,n)}const Jn=O({exp_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(t,e=0){const n=S(t,"x","expandDims","string_or_numeric");$(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},o={dim:e};return _.runKernel(Bu,s,o)}const Fn=O({expandDims_:vA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(t){const n={x:S(t,"x","expm1")};return _.runKernel(za,n)}const CA=O({expm1_:IA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(t,e){const n=S(t,"x","tile","string_or_numeric");$(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const s={x:n},o={reps:e};return _.runKernel(xl,s,o)}const ds=O({tile_:$A});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(t,e,n,s="float32"){e==null&&(e=t);const o=ze([t,e],s),r=t<=e?t:e;for(let a=0;a<r;++a)o.set(1,a,a);const i=M(o.toTensor(),[t,e]);if(n==null)return i;if(n.length===1)return ds(Fn(i,0),[n[0],1,1]);if(n.length===2)return ds(Fn(Fn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return ds(Fn(Fn(Fn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const yw=O({eye_:kA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(t){const n={x:S(t,"x","floor","float32")};return _.runKernel(Wa,n)}const Eh=O({floor_:SA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(t,e,n=0,s=0){const o=S(t,"x","gather"),r=S(e,"indices","gather","int32"),i={x:o,indices:r},a={axis:n,batchDims:s};return _.runKernel(Wu,i,a)}const Dm=O({gather_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(t,e){let n=S(t,"a","greater","string_or_numeric"),s=S(e,"b","greater","string_or_numeric");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Vu,o)}const ss=O({greater_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(t,e){let n=S(t,"a","greaterEqual","string_or_numeric"),s=S(e,"b","greaterEqual","string_or_numeric");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Ua,o)}const ki=O({greaterEqual_:EA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(t){const n={x:S(t,"x","isFinite")};return _.runKernel(Ha,n)}const DA=O({isFinite_:RA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(t){const n={x:S(t,"x","isInf")};return _.runKernel(ja,n)}const FA=O({isInf_:AA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(t){const n={x:S(t,"x","isNaN")};return _.runKernel(Ka,n)}const OA=O({isNaN_:_A});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(t,e=.2){const s={x:S(t,"x","leakyRelu")},o={alpha:e};return _.runKernel(Uu,s,o)}const Am=O({leakyRelu_:MA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(t,e){let n=S(t,"a","less","string_or_numeric"),s=S(e,"b","less","string_or_numeric");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Gu,o)}const ww=O({less_:LA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(t,e){let n=S(t,"a","lessEqual","string_or_numeric"),s=S(e,"b","lessEqual","string_or_numeric");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Hu,o)}const Si=O({lessEqual_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(t,e=5,n=1,s=1,o=.5){const r=S(t,"x","localResponseNormalization");$(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),$(oi(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=r,a=!1;r.rank===3&&(a=!0,i=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},c={depthRadius:e,bias:n,alpha:s,beta:o},u=_.runKernel(Xu,l,c);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const zA=O({localResponseNormalization_:BA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(t){const n={x:S(t,"x","log","float32")};return _.runKernel(qa,n)}const Qn=O({log_:WA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(t){const n={x:S(t,"x","log1p")};return _.runKernel(Xa,n)}const Fm=O({log1p_:VA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(t,e){$(tf(t),()=>"The f passed in variableGrads(f) must be a function"),$(e==null||Array.isArray(e)&&e.every(c=>c instanceof Mc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const c in _.registeredVariables)e.push(_.registeredVariables[c])}const s=n?e.filter(c=>!c.trainable):null,o=e.length;e=e.filter(c=>c.trainable),$(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const r=!0,{value:i,grads:a}=_.gradients(t,e,null,r);$(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:i,grads:l}}function xr(t){return _.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(t){const n={x:S(t,"x","softplus")};return _.runKernel(hl,n)}const $l=O({softplus_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(t){const e=S(t,"x","logSigmoid");return xr(s=>({value:mt($l(mt(s))),gradFunc:i=>D(i,$i(mt(s)))}))(e)}const jA=O({logSigmoid_:HA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(t,e){let n=S(t,"a","sub"),s=S(e,"b","sub");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(pl,o)}const Ie=O({sub_:KA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(t,e=-1){const n=S(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return xr((o,r)=>{const a=Ms(o,e,!0),l=Ie(o,a),c=Ie(pe(l,"float32"),Qn(ve(Jn(l),e,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,m=Jn(f);return Ie(h,D(ve(h,e,p),m))}}})(n)}const vw=O({logSoftmax_:qA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(t,e=null,n=!1){const s=S(t,"x","logSumExp"),o=We(e,s.shape),r=Ms(s,o,!0),i=Ie(s,r),a=Jn(i),l=ve(a,o),c=Qn(l),u=se(M(r,c.shape),c);if(n){const h=wt(u.shape,o);return M(u,h)}return u}const Iw=O({logSumExp_:XA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(t,e){const n=S(t,"a","logicalAnd","bool"),s=S(e,"b","logicalAnd","bool");Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(ju,o)}const Ys=O({logicalAnd_:YA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(t){const n={x:S(t,"x","logicalNot","bool")};return _.runKernel(Ku,n)}const _m=O({logicalNot_:ZA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(t,e){const n=S(t,"a","logicalOr","bool"),s=S(e,"b","logicalOr","bool");Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(qu,o)}const Cw=O({logicalOr_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(t,e){const n=S(t,"a","logicalXor","bool"),s=S(e,"b","logicalXor","bool");return Fe(n.shape,s.shape),Ys(Cw(t,e),_m(Ys(t,e)))}const eF=O({logicalXor_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(t,e,n,s,o){const r=S(t,"x","maxPool"),i=1;let a=r,l=!1;r.rank===3&&(l=!0,a=M(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),$(Yt(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),xn("maxPool",s,o);const c={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:o},h=_.runKernel(Zu,c,u);return l?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Om=O({maxPool_:tF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(t,e=[1,1,1],n,s,o,r="NDHWC"){const i=S(t,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),$(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xn("maxPool3d",s,o);const c={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:o,dataFormat:r},h=_.runKernel(Ju,c,u);return l?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const sF=O({maxPool3d_:nF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(t,e){let n=S(t,"a","maximum"),s=S(e,"b","maximum");[n,s]=yt(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Ya,o)}const Eo=O({maximum_:oF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(t,e=null,n=!1){const o={x:S(t,"x","mean")},r={axis:e,keepDims:n};return _.runKernel(Qu,o,r)}const bt=O({mean_:rF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(t,e="float32"){if(e==="complex64"){const s=At(t,"float32"),o=At(t,"float32");return hr(s,o)}const n=Xt(q(t),e);return _.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(t,e="float32"){if(e==="complex64"){const s=Ro(t,"float32"),o=At(t,"float32");return hr(s,o)}const n=bp(q(t),e);return _.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(t,e){let n=S(t,"a","minimum"),s=S(e,"b","minimum");[n,s]=yt(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(Za,o)}const Rh=O({minimum_:iF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(t,e,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=S(t,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const o=n==="reflect"?1:0;for(let a=0;a<s.rank;a++)$(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(e[a][0]>=0&&e[a][0]<=s.shape[a]-o&&e[a][1]>=0&&e[a][1]<=s.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-o} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:n},i={x:s};return _.runKernel(th,i,r)}const lF=O({mirrorPad_:aF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(t,e){let n=S(t,"a","mod"),s=S(e,"b","mod");[n,s]=yt(n,s);const o={a:n,b:s};return _.runKernel(Ja,o)}const uF=O({mod_:cF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(t,e=null,n=!1){t=S(t,"x","moments");const s=We(e,t.shape),o=bt(t,s,n);let r=o.shape;n||(r=wt(o.shape,s));const i=ot(Ie(pe(t,"float32"),M(o,r))),a=bt(i,s,n);return{mean:o,variance:a}}const Mm=O({moments_:hF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(t,e){let n=S(t,"a","notEqual","string_or_numeric"),s=S(e,"b","notEqual","string_or_numeric");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s};return _.runKernel(sh,o)}const ha=O({notEqual_:dF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(t){const n={x:S(t,"x","onesLike")};return _.runKernel(oh,n)}const es=O({onesLike_:fF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(t,e,n=0){const s=S(t,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},r={x:s};return _.runKernel(ah,r,o)}const Lm=O({pad_:pF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(t,e,n){const s=S(t,"x","spaceToBatchND");$(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),$(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),$(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+n[l-1][0]+n[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:s},r={blockShape:e,paddings:n};return _.runKernel(xh,o,r)}const Pm=O({spaceToBatchND_:mF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(t,e,n,s,o,r,i){o==null&&(o=[1,1]),r==null&&(r=1),s===0&&(s="valid");const a=S(t,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),$(Yt(r,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`);const u=ns(l.shape,e,r,o,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=bF([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,m]=xF([u.inHeight,u.inWidth],h,d),g=f?s:"valid",x=f?l:Pm(l,h,p),w=(n==="avg"?()=>$m(x,e,r,g,i):()=>Om(x,e,r,g,i))(),y=f?w:Sm(w,h,m);return c?M(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function xF(t,e,n){const s=n.map(u=>u[0]),o=n.map(u=>u[1]),r=t.concat(s,o),i=e.map((u,h)=>(u-r[h]%u)%u),a=o.map((u,h)=>u+i[h]),l=e.map((u,h)=>[s[h],a[h]]),c=e.map((u,h)=>[0,i[h]]);return[l,c]}function bF(t,e){const s=t.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=s.map(i=>Math.floor(i/2)),r=s.map((i,a)=>i-o[a]);return s.map((i,a)=>[o[a],r[a]])}const yF=O({pool_:gF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(t,e){const n=S(t,"x","prelu"),s=S(e,"alpha","prelu"),o={x:n,alpha:s};return _.runKernel(lh,o)}const Bm=O({prelu_:wF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(t,e=null,n=!1){let s=S(t,"x","prod");s.dtype==="bool"&&(s=pe(s,"int32"));const o={x:s},r={axis:e,keepDims:n};return _.runKernel(ch,o,r)}const IF=O({prod_:vF});var $w={exports:{}};(function(t){(function(e,n,s){function o(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function i(l,c){var u=new o(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(kr,t,!1)})($w);var kw={exports:{}};(function(t){(function(e,n,s){function o(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(kr,t,!1)})(kw);var Sw={exports:{}};(function(t){(function(e,n,s){function o(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(kr,t,!1)})(Sw);var Nw={exports:{}};(function(t){(function(e,n,s){function o(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(kr,t,!1)})(Nw);var Tw={exports:{}};(function(t){(function(e,n,s){function o(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,m,g,x=[],b=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,b=Math.max(b,h.length)),p=0,m=-32;m<b;++m)h&&(f^=h.charCodeAt((m+32)%h.length)),m===0&&(g=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=f+g,p=d==0?p+1:0);for(p>=128&&(x[(h&&h.length||0)&127]=-1),p=127,m=4*128;m>0;--m)f=x[p+34&127],d=x[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,x[p]=f^d;u.w=g,u.X=x,u.i=p}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(kr,t,!1)})(Tw);var Ew={exports:{}};(function(t){(function(e,n,s){function o(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(kr,t,!1)})(Ew);var Rw={exports:{}};(function(t){(function(e,n,s){var o=256,r=6,i=52,a="random",l=s.pow(o,r),c=s.pow(2,i),u=c*2,h=o-1,d;function f(y,v,I){var C=[];v=v==!0?{entropy:!0}:v||{};var k=x(g(v.entropy?[y,w(n)]:y==null?b():y,3),C),N=new p(C),T=function(){for(var A=N.g(r),L=l,z=0;A<c;)A=(A+z)*o,L*=o,z=N.g(1);for(;A>=u;)A/=2,L/=2,z>>>=1;return(A+z)/L};return T.int32=function(){return N.g(4)|0},T.quick=function(){return N.g(4)/4294967296},T.double=T,x(w(N.S),n),(v.pass||I||function(A,L,z,U){return U&&(U.S&&m(U,N),A.state=function(){return m(N,{})}),z?(s[a]=A,L):A})(T,k,"global"in v?v.global:this==s,v.state)}function p(y){var v,I=y.length,C=this,k=0,N=C.i=C.j=0,T=C.S=[];for(I||(y=[I++]);k<o;)T[k]=k++;for(k=0;k<o;k++)T[k]=T[N=h&N+y[k%I]+(v=T[k])],T[N]=v;(C.g=function(A){for(var L,z=0,U=C.i,V=C.j,B=C.S;A--;)L=B[U=h&U+1],z=z*o+B[h&(B[U]=B[V=h&V+L])+(B[V]=L)];return C.i=U,C.j=V,z})(o)}function m(y,v){return v.i=y.i,v.j=y.j,v.S=y.S.slice(),v}function g(y,v){var I=[],C=typeof y,k;if(v&&C=="object")for(k in y)try{I.push(g(y[k],v-1))}catch{}return I.length?I:C=="string"?y:y+"\0"}function x(y,v){for(var I=y+"",C,k=0;k<I.length;)v[h&k]=h&(C^=v[h&k]*19)+I.charCodeAt(k++);return w(v)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(o):(y=new Uint8Array(o),(e.crypto||e.msCrypto).getRandomValues(y)),w(y)}catch{var v=e.navigator,I=v&&v.plugins;return[+new Date,e,I,e.screen,w(n)]}}function w(y){return String.fromCharCode.apply(0,y)}if(x(s.random(),n),t.exports){t.exports=f;try{d=require("crypto")}catch{}}else s["seed"+a]=f})(typeof self!="undefined"?self:kr,[],Math)})(Rw);var CF=$w.exports,$F=kw.exports,kF=Sw.exports,SF=Nw.exports,NF=Tw.exports,TF=Ew.exports,Tr=Rw.exports;Tr.alea=CF;Tr.xor128=$F;Tr.xorwow=kF;Tr.xorshift7=SF;Tr.xor4096=NF;Tr.tychei=TF;var Dh=Tr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dw{constructor(e,n,s,o,r){this.mean=e,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Dh.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let e,n,s=!1;for(;!s;){let o,r,i;do o=2*this.random()-1,r=2*this.random()-1,i=o*o+r*r;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,n=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class EF{constructor(e=0,n=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Dh.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(t,e=0,n=1,s,o){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new Dw(e,n,s,!1,o),i=ze(t,s);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const DF=O({randomNormal_:RF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(t,e=0,n=1,s="float32",o){const r=ze(t,s),i=new EF(e,n,null,o);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const Ah=O({randomUniform_:AF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zc(t,e,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const o={start:t,stop:e,step:n,dtype:s};return _.runKernel(Kp,{},o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FF(t){const n={x:S(t,"x","reciprocal")};return _.runKernel(tl,n)}const _F=O({reciprocal_:FF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(t){const n={x:S(t,"x","relu")};return _.runKernel(nl,n)}const to=O({relu_:OF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(t){const n={x:S(t,"x","relu6")};return _.runKernel(sl,n)}const Aw=O({relu6_:MF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(t,e){const s={x:S(t,"x","reverse")},o={dims:e};return _.runKernel(fh,s,o)}const br=O({reverse_:LF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(t){const n={x:S(t,"x","round")};return _.runKernel(ol,n)}const Fw=O({round_:PF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(t){const n={x:S(t,"x","rsqrt","float32")};return _.runKernel(rl,n)}const _w=O({rsqrt_:BF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(t){const n={x:S(t,"x","selu")};return _.runKernel(il,n)}const Ow=O({selu_:zF});function WF(t,e,n,s,o,r=[1,1],i="NHWC"){const a=S(t,"x","separableConv2d"),l=S(e,"depthwiseFilter","separableConv2d"),c=S(n,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),$(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];$(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=Em(u,l,s,o,i,r),g=gr(p,c,1,"valid",i);return h?M(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Mw=O({separableConv2d_:WF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(t){const n={x:S(t,"x","sign")};return _.runKernel(cl,n)}const UF=O({sign_:VF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(t){const n={x:S(t,"x","sin","float32")};return _.runKernel(al,n)}const Lw=O({sin_:GF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(t){const n={x:S(t,"x","sinh")};return _.runKernel(ll,n)}const Pw=O({sinh_:HF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(t,e,n){const s=S(t,"x","slice1d");return $(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),et(s,[e],[n])}const zm=O({slice1d_:jF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(t,e,n){const s=S(t,"x","slice2d");return $(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),et(s,e,n)}const Bw=O({slice2d_:KF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(t,e,n){const s=S(t,"x","slice3d");return $(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),et(s,e,n)}const Wm=O({slice3d_:qF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(t,e,n){const s=S(t,"x","slice4d");return $(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),et(s,e,n)}const Wc=O({slice4d_:XF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(t,e=-1){const n=S(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},o={dim:e};return _.runKernel(yh,s,o)}const Vm=O({softmax_:YF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(t){$(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return _.runKernel(Mp,e)}const zw=O({fft_:ZF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(t){$(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return _.runKernel(Bp,e)}const kf=O({ifft_:JF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const o=M(t,[n,e]);s=kf(o)}else{const o=[n,2*(e-1)],r=M(Pc(t),[n,e]),i=M(gm(t),[n,e]),a=br(et(r,[0,1],[n,e-2]),1),l=D(br(et(i,[0,1],[n,e-2]),1),Re(-1)),c=qt([r,a],1),u=qt([i,l],1),h=M(hr(c,u),[o[0],o[1]]);s=kf(h)}if(s=Pc(s),t.rank===3&&t.shape[0]!==0){const o=s,r=t.shape[0];s=M(s,[r,s.shape[0]/r,s.shape[1]]),o.dispose()}return s}const e_=O({irfft_:QF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(t,e,n=0){const o={x:S(t,"x","split")},r={numOrSizeSplits:e,axis:n};return _.runKernel(bh,o,r)}const Mn=O({split_:t_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(t,e){$(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const s=t.size/n;let o;if(e!=null&&e<n){const p=t.shape.map(g=>0),m=t.shape.map(g=>g);m[t.shape.length-1]=e,o=et(t,p,m),n=e}else if(e!=null&&e>n){const p=t.shape.map(m=>m);p[t.shape.length-1]=e-n,o=qt([t,At(p)],t.shape.length-1),n=e}else o=t;const r=Ke(o),i=M(hr(o,r),[s,n]),a=zw(i),l=Math.floor(n/2)+1,c=Pc(a),u=gm(a),h=Mn(c,[l,n-l],c.shape.length-1),d=Mn(u,[l,n-l],u.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=l,M(hr(h[0],d[0]),f)}const Ww=O({rfft_:n_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(t,e){let n=S(t,"a","squaredDifference"),s=S(e,"b","squaredDifference");[n,s]=yt(n,s),Fe(n.shape,s.shape);const o={a:n,b:s},r={};return _.runKernel(fl,o,r)}const Vw=O({squaredDifference_:s_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(t,e){const n=S(t,"x","squeeze","string_or_numeric");return M(n,ko(n.shape,e).newShape)}const kl=O({squeeze_:o_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(t,e=0){const n=U1(t,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,o={axis:e};return _.runKernel(ih,s,o)}const yr=O({stack_:r_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(t,e=0){const s={x:S(t,"x","step")},o={alpha:e};return _.runKernel(bl,s,o)}const Sl=O({step_:i_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(t,e,n,s,o=0,r=0,i=0,a=0,l=0){const u={x:S(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return _.runKernel(nm,u,h)}const l_=O({stridedSlice_:a_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(t){const n={x:S(t,"x","tan","float32")};return _.runKernel(ml,n)}const u_=O({tan_:c_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(t,e){xp(t);const n=yl(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return wl(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jr(t,e,n){if(xp(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=yl(t,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wl(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(t,e=1,n=!0){const s=S(t,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const r={x:s},i={k:e,sorted:n},[a,l]=_.runKernel(im,r,i);return{values:a,indices:l}}const d_=O({topk_:h_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(t,e=0,n=1,s,o){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Dw(e,n,s,!0,o),i=ze(t,s);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const Uw=O({truncatedNormal_:f_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(t,e=0){const n=S(t,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},o={axis:e},[r,i]=_.runKernel(lm,s,o);return{values:r,indices:i}}const m_=O({unique_:p_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(t,e,n){const s=S(t,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");$(oi(n),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:o},i={numSegments:n};return _.runKernel(vh,r,i)}const Gw=O({unsortedSegmentSum_:g_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(t,e=0){const n=S(t,"x","unstack","string_or_numeric");$(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},o={axis:e};return _.runKernel(wh,s,o)}const ci=O({unstack_:x_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(t,e=!0,n,s){return _.makeVariable(t,e,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const s=ze(t,"int32"),o=ze([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const i=s.indexToLoc(n[r]),a=r*t.length;o.values.set(i,a)}return o.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(t,e){if(e==null)return t.shape.slice();if(Ye(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)e[s]==null&&t.shape[s]!=null?n.push(t.shape[s]):n.push(e[s]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(t,e,n,s){const o=S(t,"x","dropout");if($(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),$(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof ht?o.clone():o;const r=y_(o,n),i=1-e,a=ke(Eh(se(Ah(r,0,1,"float32",s),i)),i);return D(o,a)}const v_=O({dropout_:w_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function jw(t,e,n){const s=1-t%2,o=new Float32Array(t);for(let r=0;r<t;++r){const i=2*Math.PI*r/(t+s-1);o[r]=e-n*Math.cos(i)}return sn(o,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(t,e,n,s,o,r="NHWC",i){let a=t;t.rank===3&&(a=M(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),$(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];$(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),$(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),xn("conv2dDerFilter",o,i);const h={x:a,dy:l},d={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,filterShape:n};return _.runKernel(Np,h,d)}const Um=O({conv2DBackpropFilter_:C_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gm(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return D(t,Sl(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Hm(t,e){let n=e;const s=Et(t.shape,e.shape);return s.length>0&&(n=ve(n,s)),M(n,t.shape)}function jm(t,e,n,s){if(e==="linear")return t;if(e==="relu")return to(t);if(e==="elu")return Nh(t);if(e==="relu6")return Aw(t);if(e==="prelu")return Bm(t,n);if(e==="leakyrelu")return Am(t,s);if(e==="sigmoid")return $i(t);throw new Error(`Unknown fused activation ${e}.`)}const Km=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_({x:t,filter:e,strides:n,pad:s,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Km(_.state.gradientDepth,l)===!1){$(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let I=gr(t,e,n,s,o,r,i);return a!=null&&(I=se(I,a)),jm(I,l,c,u)}const h=S(t,"x","conv2d","float32"),d=S(e,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=M(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),$(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),xn("fused conv2d",s,i);const m=o==="NHWC"?f.shape[3]:f.shape[1];$(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),$(Yt(n,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`);const g=Gt(f.shape,d.shape,n,r,s,i);let x;a!=null&&(x=S(a,"bias","fused conv2d"),[x]=yt(x,h),o==="NHWC"?Fe(g.outShape,x.shape):($(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),$(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){const I=c.shape;if($(I.length<=1||I.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${I.length}.`),I.length===1)$(I[0]===1||I[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the number of output channels (${g.outChannels}).`);else if(I.length===3)try{Fe(I,g.outShape)}catch{const k=`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(k)}b=S(c,"prelu weights","fused conv2d")}const w=(I,C)=>{$(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[k,N,T,A]=C,L=Gm(I,T,l);$(mr(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const z=Nm(N.shape,L,k,n,s),U=Um(N,L,k.shape,n,s),V=[z,U];if(A!=null){const B=Hm(A,L);V.push(B)}return V},y={x:f,filter:d,bias:x,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?xr((C,k,N)=>{let T=_.runKernel(Fc,y,v);return N([k,C,T]),p&&(T=M(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:w}})(f,d):xr((C,k,N,T)=>{let A=_.runKernel(Fc,y,v);return T([k,C,A,N]),p&&(A=M(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:w}})(f,d,x)}const k_=O({fusedConv2d_:$_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(t,e,n,s,o,r=[1,1],i){let a=t;t.rank===3&&(a=M(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:o,dimRoundingMode:i,dilations:r,filterShape:n};return _.runKernel(Fp,c,u)}const N_=O({depthwiseConv2dNativeBackpropFilter_:S_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(t,e,n,s,o,r=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:n},u={strides:s,pad:o,dimRoundingMode:i,dilations:r,inputShape:t},h=_.runKernel(_p,c,u);return l?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const E_=O({depthwiseConv2dNativeBackpropInput_:T_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:o,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Km(_.state.gradientDepth,r)===!1){let A=Xe(t,e,n,s);return o!=null&&(A=se(A,o)),jm(A,r,i,a)}let l=S(t,"a","fused matMul"),c=S(e,"b","fused matMul");[l,c]=yt(l,c);const u=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=q(p),x=q(m);$(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);const w=Fe(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),y=n?M(l,[g,u,d]):M(l,[g,d,u]),v=s?M(c,[x,f,h]):M(c,[x,h,f]);let I;o!=null&&(I=S(o,"bias","fused matMul"),[I]=yt(I,l),Fe(w,I.shape));let C;i!=null&&(C=S(i,"prelu weights","fused matMul"));const k=(A,L)=>{const[z,U,V,B]=L,j=Gm(M(A,V.shape),V,r);let P,Y;if(!n&&!s?(P=Xe(j,U,!1,!0),Y=Xe(z,j,!0,!1)):!n&&s?(P=Xe(j,U,!1,!1),Y=Xe(j,z,!0,!1)):n&&!s?(P=Xe(U,j,!1,!0),Y=Xe(z,j,!1,!1)):(P=Xe(U,j,!0,!0),Y=Xe(j,z,!0,!0)),o!=null){const te=Hm(B,j);return[P,Y,te]}else return[P,Y]},N={a:y,b:v,bias:I,preluActivationWeights:C},T={transposeA:n,transposeB:s,activation:r,leakyreluAlpha:a};return o==null?xr((L,z,U)=>{const V=_.runKernel(Ac,N,T);return U([L,z,V]),{value:M(V,w),gradFunc:k}})(y,v):xr((L,z,U,V)=>{const B=_.runKernel(Ac,N,T);return V([L,z,B,U]),{value:M(B,w),gradFunc:k}})(y,v,I)}const Nb=O({fusedMatMul_:R_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_(t){return jw(t,.54,.46)}const OJ=O({hammingWindow_:D_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(t){return jw(t,.5,.5)}const F_=O({hannWindow_:A_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(t,e,n,s=!1,o=0){let r=0;const i=[];for(;r+e<=t.size;)i.push(et(t,r,e)),r+=n;if(s)for(;r<t.size;){const a=r+e-t.size,l=qt([et(t,r,e-a),Cl([a],o)]);i.push(l),r+=n}return i.length===0?Jr([],[0,e]):M(qt(i),[i.length,e])}const O_=O({frame_:__});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(t,e,n,s,o=F_){s==null&&(s=I_(e));const r=O_(t,e,n),i=D(r,o(e));return Ww(i,s)}const MJ=O({stft_:M_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(t,e,n,s,o="bilinear",r=0){const i=S(t,"image","cropAndResize"),a=S(e,"boxes","cropAndResize","float32"),l=S(n,"boxInd","cropAndResize","int32"),c=a.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),$(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),$(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),$(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),$(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const u={image:i,boxes:a,boxInd:l},h={method:o,extrapolationValue:r,cropSize:s};return _.runKernel(Dp,u,h)}const P_=O({cropAndResize_:L_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(t){const e=S(t,"image","flipLeftRight","float32");$(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return _.runKernel(Pp,n,{})}const z_=O({flipLeftRight_:B_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(t){const e=S(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];$(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),$(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(e.rank);return o.fill(1,0,n),o[n]=3,ds(e,o)}const V_=O({grayscaleToRGB_:W_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(t,e,n=0,s=.5){const o=S(t,"image","rotateWithOffset","float32");$(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const r={image:o},i={radians:e,fillValue:n,center:s};return _.runKernel(cm,r,i)}const G_=O({rotateWithOffset_:U_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ni(t,e,n,s,o,r){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=t.shape[0];return n=Math.min(n,i),$(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),$(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),$(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),$(e.rank===1,()=>"scores must be a 1D tensor"),$(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),$(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:o,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(t,e,n,s=.5,o=Number.NEGATIVE_INFINITY){const r=S(t,"boxes","nonMaxSuppression","float32"),i=S(e,"scores","nonMaxSuppression","float32"),a=Ni(r,i,n,s,o);n=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:o};return _.runKernel(Gp,{boxes:r,scores:i},l)}const j_=O({nonMaxSuppression_:H_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(t,e,n){const s=q_(t,e,n),o=s<0?-(s+1):s;t.splice(o,0,e)}function q_(t,e,n){return Y_(t,e,n||X_)}function X_(t,e){return t>e?1:t<e?-1:0}function Y_(t,e,n){let s=0,o=t.length,r=0,i=!1;for(;s<o;){r=s+(o-s>>>1);const a=n(e,t[r]);a>0?s=r+1:(o=r,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(t,e,n,s,o){return Zm(t,e,n,s,o,0)}function Xm(t,e,n,s,o,r){return Zm(t,e,n,s,o,0,!1,r,!0)}function Ym(t,e,n,s,o,r){return Zm(t,e,n,s,o,r,!0)}function Zm(t,e,n,s,o,r,i=!1,a=!1,l=!1){const c=[];for(let g=0;g<e.length;g++)e[g]>o&&c.push({score:e[g],boxIndex:g,suppressBeginIndex:0});c.sort(Tb);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<n&&c.length>0;){const g=c.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<o)break;let y=!1;for(let v=h.length-1;v>=w;--v){const I=Z_(t,b,h[v]);if(I>=s){y=!0;break}if(g.score=g.score*J_(s,u,I),g.score<=o)break}g.suppressBeginIndex=h.length,y||(g.score===x?(h.push(b),d.push(g.score)):g.score>o&&K_(c,g,Tb))}const f=h.length,p=n-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=f),m}function Z_(t,e,n){const s=t.subarray(e*4,e*4+4),o=t.subarray(n*4,n*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(o[0],o[2]),u=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),d=Math.max(o[1],o[3]),f=(a-r)*(l-i),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const m=Math.max(r,c),g=Math.max(i,u),x=Math.min(a,h),b=Math.min(l,d),w=Math.max(x-m,0)*Math.max(b-g,0);return w/(f+p-w)}function J_(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function Tb(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Q_(t,e,n,s=.5,o=Number.NEGATIVE_INFINITY){const r=S(t,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),a=Ni(r,i,n,s,o);n=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:h}=qm(c,u,n,s,o);return r!==t&&r.dispose(),i!==e&&i.dispose(),sn(h,"int32")}const eO=Q_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(t,e,n,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=S(t,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),l=Ni(i,a,n,s,o,r);n=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:i,scores:a},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:o,softNmsSigma:r},h=_.runKernel(jp,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const nO=O({nonMaxSuppressionWithScore_:tO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sO(t,e,n,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=S(t,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),l=Ni(i,a,n,s,o,r);n=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([i.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=Ym(u,h,n,s,o,r);return i!==t&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:sn(d,"int32"),selectedScores:sn(f)}}const oO=sO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(t,e,n,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=S(t,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),l=Ni(i,a,n,s,o,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},p=_.runKernel(Hp,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const iO=O({nonMaxSuppressionPadded_:rO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function aO(t,e,n,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=S(t,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),l=Ni(i,a,n,s,o,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:p,validOutputs:m}=Xm(d,f,c,u,h,r);return i!==t&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:sn(p,"int32"),validOutputs:Re(m,"int32")}}const lO=aO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(t,e,n=!1,s=!1){const o=S(t,"images","resizeBilinear");$(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),$(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),$(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:r},l={alignCorners:n,halfPixelCenters:s,size:e},c=_.runKernel(dh,a,l);return i?M(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Kw=O({resizeBilinear_:cO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(t,e,n=!1,s=!1){const o=S(t,"images","resizeNearestNeighbor");$(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),$(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),$(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:r},l={alignCorners:n,halfPixelCenters:s,size:e},c=_.runKernel(hh,a,l);return i?M(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const qw=O({resizeNearestNeighbor_:uO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(t,e="binary",n=!1,s=.5){const o=S(t,"image","threshold"),r=.2989,i=.587,a=.114,l=o.shape[0]*o.shape[1];let c=D(sn([s]),255),u,h,d,f;if($(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),$(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),$(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),$(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[u,h,d]=Mn(o,[1,1,1],-1);const g=D(u,r),x=D(h,i),b=D(d,a);f=se(se(g,x),b)}else f=t;if(e==="otsu"){const g=$D(pe(Fw(f),"int32"),Ic([]),256);c=dO(g,l)}const p=n?Si(f,c):ss(f,c);return pe(D(p,255),"int32")}function dO(t,e){let n=sn([-1]),s=sn([0]),o=sn([0]),r,i,a,l,c,u;for(let h=0;h<t.size-1;h++){r=et(t,0,h+1),i=et(t,h+1),c=ke(ve(r),e),u=ke(ve(i),e);const d=ve(D(r,zc(0,r.size)));a=ke(d,ve(r));const f=Cl(i.shape,r.size),p=se(zc(0,i.size),f),m=D(i,p);l=ke(ve(m),ve(i));const g=Ie(a,l),x=Ie(a,l),b=D(c,u);o=D(D(b,g),x);const w=ss(o,s);s=Sn(w,o,s),n=Sn(w,sn([h]),n)}return n}const fO=O({threshold_:hO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(t,e,n="nearest",s="constant",o=0,r){const i=S(t,"image","transform","float32"),a=S(e,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:i,transforms:a},c={interpolation:n,fillMode:s,fillValue:o,outputShape:r};return _.runKernel(am,l,c)}const mO=O({transform_:pO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(t,e,n){$(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),$(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const s=S(t,"a","bandPart");$(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[r,i]=s.shape.slice(-2);if(!(e<=r))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=r),n<0&&(n=i);const a=M(zc(0,r,1,"int32"),[-1,1]),l=zc(0,i,1,"int32"),c=Ie(a,l),u=Ys(Si(c,Re(+e,"int32")),ki(c,Re(-n,"int32"))),h=At([r,i],s.dtype);return M(yr(ci(M(s,[-1,r,i])).map(d=>Sn(u,d,h))),o)}const xO=O({bandPart_:gO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(t){let e;if(Array.isArray(t)){e=!1,$(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=t[0].shape[0];for(let r=1;r<t.length;++r)$(t[r].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[r].shape[0]} vs. ${o})`)}else e=!0,t=Mn(t,t.shape[0],0).map(o=>kl(o,[0]));$(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],s=t;for(let o=0;o<t.length;++o)n.push(_.tidy(()=>{let r=s[o];if(o>0)for(let i=0;i<o;++i){const a=D(ve(D(n[i],r)),n[i]);r=Ie(r,a)}return ke(r,Th(r,"euclidean"))}));return e?yr(n,0):n}const yO=O({gramSchmidt_:bO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(t,e=!1){if($(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return Eb(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((l,c)=>l*c),s=ci(M(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),o=[],r=[];s.forEach(l=>{const[c,u]=Eb(l,e);o.push(c),r.push(u)});const i=M(yr(o,0),t.shape),a=M(yr(r,0),t.shape);return[i,a]}}function Eb(t,e=!1){return _.tidy(()=>{$(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],s=t.shape[1];let o=yw(n),r=or(t);const i=Jr([[1]],[1,1]);let a=or(i);const l=n>=s?s:n;for(let c=0;c<l;++c){const u=r,h=a,d=o;[a,r,o]=_.tidy(()=>{const f=et(r,[c,c],[n-c,1]),p=Th(f),m=et(r,[c,c],[1,1]),g=Sn(ss(m,0),Jr([[-1]]),Jr([[1]])),x=Ie(m,D(g,p)),b=ke(f,x);b.shape[0]===1?a=or(i):a=qt([i,et(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=mt(ke(Xe(g,x),p)),y=et(r,[c,0],[n-c,s]),v=D(w,a),I=Ue(a);if(c===0)r=Ie(y,Xe(v,Xe(I,y)));else{const N=Ie(y,Xe(v,Xe(I,y)));r=qt([et(r,[0,0],[c,s]),N],0)}const C=Ue(v),k=et(o,[0,c],[n,o.shape[1]-c]);if(c===0)o=Ie(k,Xe(Xe(k,a),C));else{const N=Ie(k,Xe(Xe(k,a),C));o=qt([et(o,[0,0],[n,c]),N],1)}return[a,r,o]}),Me([u,h,d])}return!e&&n>s&&(o=et(o,[0,0],[n,s]),r=et(r,[0,0],[s,s])),[o,r]})}const vO=O({qr_:wO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pn;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(pn||(pn={}));function IO(t,e,n=pn.SUM_BY_NONZERO_WEIGHTS){const s=S(t,"losses","computeWeightedLoss");let o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));const r=o==null?s:D(s,o);if(n===pn.NONE)return r;if(n===pn.SUM)return ve(r);if(n===pn.MEAN){if(o==null)return bt(r);{const i=s.size/o.size,a=ke(ve(r),ve(o));return i>1?ke(a,Re(i)):a}}if(n===pn.SUM_BY_NONZERO_WEIGHTS){if(o==null)return ke(ve(r),Re(s.size));{const i=D(o,Ro(s.shape)),a=pe(ve(ha(i,Re(0))),"float32");return ke(ve(r),a)}}throw Error(`Unknown reduction: ${n}`)}const Do=O({computeWeightedLoss_:IO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(t,e,n,s=pn.SUM_BY_NONZERO_WEIGHTS){const o=S(t,"labels","absoluteDifference"),r=S(e,"predictions","absoluteDifference");let i=null;n!=null&&(i=S(n,"weights","absoluteDifference")),ts(o.shape,r.shape,"Error in absoluteDifference: ");const a=Rt(Ie(o,r));return Do(a,i,s)}const LJ=O({absoluteDifference_:CO});function $O(t,e,n,s,o=pn.SUM_BY_NONZERO_WEIGHTS){const r=S(t,"labels","cosineDistance"),i=S(e,"predictions","cosineDistance");let a=null;s!=null&&(a=S(s,"weights","cosineDistance")),ts(r.shape,i.shape,"Error in cosineDistance: ");const l=Re(1),c=Ie(l,ve(D(r,i),n,!0));return Do(c,a,o)}const PJ=O({cosineDistance_:$O});function kO(t,e,n,s=pn.SUM_BY_NONZERO_WEIGHTS){let o=S(t,"labels","hingeLoss");const r=S(e,"predictions","hingeLoss");let i=null;n!=null&&(i=S(n,"weights","hingeLoss")),ts(o.shape,r.shape,"Error in hingeLoss: ");const a=Re(1);o=Ie(D(Re(2),o),a);const l=to(Ie(a,D(o,r)));return Do(l,i,s)}const BJ=O({hingeLoss_:kO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(t,e,n,s=1,o=pn.SUM_BY_NONZERO_WEIGHTS){const r=S(t,"labels","huberLoss"),i=S(e,"predictions","huberLoss");let a=null;n!=null&&(a=S(n,"weights","huberLoss")),ts(r.shape,i.shape,"Error in huberLoss: ");const l=Re(s),c=Rt(Ie(i,r)),u=Rh(c,l),h=Ie(c,u),d=se(D(Re(.5),ot(u)),D(l,h));return Do(d,a,o)}const zJ=O({huberLoss_:SO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(t,e,n,s=1e-7,o=pn.SUM_BY_NONZERO_WEIGHTS){const r=S(t,"labels","logLoss"),i=S(e,"predictions","logLoss");let a=null;n!=null&&(a=S(n,"weights","logLoss")),ts(r.shape,i.shape,"Error in logLoss: ");const l=Re(1),c=Re(s),u=mt(D(r,Qn(se(i,c)))),h=D(Ie(l,r),Qn(se(Ie(l,i),c))),d=Ie(u,h);return Do(d,a,o)}const WJ=O({logLoss_:NO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(t,e,n,s=pn.SUM_BY_NONZERO_WEIGHTS){const o=S(t,"labels","meanSquaredError"),r=S(e,"predictions","meanSquaredError");let i=null;n!=null&&(i=S(n,"weights","meanSquaredError")),ts(o.shape,r.shape,"Error in meanSquaredError: ");const a=Vw(o,r);return Do(a,i,s)}const VJ=O({meanSquaredError_:TO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(t,e){const n=S(t,"labels","sigmoidCrossEntropyWithLogits"),s=S(e,"logits","sigmoidCrossEntropyWithLogits");ts(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=to(s),r=D(s,n),i=Fm(Jn(mt(Rt(s))));return se(Ie(o,r),i)}function RO(t,e,n,s=0,o=pn.SUM_BY_NONZERO_WEIGHTS){let r=S(t,"multiClassLabels","sigmoidCrossEntropy");const i=S(e,"logits","sigmoidCrossEntropy");let a=null;if(n!=null&&(a=S(n,"weights","sigmoidCrossEntropy")),ts(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Re(s),u=Re(1),h=Re(.5);r=se(D(r,Ie(u,c)),D(h,c))}const l=EO(r,i);return Do(l,a,o)}const UJ=O({sigmoidCrossEntropy_:RO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return xr((o,r,i)=>{const l=Iw(r,[n],!0),c=Ie(pe(r,"float32"),l);i([o,c]);const u=mt(D(c,o));return{value:ve(u,[n]),gradFunc:(f,p)=>{const[m,g]=p,x=wt(f.shape,[n]);return[D(M(f,x),Ie(pe(m,"float32"),Jn(g))),D(M(f,x),Ie(Jn(g),pe(m,"float32")))]}}})(t,e)}function AO(t,e,n,s=0,o=pn.SUM_BY_NONZERO_WEIGHTS){let r=S(t,"onehotLabels","softmaxCrossEntropy");const i=S(e,"logits","softmaxCrossEntropy");let a=null;if(n!=null&&(a=S(n,"weights","softmaxCrossEntropy")),ts(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Re(s),u=Re(1),h=Re(r.shape[1]);r=se(D(r,Ie(u,c)),ke(c,h))}const l=DO(r,i);return Do(l,a,o)}const GJ=O({softmaxCrossEntropy_:AO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(t,e,n,s){const o=S(t,"indices","sparseFillEmptyRows","int32"),r=S(e,"values","sparseFillEmptyRows"),i=S(n,"denseShape","sparseFillEmptyRows","int32"),a=S(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:o,values:r,denseShape:i,defaultValue:a},c=_.runKernel(Zp,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const HJ=O({sparseFillEmptyRows_:FO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(t,e,n){const s=S(t,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),r=S(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:o,newShape:r},a=_.runKernel(Jp,i);return{outputIndices:a[0],outputShape:a[1]}}const jJ=O({sparseReshape_:_O});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(t,e,n){const s=S(t,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),r=S(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:o,segmentIds:r};return _.runKernel(Qp,i)}const KJ=O({sparseSegmentMean_:OO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(t,e,n){const s=S(t,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),r=S(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:o,segmentIds:r};return _.runKernel(em,i)}const qJ=O({sparseSegmentSum_:MO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(t,e,n,s,o,r,i,a){const l=S(t,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=S(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:s,leftPad:o,rightPad:r,padWidth:i,preserveShortSequences:a},h={data:l,dataSplits:c},d=_.runKernel(sm,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const XJ=O({stringNGrams_:LO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(t,e,n=!0){const s=S(t,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const r={skipEmpty:n},i={input:s,delimiter:o},a=_.runKernel(om,i,r);return{indices:a[0],values:a[1],shape:a[2]}}const YJ=O({stringSplit_:PO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(t,e){const n=S(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const o={input:n};return _.runKernel(rm,o,s)}const ZJ=O({stringToHashBucketFast_:BO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hi={flipLeftRight:z_,grayscaleToRGB:V_,resizeNearestNeighbor:qw,resizeBilinear:Kw,rotateWithOffset:G_,cropAndResize:P_,nonMaxSuppression:j_,nonMaxSuppressionAsync:eO,nonMaxSuppressionWithScore:nO,nonMaxSuppressionWithScoreAsync:oO,nonMaxSuppressionPadded:iO,nonMaxSuppressionPaddedAsync:lO,threshold:fO,transform:mO},zO={bandPart:xO,gramSchmidt:yO,qr:vO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ao extends Ci{minimize(e,n=!1,s){const{value:o,grads:r}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(i)}else this.applyGradients(r);return Me(r),n?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return UA(e,n)}dispose(){this.iterations_!=null&&Me(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Re(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ao,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jm extends Ao{constructor(e,n,s=null){super(),this.learningRate=e,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=_.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=_.registeredVariables[s],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:W(()=>Ke(r).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:W(()=>Ke(r).variable(i))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[o].variable,c=this.accumulatedUpdates[o].variable;W(()=>{const u=se(D(l,this.rho),D(ot(a),1-this.rho)),h=D(ke(on(se(c,this.epsilon)),on(se(l,this.epsilon))),a),d=se(D(c,this.rho),D(ot(h),1-this.rho));l.assign(u),c.assign(d);const f=se(D(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Me(this.accumulatedGrads.map(e=>e.variable)),Me(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=e.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}Jm.className="Adadelta";ee(Jm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qm extends Ao{constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=_.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:W(()=>Cl(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[o].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[o].variable;W(()=>{const l=se(a,ot(i));a.assign(l);const c=se(D(ke(i,on(se(l,_.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Me(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}Qm.className="Adagrad";ee(Qm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eg extends Ao{constructor(e,n,s,o=null){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=Re(n).variable(),this.accBeta2=Re(s).variable()}),o==null&&(this.epsilon=_.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);W(()=>{const s=Ie(1,this.accBeta1),o=Ie(1,this.accBeta2);n.forEach((r,i)=>{const a=_.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:W(()=>Ke(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:W(()=>Ke(a).variable(l))});const c=Array.isArray(e)?e[i].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=se(D(u,this.beta1),D(c,1-this.beta1)),f=se(D(h,this.beta2),D(ot(c),1-this.beta2)),p=ke(d,s),m=ke(f,o);u.assign(d),h.assign(f);const g=se(D(ke(p,se(on(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(D(this.accBeta1,this.beta1)),this.accBeta2.assign(D(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Me(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(li(this.beta1,this.iterations_+1)),this.accBeta2.assign(li(this.beta2,this.iterations_+1))});const n=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}eg.className="Adam";ee(eg);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tg extends Ao{constructor(e,n,s,o=null,r=0){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=o,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=Re(0).variable(),this.accBeta1=Re(n).variable()}),o==null&&(this.epsilon=_.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);W(()=>{const s=Ie(1,this.accBeta1),o=ke(-this.learningRate,se(D(this.iteration,this.decay),1));n.forEach((r,i)=>{const a=_.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:Ke(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:Ke(a).variable(l)});const c=Array.isArray(e)?e[i].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=se(D(u,this.beta1),D(c,1-this.beta1)),f=D(h,this.beta2),p=Rt(c),m=Eo(f,p);u.assign(d),h.assign(m);const g=se(D(ke(o,s),ke(d,se(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(se(this.iteration,1)),this.accBeta1.assign(D(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Me(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}tg.className="Adamax";ee(tg);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fh extends Ao{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=Array.isArray(e)?e[o].tensor:e[s];if(r==null)return;const i=_.registeredVariables[s];W(()=>{const a=se(D(this.c,r),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Cn(Re(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}Fh.className="SGD";ee(Fh);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ng extends Fh{constructor(e,n,s=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=Re(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=_.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:W(()=>Ke(r).variable(!1))});const i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[s];a!=null&&W(()=>{let l;const c=se(D(this.m,i),a);this.useNesterov?l=se(D(this.c,se(a,D(c,this.m))),r):l=se(D(this.c,c),r),i.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Me(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}ng.className="Momentum";ee(ng);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sg extends Ao{constructor(e,n=.9,s=0,o=null,r=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,o==null&&(this.epsilon=_.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=_.registeredVariables[s],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:W(()=>Ke(r).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:W(()=>Ke(r).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:W(()=>Ke(r).variable(i))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[o].variable,c=this.accumulatedMoments[o].variable;W(()=>{const u=se(D(l,this.decay),D(ot(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[o].variable,d=se(D(h,this.decay),D(a,1-this.decay)),f=ke(D(a,this.learningRate),on(Ie(u,se(ot(d),this.epsilon)))),p=se(D(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const m=Ie(r,p);r.assign(m)}else{const h=se(D(l,this.decay),D(ot(a),1-this.decay)),d=se(D(c,this.momentum),ke(D(a,this.learningRate),on(se(h,this.epsilon))));l.assign(h),c.assign(d);const f=Ie(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Me(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Me(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Me(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=e.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}sg.className="RMSProp";ee(sg);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bo{static sgd(e){return new Fh(e)}static momentum(e,n,s=!1){return new ng(e,n,s)}static rmsprop(e,n=.9,s=0,o=null,r=!1){return new sg(e,n,s,o,r)}static adam(e=.001,n=.9,s=.999,o=null){return new eg(e,n,s,o)}static adadelta(e=.001,n=.95,s=null){return new Jm(e,n,s)}static adamax(e=.002,n=.9,s=.999,o=null,r=0){return new tg(e,n,s,o,r)}static adagrad(e,n=.1){return new Qm(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go={sgd:Bo.sgd,momentum:Bo.momentum,adadelta:Bo.adadelta,adagrad:Bo.adagrad,rmsprop:Bo.rmsprop,adamax:Bo.adamax,adam:Bo.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:t=>t())();function Vc(){return new Promise(t=>WO(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function og(t,e){const n=t[0].length;t.forEach((o,r)=>{$(o.length===n,()=>`Error in concat${n}D: rank of tensors[${r}] must be the same as the rank of the rest (${n})`)}),$(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=t[0];t.forEach((o,r)=>{for(let i=0;i<n;i++)$(i===e||o[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${r}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Ls(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ls;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(ls||(ls={}));function Xw(t,e,n){let s=new Array;if(n==null&&e==null)return s;if(e==null)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(n==null)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let o=1;o<n.length;++o){const r=n[o],i=s[s.length-n.length+o],a=s[i];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+t}] = ${r} but shape[${o+t}] = ${a}`)}else s[i]=r}return s}function Yw(t){const e={FIRST_DIM_SIZE:ls.FIRST_DIM_SIZE,VALUE_ROWIDS:ls.VALUE_ROWIDS,ROW_LENGTHS:ls.ROW_LENGTHS,ROW_SPLITS:ls.ROW_SPLITS,ROW_LIMITS:ls.ROW_LIMITS,ROW_STARTS:ls.ROW_STARTS},n=[];for(const s of t)if(s in e)n.push(e[s]);else break;return n}function Zw(t){return t.length===0?0:t[0]===ls.FIRST_DIM_SIZE?t.length-1:t.length}function Jw(t,e){if(t==null||e==null)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let o=0;o<Math.min(n,s-1);++o){const r=t[o],i=e[o+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-t.length}] = ${r} but ragged tensor input.flatValues.shape[${o-t.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rg=30;function _h(t){return t<=rg?t:nf(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ig(t,e,n){const s=n*(typeof t=="number"?t:t[0]),o=e*(typeof t=="number"?t:t[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nl(t,e,n,s=!0){let o=[];if(s)o=o.concat(e.slice(0)),o.push(t[0]/n),o=o.concat(t.slice(1));else{o=o.concat(t[0]);const r=e.length;for(let i=0;i<r;++i)o=o.concat([t[i+1]/e[i],e[i]]);o=o.concat(t.slice(r+1))}return o}function Tl(t,e,n=!0){const s=[];if(n){s.push(e);for(let o=e+1;o<t;++o)o<=2*e?(s.push(o),s.push(o-(e+1))):s.push(o)}else{const o=[],r=[];for(let i=1;i<t;++i)i>=e*2+1||i%2===1?r.push(i):o.push(i);s.push(...o),s.push(0),s.push(...r)}return s}function El(t,e,n,s=!0){const o=[];s?o.push(t[0]/n):o.push(t[0]*n);for(let r=1;r<t.length;++r)r<=e.length?s?o.push(e[r-1]*t[r]):o.push(t[r]/e[r-1]):o.push(t[r]);return o}function ag(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function lg(t,e,n){const s=t.slice(0,1);for(let o=0;o<n;++o)s.push(t[o+1]-e[o][0]-e[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oh=1.7580993408473768,Mh=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cg=.3275911,ug=.254829592,hg=-.284496736,dg=1.421413741,fg=-1.453152027,pg=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zs(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function Qw(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function ev(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let o=0;o<t.length;o+=4)n[Math.floor(o/4)]=t[o],s[Math.floor(o/4)]=t[o+1];return{real:n,imag:s}}function tv(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let o=2;o<t.length;o+=4)n[Math.floor(o/4)]=t[o],s[Math.floor(o/4)]=t[o+1];return{real:n,imag:s}}function mg(t,e){const n=t[e*2],s=t[e*2+1];return{real:n,imag:s}}function nv(t,e,n,s){t[s*2]=e,t[s*2+1]=n}function sv(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let o=0;o<Math.ceil(t/2);o++){const r=(e?2:-2)*Math.PI*(o/t);n[o]=Math.cos(r),s[o]=Math.sin(r)}return{real:n,imag:s}}function ov(t,e,n){const s=(n?2:-2)*Math.PI*(t/e),o=Math.cos(s),r=Math.sin(s);return{real:o,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yd="->",VO=/->/g,Rb=",",Db="...";function gg(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(VO,"").length)/yd.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${yd}").`);const[s,o]=t.split(yd);$(s.indexOf(Db)===-1,()=>`The ellipsis notation ("${Db}") is not supported yet.`);const r=s.split(Rb),i=r.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<o.length;++d){const f=o[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<s.length;++d){const f=s[d];a.indexOf(f)===-1&&f!==Rb&&a.push(f)}const l=new Array(r.length);for(let d=0;d<i;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const c=a.length,u=o.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function xg(t,e){let n=new Array(t);n.fill(-1);for(let o=0;o<e.length;++o)n[e[o]]=o;const s=[];for(let o=0;o<t;++o)n[o]===-1&&s.push(o);return n=n.filter(o=>o!==-1),{permutationIndices:n,expandDims:s}}function bg(t,e,n){const s=new Array(t);for(let o=0;o<n.length;++o){const r=n[o].shape;for(let i=0;i<e[o].length;++i)s[e[o][i]]===void 0?s[e[o][i]]=r[i]:$(s[e[o][i]]===r[i],()=>`Expected dimension ${s[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function yg(t,e){const n=t,s=[];let o=0;t.length===0&&n.push(-1),o=t.length+1;for(let i=0;i<o;++i)s.push([]);const r=[];for(let i=0;i<n.length;++i){const a=n[i],l=UO(e,a);for(const c of l)r.indexOf(c)===-1&&(s[i].push(c),r.push(c))}return{path:n,steps:s}}function wg(t){return t.every((e,n)=>e===n)}function UO(t,e){const n=[];for(let s=0;s<t.length;++s)(t[s].length===0||t[s].indexOf(e)!==-1||e===-1)&&n.push(s);return n}function vg(t,e,n=0){let s=[];if(typeof e=="number")$(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(t.shape[n]/e);else{const o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);$(o<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[r]=t.shape[n]-i}$(t.shape[n]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function iv(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function av(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function cv(t,e){return`size ${t} must be non-negative, not ${e}`}function uv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function hv(t,e){const n=q(t),s=q(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${t} outputShape= ${e}`}function dv(t,e){const n=q(t),s=q(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sf(){return"segment ids must be >= 0"}function fv(){return"segment ids are not increasing"}function pv(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function mv(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(t,e){let n=!1,s;for(t<=rg?(s=t,n=!0):s=nf(t,Math.floor(Math.sqrt(t)));!n;)s>e||s===t?n=!0:s=nf(t,s+1);return s}function xv(t,e,n){const s=[],o=t.length;for(let r=0;r<o;r++)r!==e?s.push(t[r]):s.push(n);return s}function Ig(t,e,n,s){const o=e.shape.length,r=t.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=t.shape[n],a=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)a.push(t.shape[h]),l*=t.shape[h];for(let h=s;h<n;h++)a.push(t.shape[h]),c*=t.shape[h];for(let h=s;h<o;h++)a.push(e.shape[h]);for(let h=n+1;h<r;h++)a.push(t.shape[h]),u*=t.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:a}}var GO=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:gv,computeOutShape:xv,collectGatherOpShapeInfo:Ig},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(t){try{return t.map(e=>bo(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function bv(t){return t.map(e=>po(e))}var HO=Object.freeze(Object.defineProperty({__proto__:null,slice_util:DR,segment_util:GO,fromUint8ToStringArray:wr,fromStringArrayToUint8:bv,upcastType:$n,axesAreInnerMostDims:Rm,combineLocations:xw,computeOutAndReduceShapes:Ot,expandShapeToKeepDim:wt,assertAxesAreInnerMostDims:Ht,getAxesPermutation:xt,getUndoAxesPermutation:To,getInnerMostAxes:vt,getBroadcastDims:ai,getReductionAxes:Et,assertAndGetBroadcastShape:Fe,assertParamsConsistent:og,computeOutShape:Ls,computeDilation2DInfo:Il,computePool2DInfo:ns,computePool3DInfo:Qs,computeConv2DInfo:Gt,computeConv3DInfo:No,computeDefaultPad:Cm,tupleValuesAreOne:mr,eitherStridesOrDilationsAreOne:Yt,convertConv2DDataFormat:eo,checkPadOnDimRoundingMode:xn,getFusedDyActivation:Gm,getFusedBiasGradient:Hm,applyActivation:jm,shouldFuse:Km,get RowPartitionType(){return ls},combineRaggedTensorToTensorShapes:Xw,getRowPartitionTypesHelper:Yw,getRaggedRank:Zw,validateDefaultValueShape:Jw,PARALLELIZE_THRESHOLD:rg,computeOptimalWindowSize:_h,getImageCenter:ig,getReshaped:Nl,getPermuted:Tl,getReshapedPermuted:El,getSliceBeginCoords:ag,getSliceSize:lg,prepareAndValidate:xm,validateUpdateShape:tw,validateInput:SR,calculateShapes:vl,SELU_SCALEALPHA:Oh,SELU_SCALE:Mh,ERF_P:cg,ERF_A1:ug,ERF_A2:hg,ERF_A3:dg,ERF_A4:fg,ERF_A5:pg,warn:_n,log:sE,mergeRealAndImagArrays:Zs,splitRealAndImagArrays:Qw,complexWithEvenIndex:ev,complexWithOddIndex:tv,getComplexWithIndex:mg,assignToTypedArray:nv,exponents:sv,exponent:ov,decodeEinsumEquation:gg,getEinsumPermutation:xg,checkEinsumDimSizes:bg,getEinsumComputePath:yg,isIdentityPermutation:wg,prepareSplitSize:vg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:rv,getSparseFillEmptyRowsNegativeIndexErrorMessage:iv,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:av,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:lv,getSparseReshapeNegativeOutputDimErrorMessage:cv,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:uv,getSparseReshapeInputOutputMultipleErrorMessage:hv,getSparseReshapeInputOutputMismatchErrorMessage:dv,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Sf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:fv,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:pv,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:mv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yv={kernelName:Cu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,Sl(pe(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jO={kernelName:$a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=ot(pe(n,"float32")),o=on(Ie(Re(1),s));return mt(ke(t,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KO={kernelName:ka,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=on(Ie(ot(pe(n,"float32")),1));return ke(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO={kernelName:Ii,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{let a=t;const l=Et(n.shape,o);return l.length>0&&(a=ve(a,l)),M(a,n.shape)},b:()=>{let a=t;const l=Et(s.shape,o);return l.length>0&&(a=ve(a,l)),M(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO={kernelName:wp,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((s,o)=>{n[o]=()=>t.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO={kernelName:$u,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ke(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZO={kernelName:ku,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ke(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO={kernelName:Sa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,on(Ie(Re(1),ot(pe(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QO={kernelName:Na,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=on(se(Re(1),ot(pe(n,"float32"))));return ke(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eM={kernelName:Ra,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{const a=se(ot(n),ot(s));let l=D(t,ke(s,a));const c=Et(n.shape,o);return c.length>0&&(l=ve(l,c)),M(l,n.shape)},b:()=>{const a=se(ot(n),ot(s));let l=mt(D(t,ke(n,a)));const c=Et(s.shape,o);return c.length>0&&(l=ve(l,c)),M(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM={kernelName:Ta,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,se(ot(pe(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nM={kernelName:Ea,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,Ie(Re(1),ot(pe(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(t,e,n,s,o,r){const i=S(t,"dy","avgPool3dGrad"),a=S(e,"input","avgPool3dGrad");let l=i,c=a,u=!1;a.rank===4&&(u=!0,l=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),xn("avgPool3dGrad",o,r);const h={dy:l,input:c},d={filterSize:n,strides:s,pad:o,dimRoundingMode:r},f=_.runKernel($p,h,d);return u?M(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const oM=O({avgPool3dGrad_:sM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM={kernelName:Nu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:a}=n;return{x:()=>oM(t,s,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(t,e,n,s,o){const r=S(t,"dy","avgPoolGrad"),i=S(e,"input","avgPoolGrad");$(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let a=i,l=r,c=!1;i.rank===3&&(c=!0,a=M(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=M(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:n,strides:s,pad:o},d=_.runKernel(Cp,u,h);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const aM=O({avgPoolGrad_:iM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lM={kernelName:Su,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:o,strides:r,pad:i}=n;return{x:()=>aM(t,s,o,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM={kernelName:Tu,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,o]=e,{transposeA:r,transposeB:i}=n;return!r&&!i?{a:()=>Xe(t,o,!1,!0),b:()=>Xe(s,t,!0,!1)}:!r&&i?{a:()=>Xe(t,o,!1,!1),b:()=>Xe(t,s,!0,!1)}:r&&!i?{a:()=>Xe(o,t,!1,!0),b:()=>Xe(s,t,!1,!1)}:{a:()=>Xe(o,t,!0,!0),b:()=>Xe(t,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM={kernelName:Eu,gradFunc:(t,e,n)=>{const{blockShape:s,crops:o}=n;return{x:()=>Pm(t,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM={kernelName:tE,gradFunc:(t,e,n)=>{const s=n,o=s.inputShape,r=s.shape,i=Array.from(r);for(let l=o.length-1;l>=0;l--)if(o[l]===r[l])i[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>ve(t,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dM={kernelName:Da,gradFunc:t=>({x:()=>t.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM={kernelName:Aa,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM={kernelName:Fa,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:o,clipValueMax:r}=n;return{x:()=>Sn(Ys(ki(s,o),Si(s,r)),t,Ke(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM={kernelName:Ru,inputsToSave:["x"],gradFunc:yv.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM={kernelName:Du,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map(l=>l.shape),{axis:o}=n,r=We(o,e[0].shape)[0],i=s.map(l=>l[r]);return Mn(t,i,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xM={kernelName:Au,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,o]=e,{dilations:r,strides:i,pad:a,dataFormat:l}=n;return $(mr(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>Nm(s.shape,t,o,i,a,l),filter:()=>Um(s,t,o.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM={kernelName:Fu,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,o]=e,{strides:r,pad:i,dataFormat:a,dimRoundingMode:l}=n;return{dy:()=>gr(t,o,r,i,a,1,l),filter:()=>Um(t,s,o.shape,r,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(t,e,n,s,o){let r=t;t.rank===4&&(r=M(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;i.rank===4&&(i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),$(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(r.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const a={x:r,dy:i},l={strides:s,pad:o,filterShape:n};return _.runKernel(Tp,a,l)}const wM=O({conv3DBackpropFilter_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM={kernelName:_u,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:o,pad:r}=n;$(mr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>pw(i.shape,t,a,o,r),filter:()=>wM(i,t,a.shape,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM={kernelName:_a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(mt(Lw(pe(n,"float32"))),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM={kernelName:Oa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(Pw(pe(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M={kernelName:Ou,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:o,exclusive:r,reverse:i}=n;return{x:()=>{const a=xt([o],s.rank);let l=gw(t,o,r,!i);return a!=null&&(l=Ue(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM={kernelName:Mu,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:o,pad:r,dimRoundingMode:i}=n,a=s==null?[1,1]:s;$(mr(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=e;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),$(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),$(Yt(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),xn("depthwiseConv2d",r,i),{x:()=>E_(l.shape,t,c,o,r,a,i),filter:()=>N_(l,t,c.shape,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM={kernelName:Lu,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,o]=e,r={x:s,filter:o,dy:t},i={x:s,filter:o,dy:t};return{x:()=>_.runKernel(sf,r,n),filter:()=>_.runKernel(of,i,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM={kernelName:La,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>_.runKernel(Op,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TM={kernelName:Pa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=D(Jn(mt(ot(n))),2/Math.sqrt(Math.PI));return{x:()=>D(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EM={kernelName:Ba,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RM={kernelName:Bu,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>M(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DM={kernelName:za,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,Jn(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM={kernelName:Wa,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FM={kernelName:Va,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{const a=ke(t,pe(s,"float32")),l=Et(n.shape,o);return l.length>0?M(ve(a,l),n.shape):a},b:()=>{let a=D(t,pe(n,"float32"));const l=Et(s.shape,o);l.length>0&&(a=M(ve(a,l),s.shape));const c=ot(s);return mt(ke(a,pe(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M={kernelName:zu,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[o,r,i,a]=e,l=a==null?Re(1):a,c=Et(r.shape,o.shape),u=[];if(r.rank===1){for(let y=0;y<o.shape.length-1;++y)u.push(o.shape[y]);u.push(1)}const h=Ie(o,r),d=D(t,l),f=_w(se(i,Re(s))),p=D(D(D(f,f),f),Re(-.5));return{x:()=>r.rank===1?M(D(D(t,ds(M(f,[1,1,1,r.shape[0]]),u)),l),o.shape):M(D(D(t,f),l),o.shape),mean:()=>{let y=D(D(f,Re(-1)),d);return r.rank===1&&(y=ve(y,c)),M(y,r.shape)},variance:()=>{let y=D(D(p,h),d);return r.rank===1&&(y=ve(y,c)),M(y,r.shape)},scale:()=>{const y=D(h,f);let v=D(t,y);return r.rank===1&&(v=ve(v,c)),M(v,r.shape)},offset:()=>{let y=t;return r.rank===1&&(y=ve(y,c)),M(y,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM={kernelName:Wu,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,o]=e,{axis:r}=n,i=We(r,s.shape)[0];return{x:()=>{const l=s.shape,c=o.size,u=l.slice(0,i),h=u.length,d=l.slice(r,l.length).slice(1),f=d.length,p=Ab(0,h),m=Ab(h+1,h+1+f),g=Fb([u,[c],d]),x=M(t,g),b=M(o,[c]),w=Fb([[h],p,m]),y=Ue(x,w);let v=Gw(y,b,s.shape[i]);const I=To(w);return v=Ue(v,I),v},indices:()=>o}}};function Ab(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Fb(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ke(n),b:()=>Ke(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LM={kernelName:Ga,gradFunc:t=>({x:()=>pe(t,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PM={kernelName:Ha,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BM={kernelName:ja,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zM={kernelName:Ka,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WM={kernelName:Uu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:o}=n,r=ss(s,0);return{x:()=>Sn(r,t,D(t,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM={kernelName:Xa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,se(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM={kernelName:qa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,pe(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM={kernelName:nE,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:o}=n;return{logits:()=>{const i=Jn(s);return Ie(t,D(ve(t,o,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(t,e,n,s=5,o=1,r=1,i=.5){const a={x:t,y:e,dy:n},l={depthRadius:s,bias:o,alpha:r,beta:i};return _.runKernel(Wp,a,l)}const jM=O({localResponseNormalizationBackprop_:HM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KM={kernelName:Xu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,o]=e,{depthRadius:r,bias:i,alpha:a,beta:l}=n;return{x:()=>jM(s,o,t,r,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(t,e,n,s){return e.rank<n.rank&&(e=M(e,wt(e.shape,s))),t.rank<n.rank&&(t=M(t,wt(t.shape,s))),{x:()=>D(t,pe(Vs(n,e),t.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _b={kernelName:Yu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:o}=s,r=e[0],i=e[1],a=We(o,r.shape),l=wv(t,i,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qM={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>D(t,pe(ki(n,s),"float32")),b:()=>D(t,pe(ww(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(t,e,n,s,o,r,i){const a=S(t,"dy","maxPool3dGrad"),l=S(e,"input","maxPool3dGrad"),c=S(n,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=M(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=M(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),$(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),xn("maxPool3dGrad",r,i);const p={dy:u,input:h,output:d},m={filterSize:s,strides:o,pad:r,dimRoundingMode:i},g=_.runKernel(Up,p,m);return f?M(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const YM=O({maxPool3dGrad_:XM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM={kernelName:Ju,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,o]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=n;return{x:()=>YM(t,s,o,r,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(t,e,n,s,o,r,i){const a=S(t,"dy","maxPoolGrad"),l=S(e,"input","maxPoolGrad"),c=S(n,"output","maxPoolGrad");$(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),$(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),xn("maxPoolGrad",r,i);const u={dy:a,input:l,output:c},h={filterSize:s,strides:o,pad:r,dimRoundingMode:i};return _.runKernel(Vp,u,h)}const QM=O({maxPoolGrad_:JM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eL={kernelName:Zu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,o]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>QM(t,s,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL={kernelName:Qu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:o}=n,r=We(o,s.shape),a=Ot(s.shape,r)[1],l=q(a);return{x:()=>{const u=s.shape.slice();r.forEach(f=>{u[f]=1});const h=M(t,u);return ke(D(h,Ro(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nL={kernelName:eh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:o}=s,[r,i]=e,a=We(o,r.shape),l=wv(t,i,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sL={kernelName:Za,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>D(t,pe(Si(n,s),"float32")),b:()=>D(t,pe(ss(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL={kernelName:th,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:o}=n,r=o.map(i=>i[0]);return{x:()=>et(t,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL={kernelName:Ja,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{const a=Et(n.shape,o);return a.length>0?M(ve(t,a),n.shape):t},b:()=>{const a=D(t,mt(Eh(ke(n,s)))),l=Et(s.shape,o);return l.length>0?M(ve(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL={kernelName:Qa,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{const a=D(t,pe(s,"float32")),l=Et(n.shape,o);return l.length>0?M(ve(a,l),n.shape):a},b:()=>{const a=D(t,pe(n,"float32")),l=Et(s.shape,o);return l.length>0?M(ve(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aL={kernelName:nh,gradFunc:t=>({x:()=>mt(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL={kernelName:rh,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>At(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cL={kernelName:oh,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL={kernelName:ih,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return ci(t,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ob={kernelName:ah,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:o}=n,r=o.map(i=>i[0]);return{x:()=>et(t,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL={kernelName:el,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,o]=e,r=n,i=s,a=Fe(r.shape,i.shape);return{a:()=>{const u=pe(i,"float32");let h=D(t,D(u,li(r,Ie(u,Re(1)))));const d=Et(r.shape,a);return d.length>0&&(h=ve(h,d)),M(h,r.shape)},b:()=>{const u=ss(r,0),h=Sn(u,Qn(r),Ke(r));let d=D(t,D(o,h));const f=Et(i.shape,a);return f.length>0&&(d=ve(d,f)),M(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dL={kernelName:lh,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,o=ss(n,0);return{x:()=>Sn(o,t,D(t,s)),alpha:()=>{let r=Sn(o,Ke(t),D(t,n));const i=Et(s.shape,t.shape);return i.length>0&&(r=ve(r,i)),M(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(t,e,n){const s=t.shape.slice();s[n]=1;const o=M(e,s),r=Cf(t,n,!0,!1),i=Cf(t,n,!0,!0),a=D(r,i);return D(o,a)}function pL(t,e,n){const s=t.shape.length,o=s-n.length,r=xt(n,s);let i=t;r!=null&&(i=Ue(t,r));const a=i.shape.slice(),c=a.splice(s-n.length,n.length).reduce((d,f)=>d*f,1);a.push(c);const u=i.reshape(a);let h=fL(u,e,o);if(h=h.reshape(i.shape),r!=null){const d=To(r);h=Ue(h,d)}return h}const mL={kernelName:ch,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:o}=n;let r=[];return o==null?r=s.shape.map((i,a)=>a):typeof o=="number"?r=[o]:r=o,{x:()=>pL(s,t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gL={kernelName:Ma,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{const a=ke(t,pe(s,"float32")),l=Et(n.shape,o);return l.length>0?M(ve(a,l),n.shape):a},b:()=>{let a=D(t,pe(n,"float32"));const l=Et(s.shape,o);l.length>0&&(a=M(ve(a,l),s.shape));const c=ot(s);return mt(ke(a,pe(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL={kernelName:tl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,mt(ot(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL={kernelName:sl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=D(Si(n,6),Sl(n));return{x:()=>D(t,pe(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL={kernelName:nl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,pe(Sl(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wL={kernelName:uh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vL={kernelName:dh,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,o={dy:t,images:s};return{images:()=>_.runKernel(Yp,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL={kernelName:hh,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,o={dy:t,images:s};return{images:()=>_.runKernel(Xp,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CL={kernelName:fh,gradFunc:(t,e,n)=>{const{dims:s}=n,o=We(s,t.shape);return{x:()=>br(t,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $L={kernelName:ol,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL={kernelName:rl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>mt(ke(t,D(li(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL={kernelName:ph,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>pe(Ke(n),"float32"),t:()=>D(t,pe(n,t.dtype)),e:()=>D(t,pe(_m(n),t.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL={kernelName:il,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=ss(n,Re(0)),o=Re(Oh),r=Re(Mh),i=D(t,r),a=D(D(t,o),Jn(pe(n,"float32")));return Sn(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TL={kernelName:ul,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,D(n,Ie(Re(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL={kernelName:cl,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RL={kernelName:al,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(Tm(pe(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL={kernelName:ll,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(mw(pe(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL={kernelName:mh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:o,size:r}=n,i=s.shape,[a,l]=kh(s,o,r),c=[];for(let u=0;u<t.rank;u++)c.push([a[u],i[u]-a[u]-l[u]]);return{x:()=>Lm(t,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL={kernelName:yh,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:o}=n,r=!0,i=D(t,s);return{logits:()=>Ie(i,D(ve(i,[o],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _L={kernelName:hl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,$i(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mb={kernelName:xh,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:o}=n;return{x:()=>Sm(t,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lb={kernelName:bh,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>qt(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OL={kernelName:dl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,D(on(pe(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ML={kernelName:tm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(t,D(pe(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL={kernelName:fl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Re(2);return{a:()=>D(t,D(o,Ie(n,s))),b:()=>D(t,D(o,Ie(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL={kernelName:bl,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BL={kernelName:pl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,o=Fe(n.shape,s.shape);return{a:()=>{let a=t;const l=Et(n.shape,o);return l.length>0&&(a=ve(a,l)),M(a,n.shape)},b:()=>{let a=t;const l=Et(s.shape,o);return l.length>0&&(a=ve(a,l)),M(mt(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zL={kernelName:gh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,o=s.shape.slice(),{axis:r}=n;We(r,s.shape).forEach(c=>{o[c]=1});const a=M(t,o),l=D(a,Ro(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL={kernelName:ml,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ke(t,ot(Tm(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VL={kernelName:gl,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>D(Ie(Re(1),ot(n)),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UL={kernelName:xl,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:o}=n;return{x:()=>{let i=Ke(s);if(s.rank===1)for(let a=0;a<o[0];++a)i=se(i,et(t,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)i=se(i,et(t,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)i=se(i,et(t,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)for(let u=0;u<o[3];++u)i=se(i,et(t,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL={kernelName:Yr,gradFunc:(t,e,n)=>{const s=n,{perm:o}=s,r=To(o);return{x:()=>Ue(t,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HL={kernelName:wh,gradFunc:(t,e,n)=>{const s=n,{axis:o}=s;return{value:()=>yr(t,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jL={kernelName:vh,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>KL(t,n)}}};function KL(t,e){const n=Eo(e,Ke(e)),s=Dm(t,n);let o=ki(e,Re(0,"int32"));const r=s.rank-o.rank;for(let a=0;a<r;++a)o=Fn(o,a+1);o=Ys(o,Ro(s.shape,"bool"));const i=Ke(s);return Sn(o,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL={kernelName:Ih,gradFunc:t=>({x:()=>Ke(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XL=[yv,jO,KO,qO,XO,YO,ZO,JO,QO,eM,tM,nM,rM,lM,cM,uM,hM,dM,fM,pM,mM,gM,bM,xM,vM,IM,CM,$M,kM,SM,gL,NM,TM,EM,RM,DM,FM,AM,_M,OM,MM,LM,PM,BM,zM,WM,VM,UM,GM,KM,_b,_b,qM,ZM,eL,tL,nL,sL,oL,rL,iL,aL,lL,cL,uL,Ob,Ob,hL,dL,mL,xL,bL,yL,wL,vL,IL,CL,$L,kL,SL,NL,TL,EL,RL,DL,AL,FL,_L,Mb,Mb,Lb,Lb,OL,LL,ML,PL,BL,zL,WL,VL,UL,GL,HL,jL,qL];for(const t of XL)oE(t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.abs=function(){return this.throwIfDisposed(),Rt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acos=function(){return this.throwIfDisposed(),PR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acosh=function(){return this.throwIfDisposed(),zR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.add=function(t){return this.throwIfDisposed(),se(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.all=function(t,e){return this.throwIfDisposed(),hw(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.any=function(t,e){return this.throwIfDisposed(),vf(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMax=function(t){return this.throwIfDisposed(),ua(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMin=function(t){return this.throwIfDisposed(),HR(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),M(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asType=function(t){return this.throwIfDisposed(),pe(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as1D=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as2D=function(t,e){return this.throwIfDisposed(),M(this,[t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),M(this,[t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),M(this,[t,e,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as5D=function(t,e,n,s,o){return this.throwIfDisposed(),M(this,[t,e,n,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asin=function(){return this.throwIfDisposed(),KR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asinh=function(){return this.throwIfDisposed(),XR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan=function(){return this.throwIfDisposed(),ZR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan2=function(t){return this.throwIfDisposed(),QR(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atanh=function(){return this.throwIfDisposed(),tD(this)};K().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),$m(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Sm(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchNorm=function(t,e,n,s,o){return this.throwIfDisposed(),Sh(this,t,e,n,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.broadcastTo=function(t){return this.throwIfDisposed(),ea(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cast=function(t){return this.throwIfDisposed(),pe(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ceil=function(){return this.throwIfDisposed(),ND(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Pn(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof ht&&(t=[t]),qt([this,...t],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv1d=function(t,e,n,s,o,r){return this.throwIfDisposed(),dw(this,t,e,n,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2dTranspose=function(t,e,n,s,o){return this.throwIfDisposed(),fw(this,t,e,n,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2d=function(t,e,n,s,o,r){return this.throwIfDisposed(),gr(this,t,e,n,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cos=function(){return this.throwIfDisposed(),Tm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cosh=function(){return this.throwIfDisposed(),mw(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Cf(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),gw(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ZD(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthwiseConv2d=function(t,e,n,s,o,r){return this.throwIfDisposed(),Em(this,t,e,n,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dilation2d=function(t,e,n,s,o){return this.throwIfDisposed(),eA(this,t,e,n,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.divNoNan=function(t){return this.throwIfDisposed(),rA(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.div=function(t){return this.throwIfDisposed(),ke(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dot=function(t){return this.throwIfDisposed(),aA(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.elu=function(){return this.throwIfDisposed(),Nh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.equal=function(t){return this.throwIfDisposed(),Vs(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.erf=function(){return this.throwIfDisposed(),uA(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),yA(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.exp=function(){return this.throwIfDisposed(),Jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expandDims=function(t){return this.throwIfDisposed(),Fn(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expm1=function(){return this.throwIfDisposed(),CA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.fft=function(){return this.throwIfDisposed(),zw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.flatten=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floor=function(){return this.throwIfDisposed(),Eh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floorDiv=function(t){return this.throwIfDisposed(),uw(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.gather=function(t,e){return this.throwIfDisposed(),Dm(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greaterEqual=function(t){return this.throwIfDisposed(),ki(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greater=function(t){return this.throwIfDisposed(),ss(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ifft=function(){return this.throwIfDisposed(),kf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.irfft=function(){return this.throwIfDisposed(),e_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isFinite=function(){return this.throwIfDisposed(),DA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isInf=function(){return this.throwIfDisposed(),FA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isNaN=function(){return this.throwIfDisposed(),OA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Am(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.lessEqual=function(t){return this.throwIfDisposed(),Si(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.less=function(t){return this.throwIfDisposed(),ww(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),zA(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSigmoid=function(){return this.throwIfDisposed(),jA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSoftmax=function(t){return this.throwIfDisposed(),vw(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Iw(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log=function(){return this.throwIfDisposed(),Qn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log1p=function(){return this.throwIfDisposed(),Fm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Ys(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalNot=function(){return this.throwIfDisposed(),_m(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalOr=function(t){return this.throwIfDisposed(),Cw(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalXor=function(t){return this.throwIfDisposed(),eF(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Xe(this,t,e,n)};K().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Om(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.max=function(t,e){return this.throwIfDisposed(),Ms(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.maximum=function(t){return this.throwIfDisposed(),Eo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mean=function(t,e){return this.throwIfDisposed(),bt(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.min=function(t,e){return this.throwIfDisposed(),$f(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.minimum=function(t){return this.throwIfDisposed(),Rh(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),lF(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mod=function(t){return this.throwIfDisposed(),uF(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mul=function(t){return this.throwIfDisposed(),D(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.neg=function(){return this.throwIfDisposed(),mt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Th(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.notEqual=function(t){return this.throwIfDisposed(),ha(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),mm(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.onesLike=function(){return this.throwIfDisposed(),es(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pad=function(t,e){return this.throwIfDisposed(),Lm(this,t,e)};K().prototype.pool=function(t,e,n,s,o,r){return this.throwIfDisposed(),yF(this,t,e,n,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pow=function(t){return this.throwIfDisposed(),li(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prelu=function(t){return this.throwIfDisposed(),Bm(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prod=function(t,e){return this.throwIfDisposed(),IF(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reciprocal=function(){return this.throwIfDisposed(),_F(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu=function(){return this.throwIfDisposed(),to(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu6=function(){return this.throwIfDisposed(),Aw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshapeAs=function(t){return this.throwIfDisposed(),M(this,t.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshape=function(t){return this.throwIfDisposed(),M(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Kw(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),qw(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reverse=function(t){return this.throwIfDisposed(),br(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rfft=function(){return this.throwIfDisposed(),Ww(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.round=function(){return this.throwIfDisposed(),Fw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rsqrt=function(){return this.throwIfDisposed(),_w(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.selu=function(){return this.throwIfDisposed(),Ow(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.separableConv2d=function(t,e,n,s,o,r){return this.throwIfDisposed(),Mw(this,t,e,n,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sigmoid=function(){return this.throwIfDisposed(),$i(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sign=function(){return this.throwIfDisposed(),UF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sin=function(){return this.throwIfDisposed(),Lw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sinh=function(){return this.throwIfDisposed(),Pw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.slice=function(t,e){return this.throwIfDisposed(),et(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softmax=function(t){return this.throwIfDisposed(),Vm(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softplus=function(){return this.throwIfDisposed(),$l(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Pm(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.split=function(t,e){return this.throwIfDisposed(),Mn(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sqrt=function(){return this.throwIfDisposed(),on(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.square=function(){return this.throwIfDisposed(),ot(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Vw(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squeeze=function(t){return this.throwIfDisposed(),kl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof ht?[this,t]:[this,...t];return yr(n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.step=function(t){return this.throwIfDisposed(),Sl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stridedSlice=function(t,e,n,s,o,r,i,a){return this.throwIfDisposed(),l_(this,t,e,n,s,o,r,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sub=function(t){return this.throwIfDisposed(),Ie(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sum=function(t,e){return this.throwIfDisposed(),ve(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tan=function(){return this.throwIfDisposed(),u_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tanh=function(){return this.throwIfDisposed(),km(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tile=function(t){return this.throwIfDisposed(),ds(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toBool=function(){return this.throwIfDisposed(),pe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toFloat=function(){return this.throwIfDisposed(),pe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toInt=function(){return this.throwIfDisposed(),pe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.topk=function(t,e){return this.throwIfDisposed(),d_(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.transpose=function(t){return this.throwIfDisposed(),Ue(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unique=function(t){return this.throwIfDisposed(),m_(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Gw(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unstack=function(t){return this.throwIfDisposed(),ci(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.where=function(t,e){return this.throwIfDisposed(),Sn(t,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.zerosLike=function(){return this.throwIfDisposed(),Ke(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Es extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Es.prototype)}}class Yn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yn.prototype)}}class F extends Error{constructor(e){super(e),Object.setPrototypeOf(this,F.prototype)}}class _e extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_e.prototype)}}class Cg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Cg.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vv{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let n;return this.cache.has(e)&&(n=this.cache.get(e),this.cache.delete(e),this.cache.set(e,n)),n}put(e,n){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let n=0;n<this.maxEntries-e;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vr(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}else{const n=new Array(e);return n.fill(t),n}}function Rs(t,e){if(!t)throw new Cg(e)}function Pb(t,e){let n=0;for(const s of t)s===e&&n++;return n}function fn(t){return t.length===1?t[0]:t}function lt(t){return Array.isArray(t)?t:[t]}function js(t){const n=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function qo(t){return t.length<=1||t.indexOf("_")===-1?t:t.replace(/[_]+(\w|$)/g,(e,n)=>n.toUpperCase())}let Wn={};function $g(t){if(t==null)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Nf(t){if(!(t==null||typeof t!="object"))if(Array.isArray(t))t.forEach(e=>Nf(e));else{const e=Object.keys(t);for(const n of e){const s=t[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?t[n]=s.value:Nf(s))}}}function Rl(t,e={},n={},s="object",o=!1){if(typeof t=="string"){const r=t;let i;if(r in n)i=n[r];else if(r in Wn)i=Wn[r];else if(i=e[r],i==null)throw new F(`Unknown ${s}: ${t}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=t;if(r.className==null||r.config==null)throw new F(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let a,l;if(i in n?[a,l]=n[i]:i in Wn?[a,l]=Wn.className:i in e&&([a,l]=e[i]),a==null)throw new F(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(Wn))c[f]=Wn[f];for(const f of Object.keys(n))c[f]=n[f];const u=r.config;u.customObjects=c;const h=Object.assign({},Wn);for(const f of Object.keys(n))Wn[f]=n[f];Nf(r.config);const d=l(a,r.config,n,o);return Wn=Object.assign({},h),d}else{const c=Object.assign({},Wn);for(const h of Object.keys(n))Wn[h]=n[h];const u=new a(r.config);return Wn=Object.assign({},c),u}}}function YL(t,e){return t<e?-1:t>e?1:0}function nc(t,e){return-1*YL(t,e)}function mo(t){if(t==null)return t;const e=[];for(const n of t)e.indexOf(n)===-1&&e.push(n);return e}function ZL(t){if(t==null)throw new F(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Er(t,e,n){if(n!=null&&t.indexOf(n)<0)throw new F(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function kg(t,e,n=0,s=1/0){return Rs(n>=0),Rs(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every(o=>typeof o===e)}function _t(t,e){Array.isArray(t)?($(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((n,s)=>_t(n,`element ${s+1} of ${e}`))):$(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${Iv(t)}.`)}function Iv(t){return t===null?"null":Array.isArray(t)?"["+t.map(e=>Iv(e)).join(",")+"]":typeof t=="string"?`"${t}"`:`${t}`}function JL(t,e,n){let s=n!=null?n():Zt(),o;return(...i)=>{const a=n!=null?n():Zt();return a-s<e||(s=a,o=t(...i)),o}}function Cv(t){return t==="relu"?"relu":t==="linear"?"linear":t==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let QL=0;function $v(){return QL++}const sc={};function Lh(t=""){return t in sc||(sc[t]=0),sc[t]+=1,t+sc[t].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const eP=["channelsFirst","channelsLast"],tP=["nearest","bilinear"],nP=["valid","same","causal"],sP=["max","avg"],oP=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Or=new Map;function It(t){Er(eP,"DataFormat",t)}function rP(t){Er(tP,"InterpolationFormat",t)}function Bn(t){Er(nP,"PaddingMode",t)}function kv(t){Er(sP,"PoolMode",t)}const ta=[],Bb="/";function ir(t,e){ta.push(t);try{const n=e();return ta.pop(),n}catch(n){throw ta.pop(),n}}function iP(){return ta.length===0?"":ta.join(Bb)+Bb}function Sv(t){if(!Tv(t))throw new Error("Not a valid tensor name: '"+t+"'");return iP()+t}function Nv(t){if(!Tv(t))throw new Error("Not a valid tensor name: '"+t+"'");Or.has(t)||Or.set(t,0);const e=Or.get(t);if(Or.set(t,Or.get(t)+1),e>0){const n=`${t}_${e}`;return Or.set(n,1),n}else return t}const aP=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Tv(t){return!!t.match(aP)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lP(t){return t===parseInt(t.toString(),10)}function go(t,e,n){e==null&&(e=0),n==null&&(n=t.length);let s=1;for(let o=e;o<n;++o)s*=t[o];return s}function ui(t){if(t.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function wo(t){if(t.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function xs(t,e){if(e<t)throw new F(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let wd;function kt(){return wd==null&&(wd=bR().epsilon()),wd}function bs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dl(t,e){return pe(t,e)}function Al(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),M(t,n)}function cP(t,e){return W(()=>{if(t.shape.length!==2)throw new F(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=Al(t,1);return Tf(n,[1,e,1])})}function uP(t){const e=[go(t.shape)];return M(t,e)}function hP(t){if(t.rank<=1)throw new F(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],go(t.shape,1)];return M(t,e)}function ar(t,e,n){return W(()=>{switch(t.rank){case 1:return zm(t,e,n);case 2:return Bw(t,[e,0],[n,t.shape[1]]);case 3:return Wm(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Wc(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return et(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return et(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new F(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function vd(t,e,n){return W(()=>{switch(t.rank){case 1:return zm(t,e,n);case 2:return Bw(t,[0,e],[t.shape[0],n]);case 3:return Wm(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Wc(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new F(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function oc(t,e,n,s){return W(()=>{switch(t.rank){case 1:return zm(t,e,n);case 2:switch(s){case 1:return ar(t,e,n);case 2:return vd(t,e,n);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ar(t,e,n);case 2:return Wm(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return vd(t,e,n);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ar(t,e,n);case 2:return Wc(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Wc(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return vd(t,e,n);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}default:throw new F(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Sg(t,e=-1){let n;return e<0&&(n=t[0].rank,n!==0?e=n:e=0),e===t[0].rank&&(e=-1),qt(t,e)}function zb(t,e){switch(t.rank){case 1:return RD([t,e]);case 2:return AD([t,e],0);case 3:return _D([t,e],0);case 4:return MD([t,e],0);default:throw new F(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Tf(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new F(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return ds(t,e)}function Ph(t,e=0,n=1,s,o){return DF(t,e,n,s,o)}function Ps(t,e,n,s){if(t.rank<2||e.rank<2)throw new _e(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const o=t.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(o!==r)throw new _e(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(t.rank===2&&e.rank===2)return Nb({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Ef(t.rank,s,bs()):null,activation:n});{const o=t.shape.slice(),r=o.pop();t=M(t,[-1,r]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],u=Array.from({length:e.rank},(p,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=M(Ue(e,u),[l,-1]);const h=[...o,...c];return M(Nb({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Ef(t.rank,s,bs()):null,activation:n}),h)}}function Ev(t,e,n){return W(()=>(Array.isArray(e)?e=sn(e,"int32"):e=pe(e,"int32"),Dm(t,e,n)))}function Fl(t){return D(t,t)}function Ef(t,e,n){const s=e.shape;if(e.rank!==1&&e.rank!==t)throw new F(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(t===5){if(n==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1,1]):M(e,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?M(e,[1,1,1,1,s[0]]):M(e,[1].concat(s))}else if(t===4){if(n==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1]):M(e,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?M(e,[1,1,1,s[0]]):M(e,[1].concat(s))}else if(t===3){if(n==="channelsFirst")return s.length===1?M(e,[1,s[0],1]):M(e,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?M(e,[1,1,s[0]]):M(e,[1].concat(s))}else if(t<3)return e;throw new F(`Unsupported input rank by biasAdd: ${e.rank}`)}function vs(t,e,n){return W(()=>(n==null&&(n=bs()),It(n),se(t,Ef(t.rank,e,n))))}function dP(t,e=1){if(e!==1)throw new _e(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Nh(t)}function fP(t){return W(()=>ke(t,se(Rt(t),1)))}function Rv(t,e,n,s){return W(()=>v_(t,e,n,s))}function pP(t){return W(()=>{const e=se(.5,D(.2,t));return Pn(e,0,1)})}function _l(t,e,n=!1){return n?t():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const mP=["fanIn","fanOut","fanAvg"],gP=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xP(t){Er(mP,"FanMode",t)}function bP(t){Er(gP,"Distribution",t)}class os extends Ci{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Dv extends os{apply(e,n){return At(e,n)}}Dv.className="Zeros";ee(Dv);class Ng extends os{apply(e,n){return Ro(e,n)}}Ng.className="Ones";ee(Ng);class Av extends os{constructor(e){if(super(),typeof e!="object")throw new F(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new F(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return W(()=>D(Re(this.value),Ro(e,n)))}getConfig(){return{value:this.value}}}Av.className="Constant";ee(Av);class Fv extends os{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return Ah(e,this.minval,this.maxval,n)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Fv.className="RandomUniform";ee(Fv);class _v extends os{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new _e(`randomNormal does not support dType ${n}.`);return Ph(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_v.className="RandomNormal";ee(_v);class Ov extends os{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new _e(`truncatedNormal does not support dType ${n}.`);return Uw(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ov.className="TruncatedNormal";ee(Ov);class Mv extends os{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return W(()=>{if(e.length!==2||e[0]!==e[1])throw new F("Identity matrix initializer can only be used for 2D square matrices.");return D(this.gain,yw(e[0]))})}getConfig(){return{gain:this.gain}}}Mv.className="Identity";ee(Mv);function yP(t,e="channelsLast"){let n,s;if(It(e),t.length===2)n=t[0],s=t[1];else if([3,4,5].indexOf(t.length)!==-1){if(e==="channelsFirst"){const o=go(t,2);n=t[1]*o,s=t[0]*o}else if(e==="channelsLast"){const o=go(t,0,t.length-2);n=t[t.length-2]*o,s=t[t.length-1]*o}}else{const o=go(t);n=Math.sqrt(o),s=Math.sqrt(o)}return[n,s]}class Nn extends os{constructor(e){if(super(),e.scale<0)throw new F(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,xP(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,bP(this.distribution),this.seed=e.seed}apply(e,n){const s=yP(e),o=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(o+r)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new _e(`${this.getClassName()} does not support dType ${n}.`);return Uw(e,0,a,n,this.seed)}else{const a=Math.sqrt(3*i);return Ah(e,-a,a,n)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Nn.className="VarianceScaling";ee(Nn);class Tg extends Nn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Nn.className}}Tg.className="GlorotUniform";ee(Tg);class Eg extends Nn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Nn.className}}Eg.className="GlorotNormal";ee(Eg);class Rg extends Nn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Nn.className}}Rg.className="HeNormal";ee(Rg);class Dg extends Nn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Nn.className}}Dg.className="HeUniform";ee(Dg);class Ag extends Nn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Nn.className}}Ag.className="LeCunNormal";ee(Ag);class Fg extends Nn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Nn.className}}Fg.className="LeCunNormal";ee(Fg);class Lv extends os{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new _e("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,n){return W(()=>{if(e.length<2)throw new _e("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,o=Ph(s,0,1,"float32");let r=zO.gramSchmidt(o);return e[0]>e[1]&&(r=Ue(r)),D(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Lv.className="Orthogonal";ee(Lv);const Wb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Vb(t,e={}){return Rl(t,Hn.getMap().classNameMap,e,"initializer")}function pt(t){return $g(t)}function dt(t){if(typeof t=="string"){const e=t in Wb?Wb[t]:t;if(e==="GlorotNormal")return new Eg;if(e==="GlorotUniform")return new Tg;if(e==="HeNormal")return new Rg;if(e==="HeUniform")return new Dg;if(e==="LeCunNormal")return new Ag;if(e==="LeCunUniform")return new Fg;{const n={};return n.className=e,n.config={},Vb(n)}}else return t instanceof os?t:Vb(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rf(t){return Array.isArray(t)&&Array.isArray(t[0])}function Uc(t){return t.length===0?[]:Array.isArray(t[0])?t:[t]}function Oe(t){let e;if(Array.isArray(t)){if(t.length!==1)throw new F(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Je(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(t.length===1)return t=t,t[0];throw new F(`Expected exactly 1 Shape; got ${t.length}`)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gc(t){let e=0;for(const n of t)n.shape.length===0?e+=1:e+=n.shape.reduce((s,o)=>s*o);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ub="Variable";class wP{constructor(e,n="float32",s=Ub,o=!0,r=null){this.dtype=n==null?"float32":n,this.shape=e.shape,this.id=$v(),s=s==null?Ub:s,this.originalName=Sv(s),this.name=Nv(this.originalName),this.trainable_=o,this.constraint=r,this.val=b_(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),vP(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function vP(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function Df(t){return t.map(e=>e.read())}function _g(t){t.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class St{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class _s{constructor(e,n,s,o,r,i,a){this.dtype=e,this.shape=n,this.sourceLayer=s,this.inputs=o,this.callArgs=r,this.outputTensorIndex=a,this.id=$v(),i!=null&&(this.originalName=Sv(i),this.name=Nv(this.originalName)),this.rank=n.length}}let IP=0;class Bh{constructor(e,n){this.callArgs=n,this.id=IP++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const n of this.inboundLayers)n!=null?e.push(n.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let CP=0;class Ge extends Ci{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=CP++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){const s=this.getClassName();n=js(s)+"_"+Lh(s)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new Yn(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new F(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return fn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return fn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Es(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Es(`Layer ${this.name} is not connected, no input to return.`);return fn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Es(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Es(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return fn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=lt(e),this.inputSpec==null||this.inputSpec.length===0)return;const n=lt(this.inputSpec);if(e.length!==n.length)throw new F(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const o=e[s],r=n[s];if(r==null)continue;const i=o.rank;if(r.ndim!=null&&i!==r.ndim)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(r.maxNDim!=null&&i>r.maxNDim)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(r.minNDim!=null&&i<r.minNDim)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(r.dtype!=null&&o.dtype!==r.dtype)throw new F(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${o.dtype}.`);if(r.axes){const a=o.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(r.shape!=null)for(let a=0;a<r.shape.length;++a){const l=r.shape[a],c=o.shape[a];if(l!=null&&c!=null&&l!==c)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${o.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();const s=lt(e);let o=!0;for(const i of s)if(!(i instanceof _s)){o=!1;break}let r=!0;for(const i of s)if(i instanceof _s){r=!1;break}if(o===r)throw new F("Arguments to apply() must be all SymbolicTensors or all Tensors");return ir(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of lt(e))i.push(a.shape);this.build(fn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let i=this.call(e,n);const a=lt(i),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=fn(l),this.activityRegularizer!=null)throw new _e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=$P(e),a=this.computeOutputShape(i);let l;const c=kP(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new _s(c,u,this,lt(e),n,this.name,h)):l=new _s(c,a,this,lt(e),n,this.name),this.addInboundNode(e,l,null,null,i,a,n),this._refCount++,this.activityRegularizer!=null)throw new _e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&e[o]!=null&&e[o]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Es(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Es(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Yn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Gc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Df(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{const n=this.weights;if(n.length!==e.length)throw new F(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;const s=[],o=Df(n);for(let r=0;r<o.length;++r){const i=o[r],a=n[r],l=e[r];if(!Ye(i.shape,l.shape))throw new F(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}_g(s)})}addWeight(e,n,s,o,r,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new F(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=l!=null?l():dt("zeros"));const c=o.apply(n,s),u=new wP(c,s,e,i,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=lt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,s,o,r,i,a=null){const l=lt(e);n=lt(n),s=lt(s),o=lt(o),r=Uc(r),i=Uc(i);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new Bh({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:n,inputMasks:s,outputMasks:o,inputShapes:r,outputShapes:i},a);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function $P(t){t=lt(t);const e=[];for(const n of t)e.push(n.shape);return fn(e)}function kP(t){return"float32"}function Pv(t,e,n){if((e==null||n!=null&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),e.inboundNodes.length===0)return[t];{const s=e.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],a=s.inboundLayers[r],l=s.nodeIndices[r],c=Pv(i,a,l);for(const u of c)o.indexOf(u)===-1&&o.push(u)}return o}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ol extends Ge{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Lh("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new F("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new F("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new F("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const o=new _s(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Bh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new F(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ol.className="InputLayer";ee(Ol);function SP(t){if(t.batchShape==null&&t.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(t.batchShape!=null&&t.shape!=null)throw new F("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;t.shape!=null&&e==null&&(e=[null].concat(t.shape));let n=t.dtype;return n==null&&(n="float32"),new Ol({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NP(t,e){if(t.dtype==null||t.dtype===e.dtype)return e;try{return pe(e,t.dtype)}catch{throw new F(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class lo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof lo)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(e==null)return;for(const n of e)this.add(n.key,n.value)}}add(e,n,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=NP(e,n),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new F(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof _s){if(this.id2Value[e.id]==null)throw new F(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const n=this.name2Id[e];if(n==null)throw new F(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[n]}}getMask(e){if(e instanceof _s){if(this.id2Value[e.id]==null)throw new F(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const n=this.name2Id[e];if(n==null)throw new F(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Me(this.id2Mask)}}const Hc=new vv,jc=new vv;function TP(t){Hc!=null&&Hc.setMaxEntries(t),jc!=null&&jc.setMaxEntries(t)}function ji(t,e,n,s){const o=n==null?!1:n.training,r=Array.isArray(t),i=r?t:[t],a=i.map(p=>p.name),l=[],c=e.names();for(const p of a)c.indexOf(p)!==-1?l.push(e.getValue(p)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const u=a.join(",")+"|"+e.names().sort().join(",");let h=Hc.get(u),d;if(h==null){const p=EP(i,e);h=p.sorted,d=p.recipientCounts,Hc.put(u,h),jc.put(u,d)}d={},o||Object.assign(d,jc.get(u));const f=new lo(e);for(let p=0;p<h.length;++p){if(s!=null){const N=yf().numTensors;N>s.maxNumTensors&&(s.maxNumTensors=N),N<s.minNumTensors&&(s.minNumTensors=N)}const m=h[p],g=m.sourceLayer;if(g instanceof Ol)continue;const x=[],b=[],w=[];let y=!1;for(const N of m.inputs){const T=f.getValue(N),A=f.getMask(N);x.push(T),b.push(A),A!=null&&(y=!0),o||(d[N.name]--,d[N.name]===0&&!e.hasKey(N)&&a.indexOf(N.name)===-1&&!T.isDisposed&&N.sourceLayer.stateful!==!0&&w.push(T))}y&&(n=n||{},n.mask=b[0]);const v=lt(g.apply(x,n));let I=null;g.supportsMasking&&(I=g.computeMask(x,b));const C=DP(m),k=Array.isArray(C)?C:[C];for(let N=0;N<k.length;++N){f.hasKey(k[N])||f.add(k[N],v[N],Array.isArray(I)?I[0]:I);const T=a.indexOf(k[N].name);T!==-1&&(l[T]=v[N])}o||Me(w)}return f.disposeMasks(),r?l:l[0]}function EP(t,e){$(t!=null&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(t.length===1){const o=Gb(t[0],e);n=o.sorted,s=o.recipientMap}else{const o=new Set;for(const r of t){const{sorted:i,recipientMap:a}=Gb(r,e);for(const l of i)o.has(l.name)||(n.push(l),o.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:RP(s)}}function RP(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Gb(t,e){const n=new Set,s=[],o={};for(const a of e.names())n.add(a);const r=[],i=[];for(r.push(t);r.length>0;){const a=r[r.length-1];if(n.has(a.name)){r.pop();continue}const l=i[i.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),s.push(a),n.add(a.name),l&&i.pop();else{i.push(r.length-1);for(const c of a.inputs)o[c.name]==null&&(o[c.name]=new Set),o[c.name].add(a.name),!n.has(c.name)&&r.push(c)}}return{sorted:s,recipientMap:o}}function DP(t){let e;if(t.sourceLayer.inboundNodes.length===1)e=t.sourceLayer.output;else{let n=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const o of t.sourceLayer.inboundNodes[s].outputTensors)if(o.id===t.id){n=s;break}e=t.sourceLayer.getOutputAt(n)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AP=H();AP.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,TP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Og(t,e){return W(()=>on(ve(D(t,t),e,!0)))}class Ml extends Ci{getConfig(){return{}}}class Bv extends Ml{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{const n=Og(e,this.axis),s=Pn(n,0,this.maxValue);return D(e,ke(s,se(kt(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Bv.className="MaxNorm";ee(Bv);class zv extends Ml{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>ke(e,se(kt(),Og(e,this.axis))))}getConfig(){return{axis:this.axis}}}zv.className="UnitNorm";ee(zv);class Wv extends Ml{apply(e){return to(e)}}Wv.className="NonNeg";ee(Wv);class Vv extends Ml{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{const n=Og(e,this.axis),s=se(D(this.rate,Pn(n,this.minValue,this.maxValue)),D(1-this.rate,n));return D(e,ke(s,se(kt(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Vv.className="MinMaxNorm";ee(Vv);const Hb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Nt(t){return $g(t)}function jb(t,e={}){return Rl(t,Hn.getMap().classNameMap,e,"constraint")}function Tt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in Hb?Hb[t]:t,config:{}};return jb(n)}else return t instanceof Ml?t:jb(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function zo(t){if(t==null)return;const e=[],n=[],s=[];for(const o in t){const r=t[o];if(typeof r!="number"){const i=r;e.push(i.data()),n.push(o),s.push(i)}}if(e.length>0){const o=await Promise.all(e);for(let r=0;r<o.length;++r)t[n[r]]=o[r][0];Me(s)}}function Uv(t){if(t!=null)for(const e in t){const n=t[e];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Kb;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(Kb||(Kb={}));const FP=125;class da{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,n){}async onEpochEnd(e,n){}async onBatchBegin(e,n){}async onBatchEnd(e,n){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class _P{constructor(e,n=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=n}append(e){this.callbacks.push(e)}setParams(e){for(const n of this.callbacks)n.setParams(e)}setModel(e){for(const n of this.callbacks)n.setModel(e)}async onEpochBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(e,n)}async onEpochEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(e,n)}async onBatchBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(e,n)}async onBatchEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(e,n)}async onTrainBegin(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainEnd(e)}}class OP extends da{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const o in n){const r=n[o];if(typeof r=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+r*s;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;const a=W(()=>se(this.totals[o],D(r,s)));this.totals[o]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:W(()=>{const o=D(ke(1,this.seen),this.totals[s]);n[s]=o,this.totals[s].dispose(),Cn(n[s])}))}}class MP extends da{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const e=[],n=[],s=[];for(const r in this.history){const i=this.history[r];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),n.push(r),s.push(a)}}const o=await Promise.all(e);for(let r=0;r<o.length;++r)this.history[n[r]][s[r]].dispose(),this.history[n[r]][s[r]]=o[r][0]}}class LP extends da{constructor(e,n){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Vc,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=FP),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ef(this.yieldEvery)&&(this.maybeWait=JL(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,s){const o=[];this.yield!=null&&(await zo(s),o.push(this.yield(e,n,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await zo(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){const s=[];this.epochEnd!=null&&(await zo(n),s.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,n){this.batchBegin!=null&&(await zo(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){const s=[];this.batchEnd!=null&&(await zo(n),s.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):ef(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await zo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await zo(e),await this.trainEnd(e))}}function Gv(t,e){return t==null&&(t={}),t instanceof da?[t]:Array.isArray(t)&&t[0]instanceof da?t:lt(t).map(s=>new LP(s,e))}class Un{constructor(){}static registerCallbackConstructor(e,n){$(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Un.checkForDuplicate(n),Un.constructors[e]==null&&(Un.constructors[e]=[]),Un.constructors[e].push(n)}static checkForDuplicate(e){for(const n in Un.constructors)Un.constructors[+n].forEach(o=>{if(o===e)throw new F("Duplicate callback constructor.")})}static clear(){Un.constructors={}}static createCallbacks(e){const n=[];for(const s in Un.constructors){const o=+s;e>=o&&n.push(...Un.constructors[o])}return n.map(s=>new s)}}Un.constructors={};function Hv(t,e,n,s,o,r,i,a,l){const c=new MP,u=[new OP,...Un.createCallbacks(e)];t!=null&&u.push(...t),u.push(c);const h=new _P(u);return h.setParams({epochs:n,initialEpoch:s,samples:o,steps:r,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bs(t,e={},n=!1){return Rl(t,Hn.getMap().classNameMap,e,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kc(t,e){return W(()=>{t.dtype!=="float32"&&(t=pe(t,"float32"));const n=ve(Fl(t),e,!0),s=Cl(n.shape,kt()),o=on(Eo(n,s));return ke(t,o)})}function zh(t,e){return W(()=>bt(Fl(Ie(e,t)),-1))}function Mg(t,e){return W(()=>bt(Rt(Ie(e,t)),-1))}function Lg(t,e){return W(()=>{const n=Ie(t,e),s=Pn(Rt(t),kt(),Number.MAX_VALUE),o=Rt(ke(n,s));return D(100,bt(o,-1))})}function PP(t,e){return W(()=>{const n=Pn(e,kt(),Number.MAX_VALUE),s=Qn(se(1,n)),o=Pn(t,kt(),Number.MAX_VALUE),r=Qn(se(1,o));return bt(Fl(Ie(s,r)),-1)})}function BP(t,e){return W(()=>{const n=Eo(0,Ie(1,D(t,e)));return bt(Fl(n),-1)})}function zP(t,e){return W(()=>{const n=Eo(0,Ie(1,D(t,e)));return bt(n,-1)})}function WP(t,e){return W(()=>{const n=ve(D(t,e),-1),s=Ms(D(Ie(1,t),e),-1);return Eo(0,se(1,Ie(s,n)))})}function VP(t,e){return W(()=>{const n=Math.log(2),s=Ie(e,t),o=Ie(se(s,$l(D(-2,s))),n);return bt(o,-1)})}function fa(t,e,n=!1){return W(()=>{if(n)e=Vm(e);else{const s=ve(e,e.shape.length-1,!0);e=ke(e,s)}return e=Pn(e,kt(),1-kt()),mt(ve(D(pe(t,"float32"),Qn(e)),e.shape.length-1))})}function qc(t,e,n=!1){return W(()=>{const s=pe(Eh(uP(t)),"int32");e=Pn(e,kt(),1-kt());const o=e.shape,r=M(mm(s,o[o.length-1]),o);return fa(r,e,n)})}function UP(t,e){if(!Ye(t.shape,e.shape))throw new F(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return W(()=>{const n=to(e),s=mt(Rt(e));return se(Ie(n,D(e,t)),Fm(Jn(s)))})}function Wh(t,e){return W(()=>{let n;return n=Pn(e,kt(),1-kt()),n=Qn(ke(n,Ie(1,n))),bt(UP(t,n),-1)})}function GP(t,e){return W(()=>{const n=Pn(t,kt(),1),s=Pn(e,kt(),1);return ve(D(t,Qn(ke(n,s))),-1)})}function HP(t,e){return W(()=>{const n=Qn(se(kt(),e));return bt(Ie(e,D(t,n)),-1)})}function jv(t,e){return W(()=>{const n=Kc(t,-1),s=Kc(e,-1),o=D(n,s);return mt(ve(o,-1))})}const Xc={meanSquaredError:zh,meanAbsoluteError:Mg,meanAbsolutePercentageError:Lg,meanSquaredLogarithmicError:PP,squaredHinge:BP,hinge:zP,categoricalHinge:WP,logcosh:VP,categoricalCrossentropy:fa,sparseCategoricalCrossentropy:qc,binaryCrossentropy:Wh,kullbackLeiblerDivergence:GP,poisson:HP,cosineProximity:jv};function Id(t){if(typeof t=="string"){if(t in Xc)return Xc[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new F(e)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kv(t,e){return W(()=>{const n=D(.5,es(e)),s=Dl(ss(e,n),t.dtype);return bt(Vs(t,s),-1)})}function qv(t,e){return W(()=>Dl(Vs(ua(t,-1),ua(e,-1)),"float32"))}function jP(t,e){return W(()=>pe(ve(Ys(Vs(t,1),Vs(e,1))),"float32"))}function KP(t,e){return W(()=>pe(ve(Ys(Vs(t,0),Vs(e,1))),"float32"))}function qP(t,e){return W(()=>{const n=jP(t,e),s=KP(t,e),o=se(n,s);return pe(Sn(ss(o,0),ke(n,o),0),"float32")})}function XP(t,e){return Wh(t,e)}function YP(t,e){return t.rank===e.rank&&(t=kl(t,[t.rank-1])),e=ua(e,-1),e.dtype!==t.dtype&&(e=pe(e,t.dtype)),pe(Vs(t,e),"float32")}const ZP=zh,JP=zh,QP=Mg,e3=Mg,t3=Lg,n3=Lg,Xv=fa,s3=jv,Yv=qc,Yc={binaryAccuracy:Kv,categoricalAccuracy:qv,precision:qP,categoricalCrossentropy:Xv,sparseCategoricalCrossentropy:Yv,mse:ZP,MSE:JP,mae:QP,MAE:e3,mape:t3,MAPE:n3,cosine:s3};function o3(t){if(typeof t=="string"&&t in Yc)return Yc[t];if(typeof t!="string"&&t!=null)return t;throw new F(`Unknown metric ${t}`)}function rc(t){if(Rs(t!==null,`Unknown LossOrMetricFn ${t}`),typeof t=="string")return t;{let e;for(const n of Object.keys(Xc))if(Xc[n]===t){e=n;break}if(e!==void 0)return e;for(const n of Object.keys(Yc))if(Yc[n]===t){e=n;break}return e!==void 0?e:t.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function r3(t){const e={Adagrad:()=>Go.adagrad(.01),Adadelta:()=>Go.adadelta(1,.95,kt()),Adam:()=>Go.adam(.001,.9,.999,kt()),Adamax:()=>Go.adamax(.002,.9,.999,kt(),0),RMSProp:()=>Go.rmsprop(.001,.9,0,kt()),SGD:()=>Go.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new F(`Unknown Optimizer ${t}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const qb=1*1024*1024;function Xb(t,e,n=!1){if(t==null||typeof t!="object"||Object.getPrototypeOf(t)!==Object.prototype||!Af(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(t);s.length>qb&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${qb}.`)}}function Af(t){if(t===null)return!0;if(typeof t=="object")if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if(typeof n!="string"||!Af(t[n]))return!1;return!0}else if(Array.isArray(t)){for(const e of t)if(!Af(e))return!1;return!0}else return!1;else{const e=typeof t;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function i3(t,e,n,s=console.log){const o=l3(t),r=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(e*u)));let i;if(!o){r.push("Receives inputs"),i=[];for(const u in t.nodesByDepth)i.push(...t.nodesByDepth[u])}s("_".repeat(e)),Zc(r,n,s),s("=".repeat(e));const a=t.layers;for(let u=0;u<a.length;++u)o?c3(a[u],n,s):u3(a[u],n,i,s),s((u===a.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=a3(t),c=Gc(t.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function a3(t){let e;return t.collectedTrainableWeights!=null?e=Gc(t.collectedTrainableWeights):e=Gc(t.trainableWeights),e}function l3(t){let e=!0;const n=[],s=[];for(const o in t.nodesByDepth)n.push(t.nodesByDepth[o]);for(const o of n){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}s.push(...o)}if(e)for(const o of t.layers){let r=!1;for(const i of o.inboundNodes)if(s.indexOf(i)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function Zc(t,e,n=console.log){let s="";for(let o=0;o<t.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=t[o],s=s.slice(0,e[o]),s+=" ".repeat(e[o]-s.length);n(s)}function c3(t,e,n){let s,o;try{o=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(t.outputShape)}catch{s="multiple"}const r=t.name,i=t.getClassName(),a=[`${r} (${i})`,o,s,t.countParams().toString()];Zc(a,e,n)}function u3(t,e,n,s){let o,r;try{r=t.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{o=JSON.stringify(t.outputShape)}catch{o="multiple"}const i=[];for(const h of t.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${f}[${p}][${m}]`)}const a=t.name,l=t.getClassName(),c=i.length===0?"":i[0],u=[`${a} (${l})`,r,o,t.countParams().toString(),c];Zc(u,e,s);for(let h=1;h<i.length;++h)Zc(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zv(t,e,n){return(t==="inboundNodes"||t==="outputLayers"||t==="inputLayers")&&e===0&&typeof n=="string"}function Jc(t,e){if(t===null)return null;if(typeof t=="string")return qo(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let o=0;o<s;++o){const r=t[o];Zv(e,o,r)?n.push(r):n.push(Jc(r,e))}return n}else{const n={};for(const s of Object.keys(t)){const o=t[s];if(s==="name"&&typeof o=="string")n[s]=o;else{const r=qo(s);n[r]=Jc(o,r)}}return n}}function Ff(t,e){if(t==null)return null;if(typeof t=="string")return js(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let o=0;o<s;++o){const r=t[o];Zv(e,o,r)?n.push(r):n.push(Ff(r,e))}return n}else{const n={};for(const s of Object.keys(t)){const o=t[s],r=js(s);(s==="name"||s==="className")&&typeof o=="string"?n[r]=o:n[r]=Ff(o,s)}return n}}/** @license See the LICENSE file. */const Jv="3.21.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class is extends Ge{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Lh(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],mo(this.inputs).length!==this.inputs.length)throw new F(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);mo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;Rs(y===0,"input layer has >1 nodes"),Rs(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof Ol))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const n={},s={},o={},r={},i={},a=[],l=(b,w,y,v,I,C)=>{(v==null||I==null||C==null)&&(v=b.sourceLayer,I=b.nodeIndex,C=b.tensorIndex);const k=v.inboundNodes[I];if(y.indexOf(k)!==-1)throw new Yn(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(k)!==-1)return;this.containerNodes.add(is.nodeKey(v,I)),v.id in i||(i[v.id]=Object.keys(i).length),y.indexOf(k)===-1&&y.push(k);const N=k.inboundLayers.length;for(let T=0;T<N;T++){const A=k.inputTensors[T],L=k.inboundLayers[T],z=k.nodeIndices[T],U=k.tensorIndices[T];l(A,w,y,L,z,U)}for(w.push(k);y.indexOf(k)>=0;)y.splice(y.indexOf(k),1);a.push(k)},c=[],u=[];for(const b of this.outputs)l(b,c,u);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in n||(n[b.id]=0);let w=n[b.id];const y=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,y),o[b.outboundLayer.id]=w,r[b.outboundLayer.id]=b.outboundLayer,n[b.id]=w;for(let v=0;v<b.inboundLayers.length;v++){const I=b.inboundLayers[v],C=b.nodeIndices[v],k=I.inboundNodes[C],N=n[k.id]==null?0:n[k.id];n[k.id]=Math.max(w+1,N),s[k.id]=k}}const d={};for(const b in n){const w=n[b];w in d||(d[w]=[]),d[w].push(s[b])}const f={};for(const b in o){const w=o[b];w in f||(f[w]=[]),f[w].push(r[b])}let p=Object.keys(f).map(b=>parseInt(b,10)).sort(nc);this.layers=[];for(const b of p){const w=f[b];w.sort((y,v)=>{const I=i[y.id],C=i[v.id];return I<C?-1:I>C?1:0});for(const y of w)y instanceof is&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=f,p=Object.keys(d).map(b=>parseInt(b,10)).sort(nc);const m=this.inputs.slice(),g=[];for(const b of p)for(const w of d[b]){const y=w.outboundLayer;if(y!=null){for(const v of w.inputTensors)if(m.indexOf(v)===-1)throw new Yn(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${y.name}". The following previous layers were accessed without issue: ${g}`);for(const v of w.outputTensors)m.push(v);g.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(b=>b.name);for(const b of x){const w=x.filter(y=>y===b).length;if(w!==1)throw new Yn(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Bh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new F("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){const s={};let o=0;for(const i of this.layers)for(const a of i.weights){if(s[a.originalName]!=null)throw new F(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,o++}const r=[];for(const i in e){let a=i;if(s[i]==null){const l=i.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[a]!=null)r.push([s[a],e[i]]);else if(n)throw new F(`Provided weight data has no target variable: ${i}`);delete s[a]}if(n){const i=[];for(const a in s)i.push(a);if(i.length>0)throw new F(`${i.length} of ${o} weights are not set: ${i}`)}_g(r)}updatedConfig(){const e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${Jv}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){const s=Ff(this.updatedConfig());return n?JSON.stringify(s):s}call(e,n){return W(()=>{e=lt(e);const s=new lo;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o]);return ji(this.outputs,s,n)})}computeMask(e,n){return W(()=>{e=lt(e);let s;return n==null?s=vr(null,e.length):s=lt(n),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const n=Uc(e);if(n.length!==this.inputLayers.length)throw new F(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<n.length;a++){const l=this.inputLayers[a],c=n[a],u=l.name+"_0_0";s[u]=c}const o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(nc);if(o.length>1)for(const a of o){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],x=c.nodeIndices[m],b=c.tensorIndices[m],w=`${g.name}_${x}_${b}`,y=s[w];h.push(y)}const d=u.computeOutputShape(fn(h)),f=Uc(d),p=u.inboundNodes.indexOf(c);for(let m=0;m<f.length;m++){const g=`${u.name}_${p}_${m}`;s[g]=f[m]}}}const r=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;i.push(h)}for(let a=0;a<i.length;a++){const l=i[a];Rs(l in s),r.push(s[l])}return fn(r)}runInternalGraph(e,n){n==null&&(n=vr(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=e[l],h=n[l];s[c.id]=[u,h]}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(nc);for(const l of o){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const m of d)m.id in s&&p.push(s[m.id]);if(p.length===d.length){let m={},g,x,b,w;if(u.callArgs!=null&&(m=u.callArgs),p.length===1){const[y,v]=p[0];m.mask==null&&(m.mask=v),b=lt(h.call(y,m)),w=lt(h.computeMask(y,v)),g=[y],x=[v]}else g=p.map(y=>y[0]),x=p.map(y=>y[1]),m.mask==null&&(m.mask=x),b=lt(h.call(g,m)),w=lt(h.computeMask(g,x));if(h.activityRegularizer)throw new _e("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<f.length;++y){const v=f[y],I=b[y],C=w[y];s[v.id]=[I,C]}}}}const r=[],i=[],a=[];for(const l of this.outputs){Rs(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),r.push(c),i.push(u)}return[r,i,a]}buildNodeConversionMap(e){const n={};let s;for(const o of this.layers){s=o instanceof is?1:0;for(let r=0;r<o.inboundNodes.length;r++){const i=is.nodeKey(o,r);this.containerNodes.has(i)&&(n[i]=s,s+=1)}}return n}getLayer(e,n){if(n!=null){if(this.layers.length<=n)throw new F(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(e==null)throw new F("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new F(`No such layer: ${e}`)}calculateLosses(){return W(()=>{const e=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const o=is.nodeKey(n,s);this.containerNodes.has(o)&&e.push(...n.calculateLosses())}return e})}getConfig(){const e={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),c=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],f=is.nodeKey(i,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],b=d.nodeIndices[g],w=d.tensorIndices[g],y=is.nodeKey(x,b);let v=n[y];v==null&&(v=0),m.push([x.name,v,w,p])}c.push(m)}}}const u={};u.name=i.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}e.layers=s;const o=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=is.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=n[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[i];o.push([a.name,u,h])}e.inputLayers=o;const r=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=is.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=n[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[i];r.push([a.name,u,h])}return e.outputLayers=r,e}static fromConfig(e,n,s={},o=!1){const r={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function l(g,x){const b=[];let w;for(const y of x){const v=y[0],I=y[1],C=y[2];if(w=y[3]==null?{}:y[3],!(v in r)){a(g,x);return}const k=r[v];if(k.inboundNodes.length<=I){a(g,x);return}const N=k.inboundNodes[I];b.push(N.outputTensors[C])}b.length>0&&g.apply(fn(b),w)}function c(g){const x=g.name,b=Bs(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(o),r[x]=b,g.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new F(`Corrupted configuration, expected array for nodeData: ${y}`);a(b,y)})}const u=n.name,h=n.layers;for(const g of h)c(g);for(;!ZL(i);)for(const g of h){const x=r[g.name];if(x.name in i){const b=i[x.name];delete i[x.name];for(const w of b)l(x,w)}}const d=[],f=[],p=n.inputLayers;for(const g of p){const x=g[0],b=g[1],w=g[2];Rs(x in r);const v=r[x].inboundNodes[b].outputTensors;d.push(v[w])}const m=n.outputLayers;for(const g of m){const x=g[0],b=g[1],w=g[2];Rs(x in r);const v=r[x].inboundNodes[b].outputTensors;f.push(v[w])}return new e({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new F("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h3(t,e,n){const s=e.length;if(t==null||Array.isArray(t)&&t.length===0)return e.map(o=>null);if(s===1)return Array.isArray(t)&&t.length===1?t:typeof t=="object"&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}else if(typeof t=="object"&&Object.keys(t).length>0&&typeof t[Object.keys(t)[0]]=="object"){const o=[];return e.forEach(r=>{r in t?o.push(t[r]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function Qv(t,e){return h3(t,e,"classWeight")}async function eI(t,e,n,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const o=W(()=>{if(t.shape.length===1)return or(t);if(t.shape.length===2){if(t.shape[1]>1)return ua(t,1);if(t.shape[1]===1)return M(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await o.data());Me(o);const i=[];return r.forEach(a=>{if(n[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(n[a])}),sn(i,"float32")}else return null}function d3(t,e){return D(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const f3=32;function tI(t,e){let n,s;const o=e;n=o.xs,s=o.ys,$(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=Yb("input",t.inputNames,n),i=Yb("output",t.outputNames,s),a=r[0].shape[0];$(r.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),$(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<r.length;l++)$(r[l].shape[0]===a,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);for(let l=0;l<i.length;l++)$(i[l].shape[0]===a,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);return{xs:r,ys:i}}function Yb(t,e,n){if(n instanceof ht)return[n];if(Array.isArray(n))return $(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const s=[];for(const o of e){if(n[o]==null)throw new F(`The feature data generated by the dataset lacks the required ${t} key '${o}'.`);s.push(n[o])}return s}}function p3(t){if(t.length===3)throw new _e("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function m3(t,e,n){const s=n.batchesPerEpoch!=null;if($(t.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),$(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),$(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),$(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),$(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const o=n.validationData!=null;let r,i;if(o)if(Zb(n.validationData))$(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const g=p3(n.validationData);r=g.xs,i=g.ys}const a=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let c;o?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=Gv(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:f}=Hv(u,h,n.epochs,null,null,g3(e,n),null,o,c);d.setModel(t),t.history=f,await d.onTrainBegin(),t.stopTraining_=!1;let p=n.initialEpoch==null?0:n.initialEpoch,m=await e.iterator();for(;p<n.epochs;){const g={};await d.onEpochBegin(p);let x=0,b=0;for(s||(m=await e.iterator());!s||x<n.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:v}=tI(t,w.value),I={};I.batch=b,I.size=y[0].shape[0],await d.onBatchBegin(b,I);const C=[];if(n.classWeight!=null){const T=Qv(n.classWeight,t.outputNames);for(let A=0;A<T.length;++A)C.push(await eI(v[A],null,T[A]))}const k=y.concat(v).concat(C),N=a(k);Me(k);for(let T=0;T<l.length;++T){const A=l[T],L=N[T];I[A]=L,Cn(L)}await d.onBatchEnd(b,I),Uv(I),b++,x++}if(s?x>=n.batchesPerEpoch:w.done){if(o){let y;Zb(n.validationData)?y=lt(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):y=lt(t.evaluate(r,i,{batchSize:n.validationBatchSize==null?f3:n.validationBatchSize,verbose:0}));for(let v=0;v<t.metricsNames.length;++v)g[`val_${t.metricsNames[v]}`]=y[v]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(p,g),p++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function g3(t,e){let n=null;return e.batchesPerEpoch!=null?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function Zb(t){return typeof t.iterator=="function"}function x3(t){return typeof t.next=="function"}async function b3(t,e,n){n=n||{};const s=n.batches!=null,o=t.testFunction;let r=[];if(n.verbose>0)throw new _e("Verbose mode is not implemented yet.");$(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i=x3(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<n.batches;){const c=await i.next();if(r=W(()=>{if(c.value){const{xs:u,ys:h}=tI(t,c.value),d=u.concat(h),f=W(()=>o(d));if(Me(d),l===0)for(let m=0;m<f.length;++m)r.push(Re(0));const p=d[0].shape[0];for(let m=0;m<f.length;++m){const g=f[m],x=r[m];r[m]=W(()=>se(r[m],D(p,g))),l>0&&Me(x)}Me(f),a+=p,++l}return r}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=ke(r[c],a),Me(u)}return fn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _f(t){$(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function Ki(t,e,n){return t==null?[null]:Array.isArray(t)?t.map(s=>ar(s,e,n-e)):ar(t,e,n-e)}function Pg(t,e){return W(()=>t==null?null:Array.isArray(t)?t.map(n=>Pg(n,e)):Ev(t,e.dtype==="int32"?e:pe(e,"int32")))}function Of(t,e){const n=[];let s=0,o=null;for(;s<t;)o=s+e,o>=t&&(o=t),n.push([s,o]),s=o;return n}async function y3(t,e,n,s,o,r,i,a,l,c,u,h,d,f,p){o==null&&(o=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;if(l!=null&&c!=null&&(m=!0),p!=null&&(m=!0,f==null))throw new F("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=t.checkNumSamples(n,o,f,"steps_per_epoch");let x;g!=null&&(x=xs(0,g)),i==null&&(i=1);const{callbackList:b,history:w}=Hv(a,i,r,d,g,f,o,m,h);b.setModel(t),t.history=w,await b.onTrainBegin(),t.stopTraining_=!1;for(let y=d;y<r;++y){await b.onEpochBegin(y);const v={};if(f!=null)throw new _e("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new _e("batch shuffling is not implemneted yet");u&&U2(x);const I=sn(x),C=Of(g,o);for(let k=0;k<C.length;++k){const N={};if(await b.onBatchBegin(k,N),W(()=>{const T=C[k][0],A=C[k][1],L=ar(I,T,A-T);N.batch=k,N.size=A-T;const z=Pg(n,L),U=e(z);for(let V=0;V<s.length;++V){const B=s[V],j=U[V];N[B]=j,Cn(j)}if(k===C.length-1&&m){const V=t.testLoop(l,c,o);for(let B=0;B<s.length;++B){const j=s[B],P=V[B];Cn(P),v["val_"+j]=P}}}),await b.onBatchEnd(k,N),Uv(N),t.stopTraining_)break}I.dispose()}if(await b.onEpochEnd(y,v),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}async function w3(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;let o,r,i,a,l,c,u,h,d;try{const f=s.batchSize==null?32:s.batchSize;_f(f);const p=!1,m=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,p,f);o=m[0],r=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new _e("validationData including sample weights is not supported yet."):new F(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const N=!0,T=await t.standardizeUserData(l,c,null,null,N,f);u=T[0],h=T[1],x=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const N=Math.floor(o[0].shape[0]*(1-s.validationSplit)),T=o[0].shape[0];u=Ki(o,N,T),i=o,o=Ki(o,0,N),h=Ki(r,N,T),a=r,r=Ki(r,0,N),x=u.concat(h)}else s.validationSteps!=null&&(g=!0);const b=o.concat(r).concat(d);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),y=t.getDedupedMetricsNames();let v,I;g?(t.makeTestFunction(),v=t.testFunction,I=y.slice().concat(y.map(N=>"val_"+N))):(v=null,x=[],I=y.slice());const C=Gv(s.callbacks,s.yieldEvery);return await y3(t,w,b,y,f,s.epochs,s.verbose,C,v,x,s.shuffle,I,s.initialEpoch,null,null)}finally{t.isTraining=!1,cs(o,e),cs(r,n),cs(i,e),cs(a,n),cs(u,l),cs(h,c),d!=null&&Me(d)}}function nI(t){const e=[];t instanceof ht&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(s.rank===1)e.push(Al(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function cs(t,e){if(t==null)return;const n=[];if(e instanceof ht)n.push(e.id);else if(Array.isArray(e))e.forEach(o=>n.push(o.id));else if(e!=null)for(const o in e){const r=e[o];n.push(r.id)}const s=[];if(t instanceof ht)n.indexOf(t.id)===-1&&s.push(t);else if(Array.isArray(t))t.forEach(o=>{n.indexOf(o.id)===-1&&s.push(o)});else if(t!=null)for(const o in t){const r=t[o];n.indexOf(r.id)===-1&&s.push(r)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function v3(t){return t instanceof ht}function Mf(t){return Array.isArray(t)}function Jb(t){return!v3(t)&&!Mf(t)}function Qb(t,e,n,s=!0,o=""){if(e==null||e.length===0){if(t!=null){let i=!1;if(Mf(t)&&t.length>0)i=!0;else if(Jb(t)){for(const a in t)if(t.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new F(`Error when checking model ${o} expected no data, but got ${t}`)}return[]}if(t==null)return e.map(i=>null);let r;if(Jb(t)){t=t,r=[];for(const i of e){if(t[i]==null)throw new F(`No data provided for "${i}". Need data for each key in: ${e}`);r.push(t[i])}}else if(Mf(t)){if(t=t,t.length!==e.length)throw new F(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);r=t}else{if(t=t,e.length>1)throw new F(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);r=[t]}if(r=nI(r),n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const a=r[i];if(a.shape.length!==n[i].length)throw new F(`Error when checking ${o}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=n[i][l];if(u!=null&&u>=0&&c!==u)throw new F(`${o} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function I3(t,e,n){const s=mo(t.map(r=>r.shape[0]));s.sort();const o=mo(e.map(r=>r.shape[0]));if(o.sort(),s.length>1)throw new F(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(o.length>1)throw new F(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&o.length>0&&!Ye(s,o))throw new F(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function C3(t,e,n){const s=[zh,Wh,fa];for(let o=0;o<t.length;++o){const r=t[o],i=e[o],a=n[o];if(i!=null){if(i===fa&&r.shape[r.shape.length-1]===1)throw new F(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new F(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function e0(t,e,n,s=!0,o=""){let r;if(Array.isArray(t)){if(t.length!==e.length)throw new F(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);r=t}else{if(e.length>1)throw new F(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);r=[t]}if(n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const a=r[i];if(a.shape.length!==n[i].length)throw new F(`Error when checking ${o}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=n[i][l];if(u!=null&&u!==c)throw new F(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function $3(t,e){if(t==null||Array.isArray(t)&&t.length===0)return e.map(s=>[]);let n;if(typeof t=="string"||typeof t=="function")n=[t];else if(Array.isArray(t)||typeof t=="object")n=t;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);if(Array.isArray(n))return e.map(s=>n);{const s=[];for(const o of e){let r=n.hasOwnProperty(o)?n[o]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const k3="layers-model";class lr extends is{constructor(e){super(e),this.isTraining=!1}summary(e,n,s=console.log){if(!this.built)throw new F("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");i3(this,e,n,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=r3(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ao))throw new F("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new F(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(Id(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new F(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(a=>Id(a))}else{const i=Id(e.loss);this.outputs.forEach(a=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ir("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=$3(e.metrics,this.outputNames),r=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};ir("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=o[i];(c=>{const u="";let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===Wh?["accuracy","acc"].indexOf(p)!==-1?d=Kv:["crossentropy","ce"].indexOf(p)!==-1&&(d=XP):this.lossFunctions[i]===qc?["accuracy","acc"].indexOf(p)!==-1?d=YP:["crossentropy","ce"].indexOf(p)!==-1&&(d=Yv):["accuracy","acc"].indexOf(p)!==-1?d=qv:["crossentropy","ce"].indexOf(p)!==-1&&(d=Xv);let x;["accuracy","acc"].indexOf(p)!==-1?x="acc":["crossentropy","ce"].indexOf(p)!==-1&&(x="ce"),f=d,h=u+x}else f=o3(p),h=u+rc(p);let m;ir(h,()=>{m=f}),r(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,s={}){const o=s.batchSize==null?32:s.batchSize;_f(o);const r=!0,i=this.standardizeUserDataXY(e,n,r,o);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,o,s.verbose,s.steps);return fn(c)}finally{cs(i[0],e),cs(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),b3(this,e,n)}checkNumSamples(e,n,s,o="steps"){let r;if(s!=null){if(r=null,n!=null)throw new F(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new F(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return r}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new F("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),o=s?n:[n],r=this.retrieveSymbolicTensors(o),i=new lo;if(e instanceof ht&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new F(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new F(`No value is provided for the model's input ${l.name}`);i.add(l,c)}const a=ji(r,i);return s?a:a[0]}retrieveSymbolicTensors(e){const n=vr(null,e.length);let s=e.length;for(const o of this.layers){const r=Array.isArray(o.output)?o.output:[o.output],i=r.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(n[a]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw n.forEach((r,i)=>{r==null&&o.push(e[i])}),new F(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return n}predictLoop(e,n=32,s=!1){return W(()=>{const o=this.checkNumSamples(e);if(s)throw new _e("Verbose predictLoop() is not implemented yet.");const r=Of(o,n),i=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)W(()=>{const c=r[a][0],u=r[a][1],h=Ki(e,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new lo(d);return ji(this.outputs,f)}).forEach((c,u)=>i[u].push(c));return fn(i.map(a=>qt(a,0)))})}predict(e,n={}){const s=nI(e);e0(s,this.inputNames,this.feedInputShapes,!1);try{const o=n.batchSize==null?32:n.batchSize;return _f(o),this.predictLoop(s,o)}finally{cs(s,e)}}predictOnBatch(e){e0(e,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,s=!0,o){if(this.optimizer_==null)throw new Yn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===qc?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(e=Qb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=Qb(n,this.feedOutputNames,r,!1,"target"),I3(e,n),C3(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new F(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,s,o,r=!0,i){const[a,l]=this.standardizeUserDataXY(e,n,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(o!=null){const u=Qv(o,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await eI(l[h],null,u[h]))}return[a,l,c]}testLoop(e,n,s,o=0,r){return W(()=>{const i=this.checkNumSamples(n,s,r,"steps"),a=[];if(o>0)throw new _e("Verbose mode is not implemented yet.");if(r!=null)throw new _e("steps mode in testLoop() is not implemented yet");{const l=Of(i,s),c=sn(xs(0,i));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=ar(c,h,d-h),p=Pg(n,f),m=e(p);if(u===0)for(let g=0;g<m.length;++g)a.push(Re(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=se(a[g],D(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=ke(a[u],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,n=[];for(let s=0;s<e.length;++s){const o=e[s];let r=o;Pb(e,o)>1&&(r+=`_${Pb(e.slice(0,s),o)}`),n.push(r)}return n}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new lo(h),f=ji(this.outputs,d,{training:!0});let p;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(o[m],f[m]);r[m]!=null&&(x=d3(x,r[m]));const b=bt(x);n.push(b),m===0?p=x:p=se(p,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=n[m];else{const x=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=bt(x(o[b],f[b]))}Cn(g),i.push(g)}return p=bt(p),this.calculateLosses().forEach(m=>{p=se(p,m)}),p},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>W(()=>{const n=[];let s;const o=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:o[c]});const a=new lo(i),l=ji(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=bt(u(r[c],l[c]));c===0?s=h:s=se(s,h),n.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=bt(u(r[h],l[h]));n.push(d)}return n})}async fit(e,n,s={}){return w3(this,e,n,s)}async fitDataset(e,n){return m3(this,e,n)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),o=s[0],r=s[1],a=this.makeTrainFunction()(o.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return Me(a),cs(s[0],e),cs(s[1],n),fn(l)}getNamedWeights(e){const n=[],s=e!=null&&e.trainableOnly,o=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<o.length;++i)s&&!o[i].trainable||n.push({name:o[i].originalName,tensor:r[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=yf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-yf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=js(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>js(n))}else{const n=Object.keys(this.loss);e={};const s=this.loss;for(const o of n)if(typeof s[o]=="string")e[o]=js(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[js(rc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>js(rc(e)));{const e={};for(const n in this.metrics)e[n]=js(rc(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=Jc(e.optimizer_config),s=Bs(n);let o;if(typeof e.loss=="string")o=qo(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>qo(i));else if(e.loss!=null){o={};for(const i in e.loss)o[i]=qo(e.loss[i])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(i=>qo(i));else if(e.metrics!=null){r={};for(const i in e.metrics)r[i]=qo(e.metrics[i])}this.compile({loss:o,metrics:r,optimizer:s})}async save(e,n){if(typeof e=="string"){const c=zE(e);if(c.length===0)throw new F(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new F(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new F("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await wb(this.getNamedWeights(n)),o=!1,r=null,a={modelTopology:this.toJSON(r,o),format:k3,generatedBy:`TensorFlow.js tfjs-layers v${Jv}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await wb(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=G1([s.data,u])}return this.userDefinedMetadata!=null&&(Xb(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){Xb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}lr.className="Model";ee(lr);class sI extends lr{}sI.className="Functional";ee(sI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function S3(t,e){if(e==null&&(e={}),typeof t=="string"){const n=WE(t,e);if(n.length===0)n.push(mR(t,e));else if(n.length>1)throw new F(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return N3(t,void 0,e)}async function N3(t,e,n){if(n==null&&(n={}),t.load==null)throw new F("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await t.load();let o=s.modelTopology;o.model_config!=null&&(o=o.model_config);const r=n.strict==null?!0:n.strict,i=s.weightData!=null&&s.weightSpecs!=null&&r,a=Bs(Jc(o),e,i),l=s.trainingConfig;if(l!=null&&a.loadTrainingConfig(l),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new F("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=T3(s.weightData,s.weightSpecs);a.loadWeights(c,r),a.optimizer!=null&&u.length>0&&await a.optimizer.setWeights(u),Me(c),Me(u.map(h=>h.tensor))}return a}function T3(t,e){const n=EE(t,e),s={},o=[];return e.forEach(r=>{r.group==="optimizer"?o.push({name:r.name,tensor:n[r.name]}):s[r.name]=n[r.name]}),{modelWeights:s,optimizerWeights:o}}class hi extends lr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Lh("sequential_"),e.layers!=null)for(const n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new F(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof hi||e instanceof lr;let s;if(n){if(s=e,s.outputs.length!==1)throw new F("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new F("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new F("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=SP({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new F(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new F("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Pv(this.outputs[0])}this.inboundNodes=[],new Bh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(Je(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new lr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,s=console.log){this.built||this.build(),super.summary(e,n,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,s={}){if(!this.built)throw new Yn("The model needs to be compiled before being used.");return this.model.evaluate(e,n,s)}async evaluateDataset(e,n){if(!this.built)throw new Yn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,s={}){if(!this.built)throw new Yn("The model needs to be compiled before being used.");return this.model.fit(e,n,s)}async fitDataset(e,n){if(!this.built)throw new Yn("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,s={},o=!1){let r,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new F("Legacy serialization format not supported yet.");r=n}else $(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=n.layers,delete n.layers,i=n;const a=new e(i);if(!(a instanceof hi))throw new _e(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=Bs(l,void 0,o);o&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(e){if(this.model==null)throw new F("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new F("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),e.push(s)}return{name:this.name,layers:e}}}hi.className="Sequential";ee(hi);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function E3(t){return new lr(t)}function R3(t){return new hi(t)}function D3(t,e){return e==null&&(e={}),S3(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bn extends Ci{getConfig(){return{}}}class oI extends bn{apply(e,n=1){return dP(e,n)}}oI.className="elu";ee(oI);class rI extends bn{apply(e){return Ow(e)}}rI.className="selu";ee(rI);class iI extends bn{apply(e){return to(e)}}iI.className="relu";ee(iI);class aI extends bn{apply(e){return W(()=>Rh(6,to(e)))}}aI.className="relu6";ee(aI);class lI extends bn{apply(e){return e}}lI.className="linear";ee(lI);class cI extends bn{apply(e){return $i(e)}}cI.className="sigmoid";ee(cI);class uI extends bn{apply(e){return pP(e)}}uI.className="hardSigmoid";ee(uI);class hI extends bn{apply(e){return $l(e)}}hI.className="softplus";ee(hI);class dI extends bn{apply(e){return fP(e)}}dI.className="softsign";ee(dI);class fI extends bn{apply(e){return km(e)}}fI.className="tanh";ee(fI);class Bg extends bn{apply(e,n=-1){return Vm(e,n)}}Bg.className="softmax";ee(Bg);class pI extends bn{apply(e,n=-1){return vw(e,n)}}pI.className="logSoftmax";ee(pI);class mI extends bn{apply(e,n=1){return W(()=>D($i(D(e,n)),e))}}mI.className="swish";ee(mI);class gI extends bn{apply(e){return W(()=>D(e,km($l(e))))}}gI.className="mish";ee(gI);function vo(t){return t.getClassName()}function Cd(t,e={}){return Rl(t,Hn.getMap().classNameMap,e,"activation")}function Io(t){if(t==null){const e={};return e.className="linear",e.config={},Cd(e)}if(typeof t=="string"){const e={};return e.className=t,e.config={},Cd(e)}else return t instanceof bn?t:Cd(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function A3(t){if(t!=null&&typeof t!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}class xI extends Ci{}class bI extends xI{constructor(e){super(),A3(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let n=At([1]);return this.hasL1&&(n=se(n,ve(D(this.l1,Rt(e))))),this.hasL2&&(n=se(n,ve(D(this.l2,Fl(e))))),M(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}bI.className="L1L2";ee(bI);const t0={l1l2:"L1L2"};function tt(t){return $g(t)}function n0(t,e={}){return Rl(t,Hn.getMap().classNameMap,e,"regularizer")}function ft(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in t0?t0[t]:t,config:{}};return n0(n)}else return t instanceof xI?t:n0(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yI extends Ge{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Oe(e);let s=to(e);return this.maxValue!=null&&(s=Pn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}yI.className="ReLU";ee(yI);class wI extends Ge{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Oe(e);return Am(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}wI.className="LeakyReLU";ee(wI);class vI extends Ge{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=dt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ft(e.alphaRegularizer),this.alphaConstraint=Tt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new F(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Je(e);const n=e.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)n[o-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)s[o]=e[o];this.inputSpec=[new St({ndim:e.length,axes:s})],this.built=!0}call(e,n){return e=Oe(e),Bm(e,this.alpha.read())}getConfig(){const e={alphaInitializer:pt(this.alphaInitializer),alphaRegularizer:tt(this.alphaRegularizer),alphaConstraint:Nt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}vI.className="PReLU";ee(vI);class II extends Ge{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new _e(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Oe(e);return Nh(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}II.className="ELU";ee(II);class CI extends Ge{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){const s=Oe(e);return D(s,pe(ss(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}CI.className="ThresholdedReLU";ee(CI);class $I extends Ge{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Bg().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){const s=Oe(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}$I.className="Softmax";ee($I);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qr(t,e,n){if(typeof t=="number")return vr(t,e);if(t.length!==e)throw new F(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const o=t[s];if(!lP(o))throw new F(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${o}`)}return t}function gs(t,e,n,s,o=1){if(t==null)return t;const r=e+(e-1)*(o-1);let i;return n==="same"?i=t:i=t-r+1,Math.floor((i+s-1)/s)}function Ds(t,e,n,s){if(t==null)return null;if(s==="valid")t=t*e+wo([n-e,0]);else if(s==="same")t=t*e;else throw new F(`Unsupport padding mode: ${s}.`);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zg(t,e){return W(()=>(It(e),e==="channelsFirst"?Ue(t,[0,2,3,1]):t))}function kI(t,e){return W(()=>(It(e),e==="channelsFirst"?Ue(t,[0,2,3,4,1]):t))}function F3(t,e,n,s=1,o="valid",r,i=1){return W(()=>{if(r==null&&(r=bs()),It(r),t.shape.length!==3)throw new F(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(e.shape.length!==3)throw new F(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new F(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(t=Ue(t,[0,2,1])),o==="causal")throw new _e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=dw(t,e,s,o==="same"?"same":"valid","NWC",i);return n!=null&&(a=vs(a,n)),a})}function s0(t,e,n,s=[1,1],o="valid",r,i,a=null){return W(()=>{if(r==null&&(r=bs()),It(r),t.rank!==3&&t.rank!==4)throw new F(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(e.rank!==3&&e.rank!==4)throw new F(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=zg(t,r);if(o==="causal")throw new _e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=k_({x:l,filter:e,strides:s,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:a}),r==="channelsFirst"&&(l=Ue(l,[0,3,1,2])),l})}function _3(t,e,n,s=[1,1,1],o="valid",r,i){return W(()=>{if(r==null&&(r=bs()),It(r),t.rank!==4&&t.rank!==5)throw new F(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(e.rank!==4&&e.rank!==5)throw new F(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let a=kI(t,r);if(o==="causal")throw new _e("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=VD(a,e,s,o==="same"?"same":"valid","NDHWC",i),n!=null&&(a=vs(a,n)),r==="channelsFirst"&&(a=Ue(a,[0,4,1,2,3])),a})}class Vh extends Ge{constructor(e,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Vh.verifyArgs(n),this.rank=e,_t(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new _e(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qr(n.kernelSize,e,"kernelSize"),this.strides=Qr(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,Bn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,It(this.dataFormat),this.activation=Io(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=dt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tt(n.biasConstraint),this.biasRegularizer=ft(n.biasRegularizer),this.activityRegularizer=ft(n.activityRegularizer),this.dilationRate=Qr(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new F(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new F(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new F(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Rs("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!kg(e.kernelSize,"number",1,3))throw new F(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vo(this.activation),useBias:this.useBias,biasInitializer:pt(this.biasInitializer),biasRegularizer:tt(this.biasRegularizer),activityRegularizer:tt(this.activityRegularizer),biasConstraint:Nt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}class Ti extends Vh{constructor(e,n){super(e,n),this.kernel=null,Ti.verifyArgs(n),this.filters=n.filters,_t(this.filters,"filters"),this.kernelInitializer=dt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tt(n.kernelConstraint),this.kernelRegularizer=ft(n.kernelRegularizer)}build(e){e=Je(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new F(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(e,n){return W(()=>{e=Oe(e);let s;const o=this.bias==null?null:this.bias.read(),r=Cv(this.activation.getClassName());if(r!=null&&this.rank===2)s=s0(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=F3(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=s0(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=_3(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new _e("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Je(e);const n=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const i=gs(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);n.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(n),o.push(this.filters)):(o.push(this.filters),o=o.concat(n)),o}getConfig(){const e={filters:this.filters,kernelInitializer:pt(this.kernelInitializer),kernelRegularizer:tt(this.kernelRegularizer),kernelConstraint:Nt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new F(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ll extends Ti{constructor(e){super(2,e),Ll.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!kg(e.kernelSize,"number",1,2))throw new F(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ll.className="Conv2D";ee(Ll);class Pl extends Ti{constructor(e){super(3,e),Pl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new F(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Pl.className="Conv3D";ee(Pl);class SI extends Ll{constructor(e){if(super(e),this.inputSpec=[new St({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new F(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Je(e),e.length!==4)throw new F("Input should have rank 4; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new F("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new St({ndim:4,axes:{[n]:s}})],this.built=!0}call(e,n){return W(()=>{let s=Oe(e);if(s.shape.length!==4)throw new F(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=o[i],c=o[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=Ds(l,d,u,this.padding),m=Ds(c,f,h,this.padding),g=[r,p,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,1]));let x=fw(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ue(x,[0,3,1,2])),this.bias!=null&&(x=vs(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=Je(e);const n=e.slice();let s,o,r;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3):(s=3,o=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return n[s]=this.filters,n[o]=Ds(n[o],l,i,this.padding),n[r]=Ds(n[r],c,a,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}SI.className="Conv2DTranspose";ee(SI);class NI extends Pl{constructor(e){if(super(e),this.inputSpec=[new St({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new F(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Je(e),e.length!==5)throw new F("Input should have rank 5; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new F("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new St({ndim:5,axes:{[n]:s}})],this.built=!0}call(e,n){return W(()=>{let s=Oe(e);if(s.shape.length!==5)throw new F(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const c=o[l],u=o[i],h=o[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],b=Ds(c,m,d,this.padding),w=Ds(u,g,f,this.padding),y=Ds(h,x,p,this.padding),v=[r,b,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,4,1]));let I=HD(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=Ue(I,[0,4,1,2,3])),this.bias!==null&&(I=vs(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=Je(e);const n=e.slice();let s,o,r,i;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3,i=4):(s=4,o=1,r=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[o]=Ds(n[o],u,a,this.padding),n[r]=Ds(n[r],h,l,this.padding),n[i]=Ds(n[i],d,c,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}NI.className="Conv3DTranspose";ee(NI);class TI extends Ti{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new F("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new F("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new F(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=dt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ft(n.depthwiseRegularizer),this.depthwiseConstraint=Tt(n.depthwiseConstraint),this.pointwiseInitializer=dt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ft(n.pointwiseRegularizer),this.pointwiseConstraint=Tt(n.pointwiseConstraint)}build(e){if(e=Je(e),e.length<this.rank+2)throw new F(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new F(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);const s=e[n],o=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new St({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(e,n){return W(()=>{e=Oe(e);let s;if(this.rank===1)throw new _e("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),s=Mw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=vs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ue(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=pt(this.depthwiseInitializer),e.pointwiseInitializer=pt(this.pointwiseInitializer),e.depthwiseRegularizer=tt(this.depthwiseRegularizer),e.pointwiseRegularizer=tt(this.pointwiseRegularizer),e.depthwiseConstraint=Nt(this.depthwiseConstraint),e.pointwiseConstraint=Nt(this.pointwiseConstraint),e}}TI.className="SeparableConv";class EI extends TI{constructor(e){super(2,e)}}EI.className="SeparableConv2D";ee(EI);class Uh extends Ti{constructor(e){super(1,e),Uh.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!kg(e.kernelSize,"number",1,1))throw new F(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Uh.className="Conv1D";ee(Uh);class RI extends Ge{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return W(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){const s=oc(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return oc(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=oc(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return oc(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}RI.className="Cropping2D";ee(RI);class DI extends Ge{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,It(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,rP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const n=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,s]}else{const n=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],n,s,e[3]]}}call(e,n){return W(()=>{let s=Oe(e);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=Ue(s,[0,2,3,1]);const r=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?Hi.resizeNearestNeighbor(s,[r,i]):Hi.resizeBilinear(s,[r,i]);return Ue(a,[0,3,1,2])}else{const r=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?Hi.resizeNearestNeighbor(s,[r,i]):Hi.resizeBilinear(s,[r,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}DI.className="UpSampling2D";ee(DI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function O3(t,e,n=[1,1],s="valid",o,r){return W(()=>{o==null&&(o=bs()),It(o);let i=zg(t,o);if(t.rank!==4)throw new F(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(e.rank!==4)throw new F(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Em(i,e,n,s==="same"?"same":"valid","NHWC",r),o==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}class AI extends Vh{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=dt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tt(e.depthwiseConstraint),this.depthwiseRegularizer=ft(e.depthwiseRegularizer)}build(e){if(e=Je(e),e.length<4)throw new F(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new F(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);const s=e[n],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return W(()=>{e=Oe(e);let s=O3(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=vs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Je(e);const n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=gs(n,this.kernelSize[0],this.padding,this.strides[0]),i=gs(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,r,i]:[e[0],r,i,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=pt(this.depthwiseInitializer),e.depthwiseRegularizer=tt(this.depthwiseRegularizer),e.depthwiseConstraint=Nt(this.depthwiseRegularizer),e}}AI.className="DepthwiseConv2D";ee(AI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function FI(t,e,n,s){if(Array.isArray(t)){if(e!=null||n!=null)throw new F("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function o(r){return r==null||Array.isArray(r)?r:[r]}return e=o(e),n=o(n),{inputs:t,initialState:e,constants:n}}function _I(t,e,n,s=!1,o,r,i=!1,a=!1){return W(()=>{const l=e.shape.length;if(l<3)throw new F(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(xs(2,l));if(e=Ue(e,c),r!=null)throw new _e("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=pe(pe(o,"bool"),"float32"),o.rank===l-1&&(o=Fn(o,-1)),o=Ue(o,c)),s&&(e=br(e,0),o!=null&&(o=br(o,0)));const u=[];let h,d=n;const f=e.shape[0],p=ci(e);let m;o!=null&&(m=ci(o));for(let x=0;x<f;++x){const b=p[x],w=W(()=>t(b,d));if(o==null)h=w[0],d=w[1];else{const y=W(()=>{const v=m[x],I=Ie(es(v),v),C=se(D(w[0],v),D(d[0],I)),k=d.map((N,T)=>se(D(w[1][T],v),D(N,I)));return{output:C,newStates:k}});h=y.output,d=y.newStates}a&&u.push(h)}let g;return a&&(g=yr(u,1)),[h,g,d]})}class Fo extends Ge{constructor(e){super(e);let n;if(e.cell==null)throw new F("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new Ug({cells:e.cell}):n=e.cell,n.stateSize==null)throw new F("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new St({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return xs(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Rf(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let o;if(this.returnSequences?o=[e[0],e[1],s]:o=[e[0],s],this.returnState){const r=[];for(const i of n)r.push([e[0],i]);return[o].concat(r)}else return o}computeMask(e,n){return W(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const o=this.states.map(r=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<e;++s)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new _e("Constants support is not implemented in RNN yet.");Rf(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new St({shape:[n,null,...s]});const o=[e[0]].concat(e.slice(2));this.cell.build(o);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ye(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new F(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new St({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){W(()=>{if(!this.stateful)throw new Es("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new F("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>At([s,o])):this.states_=[At([s,this.cell.stateSize])];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>At([s,o])):this.states_[0]=At([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new F(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let o=0;o<this.states_.length;++o){const r=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[s,i];if(!Ye(r.shape,a))throw new F(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[o]=r}}this.states_=this.states_.map(o=>Cn(o.clone()))})}apply(e,n){let s=n==null?null:n.initialState,o=n==null?null:n.constants;n==null&&(n={});const r=FI(e,s,o,this.numConstants);e=r.inputs,s=r.initialState,o=r.constants;let i=[],a=[];if(s!=null){n.initialState=s,i=i.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new St({shape:c.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(n.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof _s){const c=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return W(()=>{const s=n==null?null:n.mask,o=n==null?null:n.training;let r=n==null?null:n.initialState;e=Oe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new F(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:o},c=_I((p,m)=>{const g=this.cell.call([p].concat(m),a);return[g[0],g.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,o);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(e){return W(()=>{let n=At(e.shape);return n=ve(n,[1,2]),n=Al(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Tf(n,[1,s]):n):this.cell.stateSize>1?[Tf(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Fo.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,e,n)}static fromConfig(e,n,s={}){const o=n.cell,r=Bs(o,s);return new e(Object.assign(n,{cell:r}))}}Fo.className="RNN";ee(Fo);class Gh extends Ge{}class Wg extends Gh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_t(this.units,"units"),this.activation=Io(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Tt(e.kernelConstraint),this.recurrentConstraint=Tt(e.recurrentConstraint),this.biasConstraint=Tt(e.biasConstraint),this.dropout=ui([1,wo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ui([1,wo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Je(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return W(()=>{if(e=e,e.length!==2)throw new F(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const o=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Co({ones:()=>es(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Co({ones:()=>es(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?r=Ps(D(e,i),this.kernel.read()):r=Ps(e,this.kernel.read()),this.bias!=null&&(r=vs(r,this.bias.read())),a!=null&&(s=D(s,a));let l=se(r,Ps(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:vo(this.activation),useBias:this.useBias,kernelInitializer:pt(this.kernelInitializer),recurrentInitializer:pt(this.recurrentInitializer),biasInitializer:pt(this.biasInitializer),kernelRegularizer:tt(this.kernelRegularizer),recurrentRegularizer:tt(this.recurrentRegularizer),biasRegularizer:tt(this.biasRegularizer),activityRegularizer:tt(this.activityRegularizer),kernelConstraint:Nt(this.kernelConstraint),recurrentConstraint:Nt(this.recurrentConstraint),biasConstraint:Nt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,n)}}Wg.className="SimpleRNNCell";ee(Wg);class OI extends Fo{constructor(e){e.cell=new Wg(e),super(e)}call(e,n){return W(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,o=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,n){return new e(n)}}OI.className="SimpleRNN";ee(OI);class Vg extends Gh{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new F("GRUCell does not support reset_after parameter set to true.");this.units=e.units,_t(this.units,"units"),this.activation=Io(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Io(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Tt(e.kernelConstraint),this.recurrentConstraint=Tt(e.recurrentConstraint),this.biasConstraint=Tt(e.biasConstraint),this.dropout=ui([1,wo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ui([1,wo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Je(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return W(()=>{if(e=e,e.length!==2)throw new F(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training==null?!1:n.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Co({ones:()=>es(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Co({ones:()=>es(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(e=D(e,r[0]));let u=Ps(e,this.kernel.read());this.useBias&&(u=vs(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=D(o,i[0]));const h=this.recurrentKernel.read(),[d,f]=Mn(h,[2*this.units,this.units],h.rank-1),p=Ps(o,d),[m,g,x]=Mn(u,3,u.rank-1),[b,w]=Mn(p,2,p.rank-1);a=this.recurrentActivation.apply(se(m,b)),l=this.recurrentActivation.apply(se(g,w));const y=Ps(D(l,o),f);c=this.activation.apply(se(x,y));const v=se(D(a,o),D(se(1,mt(a)),c));return[v,v]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:vo(this.activation),recurrentActivation:vo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:pt(this.kernelInitializer),recurrentInitializer:pt(this.recurrentInitializer),biasInitializer:pt(this.biasInitializer),kernelRegularizer:tt(this.kernelRegularizer),recurrentRegularizer:tt(this.recurrentRegularizer),biasRegularizer:tt(this.biasRegularizer),activityRegularizer:tt(this.activityRegularizer),kernelConstraint:Nt(this.kernelConstraint),recurrentConstraint:Nt(this.recurrentConstraint),biasConstraint:Nt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,n)}}Vg.className="GRUCell";ee(Vg);class MI extends Fo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Vg(e),super(e)}call(e,n){return W(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,o=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}MI.className="GRU";ee(MI);class Hh extends Gh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_t(this.units,"units"),this.activation=Io(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Io(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Tt(e.kernelConstraint),this.recurrentConstraint=Tt(e.recurrentConstraint),this.biasConstraint=Tt(e.biasConstraint),this.dropout=ui([1,wo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ui([1,wo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=Je(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;o=new(n=class extends os{apply(l,c){const u=r.apply([i]),h=new Ng().apply([i]),d=r.apply([i*2]);return zb(zb(u,h),d)}},n.className="CustomInit",n)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return W(()=>{const s=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new F(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Co({ones:()=>es(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Co({ones:()=>es(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(e=D(e,i[0]));let d=Ps(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=D(o,a[0])),d=se(d,Ps(o,this.recurrentKernel.read())),this.useBias&&(d=vs(d,this.bias.read()));const[f,p,m,g]=Mn(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=se(D(c,r),D(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=D(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:vo(this.activation),recurrentActivation:vo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:pt(this.kernelInitializer),recurrentInitializer:pt(this.recurrentInitializer),biasInitializer:pt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:tt(this.kernelRegularizer),recurrentRegularizer:tt(this.recurrentRegularizer),biasRegularizer:tt(this.biasRegularizer),activityRegularizer:tt(this.activityRegularizer),kernelConstraint:Nt(this.kernelConstraint),recurrentConstraint:Nt(this.recurrentConstraint),biasConstraint:Nt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,n)}}Hh.className="LSTMCell";ee(Hh);class LI extends Fo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hh(e),super(e)}call(e,n){return W(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,o=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}LI.className="LSTM";ee(LI);class Ug extends Gh{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return W(()=>{e=e;let s=e.slice(1);const o=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(s.splice(0,a.stateSize.length)):o.push(s.splice(0,1));o.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=o[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,n),r.push(i.slice(1))}s=[];for(const a of r.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){Rf(e)&&(e=e[0]),e=e;let n;this.cells.forEach((s,o)=>{ir(`RNNCell_${o}`,()=>{s.build(e),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){const e=super.getConfig(),n=r=>({className:r.getClassName(),config:r.getConfig()}),o={cells:this.cells.map(n)};return Object.assign({},e,o)}static fromConfig(e,n,s={}){const o=[];for(const r of n.cells)o.push(Bs(r,s));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(e)}return e}getWeights(){const e=[];for(const n of this.cells)e.push(...n.weights);return Df(e)}setWeights(e){const n=[];for(const s of this.cells){const o=s.weights.length,r=e.splice(o);for(let i=0;i<s.weights.length;++i)n.push([s.weights[i],r[i]])}_g(n)}}Ug.className="StackedRNNCells";ee(Ug);function Co(t){const{ones:e,rate:n,training:s=!1,count:o=1,dropoutFunc:r}=t,i=()=>r!=null?r(e(),n):Rv(e(),n),a=()=>_l(i,e,s);return!o||o<=1?Cn(a().clone()):Array(o).fill(void 0).map(a).map(c=>Cn(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var M3=globalThis&&globalThis.__rest||function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(t);o<s.length;o++)e.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(t,s[o])&&(n[s[o]]=t[s[o]]);return n};class PI extends Fo{constructor(e){if(e.unroll)throw new _e("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new _e("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new St({ndim:5})]}call(e,n){return W(()=>{if(this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new F("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,o=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return W(()=>{const{stateSize:n}=this.cell,s=e.shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)],i=At(r);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){W(()=>{if(!this.stateful)throw new Es("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)];if(s[0]==null)throw new F("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>At(r)):this.states_=[At(r)];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>At(r)):this.states_[0]=At(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new F(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],c=r;if(!Ye(l.shape,c))throw new F(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Cn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:n,filters:s,kernelSize:o,padding:r,strides:i,dilationRate:a}=this.cell,l=n==="channelsFirst",c=e[l?3:2],u=e[l?4:3],h=gs(c,o[0],r,i[0],a[0]),d=gs(u,o[1],r,i[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}PI.className="ConvRNN2D";class Gg extends Hh{constructor(e){const{filters:n,kernelSize:s,strides:o,padding:r,dataFormat:i,dilationRate:a}=e;super(Object.assign({},e,{units:n})),this.filters=n,_t(this.filters,"filters"),this.kernelSize=Qr(s,2,"kernelSize"),this.kernelSize.forEach(l=>_t(l,"kernelSize")),this.strides=Qr(o||1,2,"strides"),this.strides.forEach(l=>_t(l,"strides")),this.padding=r||"valid",Bn(this.padding),this.dataFormat=i||"channelsLast",It(this.dataFormat),this.dilationRate=Qr(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>_t(l,"dilationRate"))}build(e){var n;e=Je(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new F(`The channel dimension of the input should be defined. Found ${e[s]}`);const o=e[s],r=4,i=this.kernelSize.concat([o,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(n=class extends os{apply(d,f){const p=c.apply([u]),m=Ro([u]),g=c.apply([u*2]);return Sg([p,m,g])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return W(()=>{if(e.length!==3)throw new F(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,o=e[0],r=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Co({ones:()=>es(o),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(te,J,oe)=>!J||!J[oe]?te:D(J[oe],te);let u=c(o,l,0),h=c(o,l,1),d=c(o,l,2),f=c(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Co({ones:()=>es(r),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let m=c(r,p,0),g=c(r,p,1),x=c(r,p,2),b=c(r,p,3);const w=3,[y,v,I,C]=Mn(this.kernel.read(),a,w),[k,N,T,A]=this.useBias?Mn(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,k,this.padding),h=this.inputConv(h,v,N,this.padding),d=this.inputConv(d,I,T,this.padding),f=this.inputConv(f,C,A,this.padding);const[L,z,U,V]=Mn(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,L),g=this.recurrentConv(g,z),x=this.recurrentConv(x,U),b=this.recurrentConv(b,V);const B=this.recurrentActivation.apply(se(u,m)),j=this.recurrentActivation.apply(se(h,g)),P=se(D(j,i),D(B,this.activation.apply(se(d,x)))),Y=D(this.recurrentActivation.apply(se(f,b)),this.activation.apply(P));return[Y,Y,P]})}getConfig(){const e=super.getConfig(),n=M3(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,n,s,o){const r=gr(e,n,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?vs(r,s,this.dataFormat):r}recurrentConv(e,n){return gr(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Gg.className="ConvLSTM2DCell";ee(Gg);class BI extends PI{constructor(e){const n=new Gg(e);super(Object.assign({},e,{cell:n}))}static fromConfig(e,n){return new e(n)}}BI.className="ConvLSTM2D";ee(BI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hg extends Ge{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const n=e.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?n[o]:this.noiseShape[o]);return s}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e);if(0<this.rate&&this.rate<1){const o=n.training==null?!1:n.training,r=this.getNoiseShape(s);return _l(()=>Rv(s,this.rate,r,this.seed),()=>s,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}Hg.className="Dropout";ee(Hg);class zI extends Hg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const n=e.shape;return[n[0],1,n[2]]}}zI.className="SpatialDropout1D";ee(zI);class jg extends Ge{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,_t(this.units,"units"),this.activation=Io(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tt(e.kernelConstraint),this.biasConstraint=Tt(e.biasConstraint),this.kernelRegularizer=ft(e.kernelRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.activityRegularizer=ft(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Je(e);const n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=Je(e);const n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e),o=Cv(this.activation.getClassName());let r;return o!=null?r=Ps(s,this.kernel.read(),o,this.bias?this.bias.read():null):(r=Ps(s,this.kernel.read()),this.bias!=null&&(r=vs(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:vo(this.activation),useBias:this.useBias,kernelInitializer:pt(this.kernelInitializer),biasInitializer:pt(this.biasInitializer),kernelRegularizer:tt(this.kernelRegularizer),biasRegularizer:tt(this.biasRegularizer),activityRegularizer:tt(this.activityRegularizer),kernelConstraint:Nt(this.kernelConstraint),biasConstraint:Nt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}jg.className="Dense";ee(jg);class Kg extends Ge{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Je(e);for(const n of e.slice(1))if(n==null)throw new F(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],go(e,1)]}call(e,n){return W(()=>{this.invokeCallHook(e,n);let s=Oe(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let r=2;r<s.rank;++r)o.push(r);o.push(1),s=Ue(s,o)}return hP(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(e,n),e}}Kg.className="Flatten";ee(Kg);class WI extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.activation=Io(e.activation)}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e);return this.activation.apply(s)})}getConfig(){const e={activation:vo(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}WI.className="Activation";ee(WI);class VI extends Ge{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return W(()=>(e=Oe(e),cP(e,this.n)))}getConfig(){const e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}VI.className="RepeatVector";ee(VI);class UI extends Ge{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){const s="Total size of new array must be unchanged.",o=n.slice();let r=1,i=null;for(let l=0;l<o.length;++l){const c=o[l];if(this.isUnknown(c))if(i===null)i=l;else throw new F("Can only specifiy one unknown dimension.");else r*=c}const a=go(e);if(i!==null){if(r===0||a%r!==0)throw new F(s);o[i]=a/r}else if(a!==r)throw new F(s);return o}computeOutputShape(e){let n=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e),o=s.shape,r=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return M(s,r)})}getConfig(){const e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}UI.className="Reshape";ee(UI);class GI extends Ge{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const n=xs(1,e.dims.length+1);if(!Ye(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new St({ndim:this.dims.length+1})]}computeOutputShape(e){e=Je(e);const n=e.slice();return this.dims.forEach((s,o)=>{n[o+1]=e[s]}),n}call(e,n){return Ue(Oe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}GI.className="Permute";ee(GI);class HI extends Ge{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){const s=Oe(e),o=-1;return vf(ha(s,this.maskValue),o)}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e),o=-1,r=!0,i=vf(ha(s,this.maskValue),o,r);return D(s,pe(i,s.dtype))})}}HI.className="Masking";ee(HI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jI extends Ge{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(lt(e.inputLength))}this.inputDim=e.inputDim,_t(this.inputDim,"inputDim"),this.outputDim=e.outputDim,_t(this.outputDim,"outputDim"),this.embeddingsInitializer=dt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ft(e.embeddingsRegularizer),this.activityRegularizer=ft(e.activityRegularizer),this.embeddingsConstraint=Tt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return W(()=>this.maskZero?(e=Oe(e),ha(e,Ke(e))):null)}computeOutputShape(e){if(e=Je(e),this.inputLength==null)return[...e,this.outputDim];const n=lt(this.inputLength);if(n.length!==e.length-1)throw new F(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let o=0;o<n.length;++o){const r=n[o],i=e[o+1];if(r!=null&&i!=null&&r!==i)throw new F(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(n[s]=i),s++}}return[e[0],...n,this.outputDim]}call(e,n){return W(()=>{this.invokeCallHook(e,n);let s=Oe(e);s.dtype!=="int32"&&(s=Dl(s,"int32"));const o=Ev(this.embeddings.read(),M(s,[s.size]));return M(o,Je(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:pt(this.embeddingsInitializer),embeddingsRegularizer:tt(this.embeddingsRegularizer),activityRegularizer:tt(this.activityRegularizer),embeddingsConstraint:Nt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}jI.className="Embedding";ee(jI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rr extends Ge{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _e}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;const s=e.slice(0,e.length-n.length);for(let o=0;o<n.length;++o){const r=e[e.length-n.length+o],i=n[o];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new F("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Je(e)]),e=e,e.length<2)throw new F(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(const r of e)r!=null&&r[0]!==null&&n.push(r[0]);if(n=mo(n),n.length>1)throw new F(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const o=e.map(r=>r.length);e.indexOf(null)===-1&&mo(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return W(()=>{if(e=e,this.reshapeRequired){const s=[],o=e.map(r=>r.rank);if(o.indexOf(null)===-1){const r=wo(o);for(let i of e){const a=i.rank;for(let l=0;l<r-a;++l)i=Al(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=M(l,[h].concat(go(u.slice(1))));f=Ue(f,[1,0]),f=M(f,d),s.push(f),r=!0}else if(c>1){const u=xs(1,c).concat([0]);s.push(Ue(l,u)),r=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(r){if(a==null){const l=i.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));i=M(Ue(M(i,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(xs(0,a-1));i=Ue(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let o=1;o<e.length;++o){const r=e[o]==null?null:e[o].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let s=[];for(const o of e)o!=null&&o[0]!==null&&s.push(o[0]);return s=mo(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(e,n){return W(()=>{if(n==null)return null;if(!Array.isArray(n))throw new F("`mask` should be an Array");if(!Array.isArray(e))throw new F("`inputs` should be an Array");if(n.length!==e.length)throw new F(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(o=>o==null))return null;n=n.map(o=>o==null?o:Fn(o,0));let s=n[0];for(let o=1;o<n.length-1;++o)s=Ys(s,n[o]);return s})}}class KI extends Rr{constructor(e){super(e)}mergeFunction(e){return W(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=se(n,e[s]);return n})}}KI.className="Add";ee(KI);class qI extends Rr{constructor(e){super(e)}mergeFunction(e){return W(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=D(n,e[s]);return n})}}qI.className="Multiply";ee(qI);class XI extends Rr{constructor(e){super(e)}mergeFunction(e){return W(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=se(n,e[s]);return D(1/e.length,n)})}}XI.className="Average";ee(XI);class YI extends Rr{constructor(e){super(e)}mergeFunction(e){return W(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Eo(n,e[s]);return n})}}YI.className="Maximum";ee(YI);class ZI extends Rr{constructor(e){super(e)}mergeFunction(e){return W(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Rh(n,e[s]);return n})}}ZI.className="Minimum";ee(ZI);class JI extends Rr{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new F("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(const o of e)if(o!=null){n=!1;break}if(n)return;const s=[];for(let o=0;o<e.length;++o){const r=e[o].slice();r.splice(this.axis,1);let i=!1;for(const a of s)if(Ye(a,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new F("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>Sg(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new F("A `Concatenate` layer should be called on a list of inputs.");const n=e,s=n[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const r of n.slice(1)){if(s[o]==null||r[o]==null){s[o]=null;break}s[o]+=r[o]}return s}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new F("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new F("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new F(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return W(()=>{let s=!0;if(n.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const o=[];for(let i=0;i<e.length;++i)n[i]==null?o.push(pe(es(e[i]),"bool")):n[i].rank<e[i].rank?o.push(Fn(n[i],-1)):o.push(n[i]);const r=qt(o,this.axis);return hw(r,-1,!1)})}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}JI.className="Concatenate";ee(JI);function Wi(t,e){for(;t<0;)t+=e;return t}function L3(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new _e("batchDot is not implemented for tensors of 4D or higher rank yet");if($(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),$(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof n=="number"&&(n=[n,n]),t.dtype==="complex64"||e.dtype==="complex64")throw new _e("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,o=e.shape.length;n==null&&(n=[s-1,o-2]);const r=n;return W(()=>{let i;if(s>o){i=s-o;const l=[];for(let c=0;c<i;++c)l.push(1);e=M(e,e.shape.concat(l))}else if(o>s){i=o-s;const l=[];for(let c=0;c<i;++c)l.push(1);t=M(t,t.shape.concat(l))}else i=0;let a;if(t.shape.length===2&&e.shape.length===2)r[0]===r[1]?a=ve(D(t,e),r[0]):a=ve(D(Ue(t,[1,0]),e),r[1]);else{const l=r[0]!==t.shape.length-1,c=r[1]===e.shape.length-1;a=Xe(t,e,l,c)}if(i>0){let l;s>o?l=s+o-3:l=s-1;const c=[];for(let u=l;u<l+i;++u)c.push(u);a=kl(a,c)}return a.shape.length===1&&(a=Fn(a,1)),a})}class QI extends Rr{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new _e("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(n,s);if(n[o[0]]!==s[o[1]])throw new F(`Dimension incompatibility: ${n[o[0]]} !== ${s[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new F(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],s=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((r,i)=>Wi(r,e[i].shape.length)):o=[Wi(this.axes,n.shape.length),Wi(this.axes,s.shape.length)],this.normalize&&(n=Kc(n,o[0]),s=Kc(s,o[1])),L3(n,s,o)}interpretAxes(e,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[Wi(this.axes,e.length),Wi(this.axes,n.length)],s}computeOutputShape(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new _e("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(n,s);n.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const r=n.concat(s);return r.length===1&&r.push(1),r}computeMask(e,n){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}QI.className="Dot";ee(QI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class eC extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e);return _l(()=>se(Ph(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}eC.className="GaussianNoise";ee(eC);class tC extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return W(()=>{this.invokeCallHook(e,n);const s=Oe(e);return this.rate>0&&this.rate<1?_l(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return D(s,Ph(s.shape,1,r))},()=>s,n.training||!1):s})}}tC.className="GaussianDropout";ee(tC);class nC extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return W(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return _l(()=>{const r=Oe(e),i=1.6732632423543772,a=1.0507009873554805,l=-i*a;let c=ki(Ah(s),this.rate);c=Dl(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=se(D(r,c),D(se(c,-1),l));return se(D(d,u),h)},()=>Oe(e),n.training||!1)}return e})}}nC.className="AlphaDropout";ee(nC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pa(t,e,n,s,o,r=.001){let i;if(t.rank===2)i=bD(t,e,n,s,o,r);else if(t.rank===3)i=wD(t,e,n,s,o,r);else if(t.rank===4)i=ID(t,e,n,s,o,r);else throw new _e(`batchNormalization is not implemented for array of rank ${t.rank} yet`);return i}function P3(t,e,n,s,o=.001){return W(()=>{const r=Mm(t,s),i=r.mean,a=r.variance;return[pa(t,i,a,n,e,o),i,a]})}function B3(t,e,n,s,o=.001){return W(()=>{const r=Mm(t,s),i=r.mean,a=r.variance,l=[];for(const p of xs(0,t.rank))s.indexOf(p)!==-1?l.push(1):l.push(t.shape[p]);const c=M(i,l),u=M(a,l),h=e==null?null:M(e,l),d=n==null?null:M(n,l);return[pa(t,c,u,d,h,o),i,a]})}function z3(t,e,n,s,o=.001){return Ye(s.slice().sort(),xs(0,t.rank-1))?P3(t,e,n,s,o):B3(t,e,n,s,o)}class sC extends Ge{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=dt(e.betaInitializer||"zeros"),this.gammaInitializer=dt(e.gammaInitializer||"ones"),this.movingMeanInitializer=dt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=dt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Tt(e.betaConstraint),this.gammaConstraint=Tt(e.gammaConstraint),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer)}build(e){e=Je(e);const n=this.axis>=0?this.axis:this.axis+e.length,s=e[n];if(s==null)throw new F(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new St({ndim:e.length,axes:{[n]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return W(()=>{const s=n.training==null?!1:n.training,o=Oe(e),r=o.shape,i=r.length,a=xs(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const c=vr(1,i);c[l]=r[l];const u=a.slice();u.sort();const h=!Ye(u,xs(0,i).slice(0,i-1)),d=()=>{if(h){const b=M(this.movingMean.read(),c),w=M(this.movingVariance.read(),c),y=this.center?M(this.beta.read(),c):null,v=this.scale?M(this.gamma.read(),c):null;return pa(o,b,w,y,v,this.epsilon)}else return pa(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[f,p,m]=z3(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,y)=>{W(()=>{const v=1-y,I=b.read(),C=D(Ie(I,w),v);b.write(Ie(I,C))})};return(()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,m,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:pt(this.betaInitializer),gammaInitializer:pt(this.gammaInitializer),movingMeanInitializer:pt(this.movingMeanInitializer),movingVarianceInitializer:pt(this.movingVarianceInitializer),betaRegularizer:tt(this.betaRegularizer),gammaRegularizer:tt(this.gammaRegularizer),betaConstraint:Nt(this.betaConstraint),gammaConstraint:Nt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}sC.className="BatchNormalization";ee(sC);class oC extends Ge{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=dt(e.betaInitializer||"zeros"),this.gammaInitializer=dt(e.gammaInitializer||"ones"),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Je(e);const n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=n);for(const r of this.axis)if(r<0||r>=n)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==mo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,n){const s=Oe(e),o=s.shape,r=o.length;return W(()=>{let{mean:a,variance:l}=Mm(s,this.axis,!0);const c=vr(1,r);for(const m of this.axis)c[m]=o[m];const u=m=>m!=null&&m.shape.length!==r?M(m,c):m;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(f.push(o[m]),p.push(1)):(f.push(1),p.push(o[m]));return a=ds(a,f),l=ds(l,f),h!=null&&(h=ds(h,p)),d!=null&&(d=ds(d,p)),pa(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:pt(this.betaInitializer),gammaInitializer:pt(this.gammaInitializer),betaRegularizer:tt(this.betaRegularizer),gammaRegularizer:tt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}oC.className="LayerNormalization";ee(oC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function W3(t,e,n){return W(()=>{if(t.rank!==4)throw new F(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new F("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=bs()),n!=="channelsLast"&&n!=="channelsFirst")throw new F(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Lm(t,s)})}class rC extends Ge{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?bs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new F(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,s;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new F(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new F(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[n,s]}this.inputSpec=[new St({ndim:4})]}computeOutputShape(e){e=Je(e);let n,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],n,s]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],n,s,e[3]])}call(e,n){return W(()=>W3(Oe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}rC.className="ZeroPadding2D";ee(rC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jh(t,e,n,s,o,r){return W(()=>{It(o),kv(r),Bn(s),n==null&&(n=[1,1]),s==null&&(s="valid"),o==null&&(o=bs()),r==null&&(r="max"),t=zg(t,o);let i;const a=s==="same"?"same":"valid";return r==="max"?i=Om(t,e,n,a):i=$m(t,e,n,a),o==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}function iC(t,e,n,s,o,r){return W(()=>{It(o),kv(r),Bn(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),o==null&&(o=bs()),r==null&&(r="max"),t=kI(t,o);let i;const a=s==="same"?"same":"valid";return r==="max"?i=sF(t,e,n,a):i=cD(t,e,n,a),o==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}class aC extends Ge{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new F(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(_t(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new F(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);_t(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Bn(this.padding),this.inputSpec=[new St({ndim:3})]}computeOutputShape(e){e=Je(e);const n=gs(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return W(()=>{this.invokeCallHook(e,n),e=Al(Oe(e),2);const s=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return kl(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}}class lC extends aC{constructor(e){super(e)}poolingFunction(e,n,s,o,r){return It(r),Bn(o),jh(e,n,s,o,r,"max")}}lC.className="MaxPooling1D";ee(lC);class cC extends aC{constructor(e){super(e)}poolingFunction(e,n,s,o,r){return It(r),Bn(o),jh(e,n,s,o,r,"avg")}}cC.className="AveragePooling1D";ee(cC);class uC extends Ge{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new F(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];_t(this.poolSize,"poolSize"),_t(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,It(this.dataFormat),Bn(this.padding),this.inputSpec=[new St({ndim:4})]}computeOutputShape(e){e=Je(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=gs(n,this.poolSize[0],this.padding,this.strides[0]),s=gs(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s]:[e[0],n,s,e[3]]}call(e,n){return W(()=>(this.invokeCallHook(e,n),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class hC extends uC{constructor(e){super(e)}poolingFunction(e,n,s,o,r){return It(r),Bn(o),jh(e,n,s,o,r,"max")}}hC.className="MaxPooling2D";ee(hC);class dC extends uC{constructor(e){super(e)}poolingFunction(e,n,s,o,r){return It(r),Bn(o),jh(e,n,s,o,r,"avg")}}dC.className="AveragePooling2D";ee(dC);class fC extends Ge{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new F(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];_t(this.poolSize,"poolSize"),_t(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,It(this.dataFormat),Bn(this.padding),this.inputSpec=[new St({ndim:5})]}computeOutputShape(e){e=Je(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=gs(n,this.poolSize[0],this.padding,this.strides[0]),s=gs(s,this.poolSize[1],this.padding,this.strides[1]),o=gs(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s,o]:[e[0],n,s,o,e[4]]}call(e,n){return W(()=>(this.invokeCallHook(e,n),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class pC extends fC{constructor(e){super(e)}poolingFunction(e,n,s,o,r){return It(r),Bn(o),iC(e,n,s,o,r,"max")}}pC.className="MaxPooling3D";ee(pC);class mC extends fC{constructor(e){super(e)}poolingFunction(e,n,s,o,r){return It(r),Bn(o),iC(e,n,s,o,r,"avg")}}mC.className="AveragePooling3D";ee(mC);class gC extends Ge{constructor(e){super(e),this.inputSpec=[new St({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,n){throw new _e}}class xC extends gC{constructor(e){super(e||{})}call(e,n){return W(()=>{const s=Oe(e);return bt(s,1)})}}xC.className="GlobalAveragePooling1D";ee(xC);class bC extends gC{constructor(e){super(e||{})}call(e,n){return W(()=>{const s=Oe(e);return Ms(s,1)})}}bC.className="GlobalMaxPooling1D";ee(bC);class yC extends Ge{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,It(this.dataFormat),this.inputSpec=[new St({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new _e}getConfig(){const e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class wC extends yC{call(e,n){return W(()=>{const s=Oe(e);return this.dataFormat==="channelsLast"?bt(s,[1,2]):bt(s,[2,3])})}}wC.className="GlobalAveragePooling2D";ee(wC);class vC extends yC{call(e,n){return W(()=>{const s=Oe(e);return this.dataFormat==="channelsLast"?Ms(s,[1,2]):Ms(s,[2,3])})}}vC.className="GlobalMaxPooling2D";ee(vC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class IC extends Ge{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,s={}){const o=n.layer,r=Bs(o,s);delete n.layer;const i={layer:r};return Object.assign(i,n),new e(i)}}class CC extends IC{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Je(e),e.length<3)throw new F(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Je(e);const n=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(n),o=e[1];return[s[0],o].concat(s.slice(1))}call(e,n){return W(()=>(e=Oe(e),_I((i,a)=>[Oe(this.layer.call(i,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}CC.className="TimeDistributed";ee(CC);function V3(t){Er(oP,"BidirectionalMergeMode",t)}const U3="concat";class $C extends IC{constructor(e){super(e);const n=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=n,this.forwardLayer=Bs(s),n.goBackwards=n.goBackwards!==!0;const o={};if(o.className=e.layer.getClassName(),o.config=n,this.backwardLayer=Bs(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?U3:e.mergeMode,V3(this.mergeMode),e.weights)throw new _e("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const n=e.length,s=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,o,r;return this.returnState&&(r=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):fn(o)}apply(e,n){let s=n==null?null:n.initialState,o=n==null?null:n.constants;n==null&&(n={});const r=FI(e,s,o,this.numConstants);if(e=r.inputs,s=r.initialState,o=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&o==null)return super.apply(e,n);const i=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new F("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,i.push(...s);const u=s.map(h=>new St({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(o!=null)throw new _e("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof _s;for(const c of i)if(c instanceof _s!==l)throw new F("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return W(()=>{const s=n.initialState;let o,r;if(s==null)o=this.forwardLayer.call(e,n),r=this.backwardLayer.call(e,n);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);o=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(n,{initialState:c}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(r.slice(1))),o=o[0],r=r[0]),this.returnSequences&&(r=br(r,1));let a;return this.mergeMode==="concat"?a=Sg([o,r]):this.mergeMode==="sum"?a=se(o,r):this.mergeMode==="ave"?a=D(.5,se(o,r)):this.mergeMode==="mul"?a=D(o,r):this.mergeMode==null&&(a=[o,r]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ir(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ir(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){const s=Bs(n.layer);if(delete n.layer,n.numConstants!=null)throw new _e("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=n;return o.layer=s,new e(o)}}$C.className="Bidirectional";ee($C);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kC extends Ge{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return W(()=>(e=Oe(e),e.dtype!=="float32"&&(e=Dl(e,"float32")),se(D(e,this.scale),this.offset)))}}kC.className="Rescaling";ee(kC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function o0(t){return new jg(t)}function G3(t){return new Kg(t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3=H();H3.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var r0;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(r0||(r0={}));var i0;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(i0||(i0={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function j3(t,e){return SC(t,e)}function SC(t,e,n=new Map,s=new Set){if(t==null)return null;if(typeof Blob=="function"&&t instanceof Blob)return t.slice();if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const o=e(t);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Kh(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const a=t[i],l=SC(a,e,n,s);r[i]=l}return s.delete(t),t.__proto__&&(r.__proto__=t.__proto__),r}else throw new Error(`Can't recurse into non-iterable type: ${t}`);else return n.set(t,o.value),o.value}function K3(t,e=TC){return NC(t,e)}function NC(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const o=e(t);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Kh(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const a=t.map(c=>c[i]),l=NC(a,e,n);r[i]=l}return n.delete(s),r}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return o.value}function TC(t){return t===null?null:Kh(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Kh(t){let e=!1;if(H().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");e=t instanceof n}return t!=null&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||typeof t=="object"&&!(t instanceof ht)&&!(t instanceof Promise)&&!e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function q3(t){return j3(t,X3)}function X3(t){return t instanceof ht?{value:t.clone(),recurse:!1}:Kh(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class EC{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,n){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=n}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const n of e)this.push(n)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const n=this.wrap(this.begin+e),s=this.get(n);return this.set(n,this.pop()),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class qh extends EC{constructor(){super(qh.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,n=new Array(e),s=this.length();for(let o=0;o<s;o++)n[o]=this.get(this.wrap(this.begin+o));this.data=n,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}qh.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Y3(t){return new Z3(t)}class zn{async toArray(){const e=[];let n=await this.next();for(;!n.done;)e.push(n.value),n=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),n=[];let s=await e.next();for(;!s.done;)n.push(s.value),s=await e.next();return n}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let n=await this.next(),s=e(n.value);for(;!n.done&&s;)n=await this.next(),s=e(n.value)}handleErrors(e){return new oB(this,e)}filter(e){return new nB(this,e)}map(e){return new sB(this,e)}mapAsync(e){return new a0(this,e)}serialMapAsync(e){return new a0(this,e).serial()}flatmap(e){return new iB(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(n=>n===!0)}rowMajorBatch(e,n=!0){return new tB(this,e,n)}columnMajorBatch(e,n=!0,s=TC){return this.rowMajorBatch(e,n).map(r=>K3(r,s))}concatenate(e,n){return new aB(Y3([this,e]),n)}take(e){return e<0||e==null?this:new eB(this,e)}skip(e){return e<0||e==null?this:new Q3(this,e)}prefetch(e){return new RC(this,e)}shuffle(e,n){return new lB(this,e,n)}serial(){return new J3(this)}}class Z3 extends zn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:q3(e),done:!1}}}class J3 extends zn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class Q3 extends zn{constructor(e,n){super(),this.upstream=e,this.maxCount=n,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Me(e.value)}return this.upstream.next()}}class eB extends zn{constructor(e,n){super(),this.upstream=e,this.maxCount=n,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class tB extends zn{constructor(e,n,s=!0){super(),this.upstream=e,this.batchSize=n,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(n.value)}return{value:e,done:!1}}}class nB extends zn{constructor(e,n){super(),this.upstream=e,this.predicate=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Me(e.value)}}}class sB extends zn{constructor(e,n){super(),this.upstream=e,this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const n=yo(e.value),s=this.transform(e.value),o=yo(s);for(const r of n)dm(r,o)||r.dispose();return{value:s,done:!1}}}class oB extends zn{constructor(e,n){super(),this.upstream=e,this.handler=n,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class a0 extends zn{constructor(e,n){super(),this.upstream=e,this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const n=yo(e.value),s=await this.transform(e.value),o=yo(s);for(const r of n)dm(r,o)||r.dispose();return{value:s,done:!1}}}class rB extends zn{constructor(){super(),this.outputQueue=new qh,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class iB extends rB{constructor(e,n){super(),this.upstream=e,this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const n=yo(e.value),s=this.transform(e.value),o=yo(s);this.outputQueue.pushAll(s);for(const r of n)dm(r,o)||r.dispose();return!0}}class aB extends zn{constructor(e,n){super(),this.baseErrorHandler=n,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const s=await this.moreIterators.next();if(s.done)return{value:null,done:!0};this.iterator=s.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(e)):n}}var l0;(function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"})(l0||(l0={}));class RC extends zn{constructor(e,n){super(),this.upstream=e,this.bufferSize=n,this.buffer=new EC(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class lB extends RC{constructor(e,n,s){super(e,n),this.upstream=e,this.windowSize=n,this.upstreamExhausted=!1,this.random=Dh.alea(s||Zt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),n=await this.buffer.shuffleExcise(e);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class qg extends zn{constructor(e,n){if(super(),this.webcamVideoElement=e,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=sn([0],"int32"),this.webcamConfig.centerCrop){const s=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-s)/2,i=(1-o)/2,a=r+s,l=o+i;this.cropBox=Jr([i,r,l,a],[1,4])}else this.cropBox=Jr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,n={}){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=n.resizeWidth,e.height=n.resizeHeight}const s=new qg(e,n);return await s.start(),s}async start(){this.webcamConfig.facingMode&&$(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=kR(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return W(()=>{const n=Fn(pe(e,"float32"),0);let s;s=Hi.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const o=s.shape;return M(s,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function cB(t,e){return qg.create(t,e)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&$(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uB=Hw;class Xh extends mp{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i1(this,ro())}nextDataId(){return Xh.nextDataId++}write(e,n,s){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&_n(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:s,refCount:1}),o}makeTensorInfo(e,n,s){let o;if(n==="string"&&s!=null&&s.length>0&&Ia(s[0])){const r=s.map(i=>po(i));o=this.write(r,e,n)}else o=this.write(s,e,n);return{dataId:o,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,s,o,r){this.data.set(e,{values:n,dtype:o,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:s}=this.data.get(e);if(n==="complex64"){const o=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Zs(o,r)}return this.data.get(e).values}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(o=>bo(o));return ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}makeOutput(e,n,s){return ro().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=Zt();return e(),{kernelMs:Zt()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");const n=this.readSync(e.dataId);return uB(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Xh.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const hB=t=>{const{x:e}=t.inputs,n=t.backend;be(e,"abs");let s=new Float32Array(q(e.shape));const o=n.data.get(e.dataId).values;return s=DC(o),n.makeOutput(s,e.shape,e.dtype)},dB={kernelName:Cu,backendName:"cpu",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ct(t){return(e,n,s,o,r)=>{const i=Fe(e,n),a=i.length,l=Se(i),c=q(i),u=Ut(r,c),h=e.length,d=n.length,f=Se(e),p=Se(n),m=ai(e,i),g=ai(n,i);if(m.length+g.length===0)for(let x=0;x<u.length;++x)u[x]=t(s[x%s.length],o[x%o.length]);else for(let x=0;x<u.length;++x){const b=vi(x,a,l),w=b.slice(-h);m.forEach(C=>w[C]=0);const y=Os(w,h,f),v=b.slice(-d);g.forEach(C=>v[C]=0);const I=Os(v,d,p);u[x]=t(s[y],o[I])}return[u,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vn(t){const{inputs:e,backend:n}=t,{real:s,imag:o}=e,r=n.data.get(s.dataId).values,i=n.data.get(o.dataId).values,a=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(a.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",r),imag:n.makeTensorInfo(o.shape,"float32",i)},a}const fB={kernelName:Sp,backendName:"cpu",kernelFunc:vn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qc(t,e,n="float32"){if(n==="complex64"){const o=Qc(t,e,"float32"),r=Qc(t,e,"float32");return vn({inputs:{real:o,imag:r},backend:t})}const s=Xt(q(e),n);return t.makeTensorInfo(e,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const pB={kernelName:Ga,backendName:"cpu",kernelFunc:Us};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(t){const{inputs:e,backend:n}=t,{input:s}=e,o=n.data.get(s.dataId).complexTensorInfos.real,r=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,r)}const mB={kernelName:qp,backendName:"cpu",kernelFunc:Ir};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(t,e,n,s){if(s==="int32"){const o=Int32Array.from(t);return[e,"int32",o]}if(s==="bool"){const o=Nr([0],n),[r,i]=Ct((a,l)=>a!==l?1:0)(e,[],t,o,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function $o(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return Us({inputs:{x:o},backend:n});const u=Qc(n,o.shape,o.dtype),h=$o({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),d=vn({inputs:{real:h,imag:u},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),d}if(o.dtype==="complex64"){const u=Ir({inputs:{input:o},backend:n}),h=$o({inputs:{x:u},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(u),h}if(!l1(o.dtype,r)){const u=Us({inputs:{x:o},backend:n});return{dataId:u.dataId,shape:u.shape,dtype:r}}const i=n.data.get(o.dataId).values,[a,l,c]=AC(i,o.shape,o.dtype,r);return n.makeTensorInfo(a,l,c)}const gB={kernelName:Da,backendName:"cpu",kernelFunc:$o};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mt(t,e,n,s){return n==null?({inputs:o,backend:r})=>{const{a:i,b:a}=o,l=r;be([i,a],t);const c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,h=i.dtype==="string"?wr(c):c,d=i.dtype==="string"?wr(u):u,f=s||i.dtype,[p,m]=e(i.shape,a.shape,h,d,f);return l.makeTensorInfo(m,f,p)}:({inputs:o,backend:r})=>{const{a:i,b:a}=o,l=r;if(i.dtype==="complex64"||a.dtype==="complex64"){const c=$o({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,m=$o({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,y=l.data.get(b.dataId).values,[v,I,C]=n(i.shape,a.shape,f,p,w,y),k=l.makeTensorInfo(C,"float32",v),N=l.makeTensorInfo(C,"float32",I),T=vn({inputs:{real:k,imag:N},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(k),l.disposeIntermediateTensorInfo(N),T}else{const c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,h=s||i.dtype,[d,f]=e(i.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function Xg(t){return(e,n,s,o,r,i)=>{const a=Fe(e,n),l=q(a),c=a.length,u=Se(a),h=Ut("float32",l),d=Ut("float32",l),f=ai(e,a),p=ai(n,a),m=Zs(s,o),g=Zs(r,i),x=e.length,b=Se(e),w=n.length,y=Se(n);if(f.length+p.length===0)for(let v=0;v<h.length;v++){const I=v%m.length,C=v%g.length,k=t(m[I*2],m[I*2+1],g[C*2],g[C*2+1]);h[v]=k.real,d[v]=k.imag}else for(let v=0;v<h.length;v++){const I=vi(v,c,u),C=I.slice(-x);f.forEach(L=>C[L]=0);const k=Os(C,x,b),N=I.slice(-w);p.forEach(L=>N[L]=0);const T=Os(N,w,y),A=t(m[k*2],m[k*2+1],g[T*2],g[T*2+1]);h[v]=A.real,d[v]=A.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC=Ct((t,e)=>t+e),xB=Xg((t,e,n,s)=>({real:t+n,imag:e+s})),di=Mt(Ii,FC,xB),bB={kernelName:Ii,backendName:"cpu",kernelFunc:di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yg(t,e,n,s,o){const r=q(s),i=Xt(o,n);for(let a=0;a<t.length;a++){const l=t[a];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(r>0?i[l]+=e[a]:i[l]+=1)}return i}function _C(t,e,n,s=!1){const o=t.shape[0],r=t.shape[1],i=ze([o,n],e.dtype);for(let a=0;a<o;a++)for(let l=0;l<r;l++){const c=t.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?i.set(1,a,c):e.size>0?i.set(i.get(a,c)+e.get(a,l),a,c):i.set(i.get(a,c)+1,a,c))}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(t){return(e,n,s)=>{const o=Ut(n,e.length);for(let r=0;r<e.length;++r)o[r]=t(e[r],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qe(t,e,n){return({inputs:s,attrs:o,backend:r})=>{const{x:i}=s;if(be(i,t),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(i.dataId).values,c=q(i.shape),u=n||i.dtype,h=Ft(u,c);for(let d=0;d<c;++d)h[d]=e(l[d],o);return a.makeTensorInfo(i.shape,u,h)}}function Ei(t,e,n){return({inputs:s,attrs:o,backend:r})=>{const{x:i}=s;if(be(i,t),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(i.dataId).values,c=n||i.dtype,u=e(l,c,o);return a.makeTensorInfo(i.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC=_o(t=>Math.ceil(t)),yB=Ei(Aa,OC),wB={kernelName:Aa,backendName:"cpu",kernelFunc:yB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(t,e,n,s){const o=Ft(n,q(e));if(s&&n!=="string"){let r=0;t.forEach(i=>{const a=q(i.shape);o.set(i.vals,r),r+=a})}else{let r=0;t.forEach(i=>{const a=n==="string"?wr(i.vals):i.vals;let l=0;for(let c=0;c<i.shape[0];++c){const u=c*e[1]+r;for(let h=0;h<i.shape[1];++h)o[u+h]=a[l++]}r+=i.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC=Ct((t,e)=>t===e?1:0),PC=Mt(Pu,LC,null,"bool"),vB={kernelName:Pu,backendName:"cpu",kernelFunc:PC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=_o(t=>Math.exp(t)),zC=Ei(Ba,BC,"float32"),IB={kernelName:Ba,backendName:"cpu",kernelFunc:zC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC=_o(t=>Math.expm1(t)),CB=Ei(za,WC),$B={kernelName:za,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC=_o(t=>Math.floor(t)),kB=Ei(Wa,VC),SB={kernelName:Wa,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(t,e,n,s,o,r,i,a,l){const c=ze([s,r],n);for(let u=0;u<s;u++){const h=[];let d=0;for(let f=0;f<o;f++){const p=t[u*o+f];d+=p*i[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)c.values[u*r+f]=e.get(...e.indexToLoc(d*r+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GC(t,e,n){const s=ze(n,t.dtype);for(let o=0;o<s.size;++o){const i=s.indexToLoc(o).slice(),a=i[0],l=i[2],c=e.locToIndex([a,l]);i[2]=e.values[c];const u=t.locToIndex(i);0<=u&&u<t.values.length&&(s.values[o]=t.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC=Ct((t,e)=>t>e?1:0),NB=Mt(Vu,HC,null,"bool"),TB={kernelName:Vu,backendName:"cpu",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC=Ct((t,e)=>t>=e?1:0),EB=Mt(Ua,jC,null,"bool"),RB={kernelName:Ua,backendName:"cpu",kernelFunc:EB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=Ct((t,e)=>t<e?1:0),DB=Mt(Gu,KC,null,"bool"),AB={kernelName:Gu,backendName:"cpu",kernelFunc:DB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC=Ct((t,e)=>t<=e?1:0),FB=Mt(Hu,qC,null,"bool"),_B={kernelName:Hu,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(t,e,n){const s=(e-t)/(n-1),o=Xt(n,"float32");o[0]=t;for(let r=1;r<o.length;r++)o[r]=o[r-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YC=_o(t=>Math.log(t)),OB=Ei(qa,YC),MB={kernelName:qa,backendName:"cpu",kernelFunc:OB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(t,e,n,s){const o=Ut(s,q(n));for(let r=0;r<o.length;++r){const i=r*e;let a=t[i];for(let l=0;l<e;++l){const c=t[i+l];(Number.isNaN(c)||c>a)&&(a=c)}o[r]=a}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC=Ct((t,e)=>Math.max(t,e)),LB=Mt(Ya,JC),PB={kernelName:Ya,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QC=Ct((t,e)=>Math.min(t,e)),BB=Mt(Za,QC),zB={kernelName:Za,backendName:"cpu",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zg=Ct((t,e)=>t*e),WB=Xg((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n})),Yh=Mt(Qa,Zg,WB),VB={kernelName:Qa,backendName:"cpu",kernelFunc:Yh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(t,e,n){const s=So(-1,n);return Zg([],e,s,t,n)}function UB(t){const{inputs:e,backend:n}=t,{x:s}=e;be(s,"neg");const o=n.data.get(s.dataId).values,[r,i]=e$(o,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,r)}const GB={kernelName:nh,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t$=Ct((t,e)=>t!==e?1:0),HB=Mt(sh,t$,null,"bool"),jB={kernelName:sh,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jg(t,e,n,s,o){const r=e.length,i=q(e),a=Se(e),l=Se(o),c=Ut(n,q(o));for(let u=0;u<i;++u){const h=vi(u,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[s[p]];const f=Os(d,r,l);c[f]=t[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(t){const{inputs:e,attrs:n,backend:s}=t,{x:o}=e,{perm:r}=n;be(o,"transpose");const i=o.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=o.shape[r[h]];const l=s.data.get(o.dataId).values,c=Jg(l,o.shape,o.dtype,r,a);return{dataId:s.write(c,a,o.dtype),shape:a,dtype:o.dtype}}const KB={kernelName:Yr,backendName:"cpu",kernelFunc:gn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(t,e,n,s){const[o,r]=Ot(t,s),i=$n(e,"int32"),a=Xt(q(o),i),l=q(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=n[u+d];a[c]=h}return{outVals:a,outShape:o,outDtype:i}}function qB(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s;be(o,"prod");const a=o.shape.length,l=We(r,o.shape),c=xt(l,a);let u=l,h=o;const d=[];c!=null&&(h=gn({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(h),u=vt(u.length,a));const f=n.data.get(h.dataId).values,{outVals:p,outShape:m,outDtype:g}=n$(h.shape,h.dtype,f,u);let x=m;return i&&(x=wt(m,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(x,g,p)}const XB={kernelName:ch,backendName:"cpu",kernelFunc:qB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(t,e,n){t.forEach((s,o)=>{if(s<0||s>=n){const r=vi(o,e.length,Se(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${n})`)}})}function ZB(t,e){for(let n=0;n<t.length;++n){const s=t[n],o=n===t.length-1?e:t[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>o)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function JB(t,e,n,s){const o=[];let r=0;const i=e.length-1+n.length,a=new Array(i).fill(null).map(()=>[0]);ZB(n,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const u=e[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<t.length;++c){let u=t[c],h=t[c]+1;for(let d=0;d<n.length;++d){const f=n[d],p=d+e.length-1;if(p>=0){const m=a[p],g=m[m.length-1]-f[u];for(let x=u;x<h;++x)a[p].push(f[x+1]+g)}u=f[u],h=f[h]}h!==u&&(o.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:o,numValues:r}}function QB(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,o=Ft("int32",s);e.push(o),t[n].forEach((r,i)=>o[i]=r)}return e}function c0(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function ez(t,e,n,s,o,r){const i=c0(e,2)[1],a=c0(r,2)[1];let l=0;for(const c of n)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)o[l*a+h]=t[u*i+h];++l}}function tz(t,e,n,s,o){const r=e.slice();r[0]=o;const i=Ft(n,q(r)),a=t.length,l=a===0?0:a/e[0];return ez(t,e,s,l,i,r),[i,r]}function s$(t,e,n,s,o,r,i,a){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(YB(r,i,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=JB(r,i,t,c),f=QB(u),p=tz(n,s,o,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Vn=ls;class eu{constructor(e,n,s,o,r,i,a,l,c,u){this.shape=e,this.shapeShape=n,this.values=s,this.valuesShape=o,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Yw(u),this.raggedRank=Zw(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Vn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Vn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Vn.VALUE_ROWIDS:return eu.getMaxWidthValueRowID(n);case Vn.ROW_SPLITS:return eu.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Vn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let s=0;for(let o=0;o<n-1;++o){const r=e[o+1]-e[o];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let s=0,o=e[0],r=0;for(let i=1;i<n;++i){const a=e[i];a!==o&&(o=a,r=Math.max(i-s,r),s=i)}return Math.max(n-s,r)}tensorShapeFromTensor(e,n,s=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return h0(e,s)}calculateOutputSize(e){const n=this.valuesShape,s=this.defaultValueShape;Jw(s,n);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=Xw(this.raggedRank,o,n);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,n,s){const o=Math.min(e,s),r=[];let i=0;for(let a=0;a<o;++a,i+=n)r.push(i);for(let a=o;a<e;++a)r.push(-1);return $(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,n,s,o){const r=e.length,i=[];for(let a=0;a<r-1;++a){const l=e[a+1]-e[a];let c=Math.min(o,l),u=n[a];u===-1&&(c=0);for(let h=0;h<c;++h)i.push(u),u+=s;for(let h=0;h<l-c;++h)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,n,s,o){const r=e.length,i=[];if(r===0)return[];let a=0,l=e[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let c=n[l];i.push(c);for(let u=1;u<r;++u){const h=e[u];if(h===l)c>=0&&(++a,a<o?c+=s:c=-1);else{if(a=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);c=n[h]}i.push(c)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,n,s,o){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Vn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,n,s,o);case Vn.ROW_SPLITS:if(r.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(r,n,s,o);default:throw new Error(`Unsupported partition type: ${Vn[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Vn.FIRST_DIM_SIZE:return e[0];case Vn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Vn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Vn[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let l=o.length-2;l>=0;--l)o[l]=o[l+1]*s[l+1];const r=h0(s,!1),i=Ft(this.valuesDType,q(r));if(o[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(n,o[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,o[c],s[c]);this.setOutput(this.raggedRank,l,i,r)}return[r,i]}setOutput(e,n,s,o){if(s.length===0)return;const r=this.values,i=s;let a=o.slice();a=a.slice(e+1);const l=q(a),c=n.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;W(()=>{const m=M(u,p);u=ea(m,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let m=p<c?n[p]:-1;if(m===f){++f;continue}if(d<f){const g=r.subarray(h*l),x=i.subarray(d*l),b=(f-d)*l;u0(x,g,b)}if(p>=c){const g=s.length;m=Math.floor(g/l)}if(m>f)if(this.defaultValue.length===1)i.subarray(f*l,m*l).fill(this.defaultValue[0]),f=m;else for(;m>f;){const g=i.slice(f*l);u0(g,u,l),++f}m<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function u0(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function h0(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function o$(t,e,n,s,o,r,i,a,l,c){return new eu(t,e,n,s,o,r,i,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(t,e,n,s){const o=t===e,r=t<e&&n<0,i=e<t&&n>1;if(o||r||i)return Xt(0,s);const a=Math.abs(Math.ceil((e-t)/n)),l=Xt(a,s);e<t&&n===1&&(n=-1),l[0]=t;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i$=_o(t=>1/Math.sqrt(t)),nz=Ei(rl,i$),sz={kernelName:rl,backendName:"cpu",kernelFunc:nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(t,e,n,s,o,r,i,a,l,c){const u=[s/o,o],h=t.values,d=e.values;if(s===0)return ze(n,e.dtype);const f=ze(u,e.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const m=[];let g=0;for(let x=0;x<i;x++){const b=h[p*i+x];m.push(b),g+=b*a[x]}if(g<0||g>=s/o)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let x=0;x<o;x++)c?f.values[g*o+x]+=d[p*o+x]:f.values[g*o+x]=e.rank===0?d[0]:d[p*o+x]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz=_o(t=>1/(1+Math.exp(-t))),a$=Qe(ul,t=>1/(1+Math.exp(-t))),rz={kernelName:ul,backendName:"cpu",kernelFunc:a$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(t,e,n,s,o){const r=wm(s,e,n),i=q(n),a=Se(s);if(r){const h=vm(e,a);return o==="string"?t.slice(h,h+i):t.subarray(h,h+i)}const l=o==="string"?wr(t):t,c=ze(s,o,l),u=ze(n,o);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,m)=>p+e[m]);u.set(c.get(...f),...d)}return o==="string"?bv(u.values):u.values}function Cr(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{begin:r,size:i}=s;be(o,"slice");const[a,l]=kh(o,r,i);bm(o,a,l);const c=n.data.get(o.dataId).values,u=l$(c,a,l,o.shape,o.dtype);return n.makeTensorInfo(l,o.dtype,u)}const iz={kernelName:mh,backendName:"cpu",kernelFunc:Cr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(t,e,n,s,o,r,i){const a=e[0],l=r[0],c=new Array(l),u=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(rv(a));const g=Ft(n,0),x=Ft(o,0);return[g,[0,h],x,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let g=0;g<a;++g){const x=t[g*h];if(x<0)throw new Error(iv(g,x));if(x>=l)throw new Error(av(g,x,l));++p[x],d=d&&x>=f,f=x}let m=!0;for(let g=0;g<l;++g){const x=p[g]===0;c[g]=x,m=m&&!x,p[g]=Math.max(p[g],1),g>0&&(p[g]+=p[g-1])}if(m&&d){const g=t,x=s;for(let b=0;b<a;++b)u[b]=b;return[g,[a,h],x,c,u]}else{const g=p[l-1],x=Ft(n,g*h),b=Ft(o,g),w=new Array(l).fill(0);for(let y=0;y<a;++y){const v=t[y*h],I=w[v],C=(v===0?0:p[v-1])+I;w[v]++;for(let k=0;k<h;++k)x[C*h+k]=t[y*h+k];b[C]=s[y],u[y]=C}for(let y=0;y<l;++y)if(w[y]===0){const I=y===0?0:p[y-1];x[I*h+0]=y;for(let C=1;C<h;++C)x[I*h+C]=0;b[I]=i}return[x,[g,h],b,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(t,e,n,s,o){const r=q(s),i=e[0],a=o.length,l=[];let c=1,u=-1;for(let g=0;g<a;++g){const x=o[g];if(x===-1){if(u!==-1)throw new Error(lv(u,g));u=g,l.push(1)}else{if(x<0)throw new Error(cv(g,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(uv());const g=Math.trunc(r/c);if(c*g!==r)throw new Error(hv(s,l));l[u]=g}if(q(l)!==r)throw new Error(dv(s,l));const d=s.length,f=[];if(d>0){f[d-1]=1;for(let g=d-2;g>=0;--g)f[g]=f[g+1]*s[g+1]}const p=[];if(a>0){p[a-1]=1;for(let g=a-2;g>=0;--g)p[g]=p[g+1]*l[g+1]}const m=Ft(n,i*a);for(let g=0;g<i;++g){let x=0;for(let b=0;b<d;++b)x+=t[g*d+b]*f[b];for(let b=0;b<a;++b)m[g*a+b]=Math.trunc(x/p[b]),x%=p[b]}return[m,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qg(t,e,n,s,o,r=!1,i=0){const a=s.length,l=[e[0],t.length/e[0]],c=l[1],h=a>0?o[a-1]+1:0;if(h<0)throw new Error(Sf());const d=e.slice();d[0]=h;const f=d.reduce((w,y)=>w*y,1),p=Ft(n,f);if(a===0)return h>0&&p.fill(i),[p,d];if(h<=0)throw new Error(Sf());let m=0,g=1,x=0,b=o[m];for(;;){let w=0;if(g<a){if(w=o[g],b===w){++g;continue}if(b>=w)throw new Error(fv())}if(b<0||b>=h)throw new Error(pv(b,h));b>x&&p.fill(i,x*c,b*c);for(let y=m;y<g;++y){const v=s[y];if(v<0||v>=l[0])throw new Error(mv(y,s[y],l[0]));for(let I=0;I<c;I++)p[b*c+I]+=t[v*c+I]}if(r)for(let y=0;y<c;y++)p[b*c+y]/=g-m;if(m=g,++g,x=b+1,b=w,g>a)break}return x<h&&p.fill(i,x*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const az=_o(t=>Math.sqrt(t)),lz=Qe(dl,t=>Math.sqrt(t)),cz={kernelName:dl,backendName:"cpu",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h$=Ct((t,e)=>{const n=t-e;return n*n}),uz=Mt(fl,h$),hz={kernelName:fl,backendName:"cpu",kernelFunc:uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(t,e,n,s){const o=ze(t,e.dtype);for(let r=0;r<o.size;r++){const i=o.indexToLoc(r),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*n[l]+s[l];o.set(e.get(...a),...i)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dz{constructor(e,n,s,o,r,i){this.separator=po(e),this.nGramWidths=n,this.leftPad=po(s),this.rightPad=po(o),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const s=this.getPadWidth(n);return Math.max(0,e+2*s-n+1)}createNGrams(e,n,s,o,r,i){for(let a=0;a<r;++a){const l=this.getPadWidth(i),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=i-(c+u),d=n+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let b=0;b<h;++b)f+=e[d+b].length;f+=u*this.rightPad.length,f+=(c+u+h-1)*this.separator.length,s[o+a]=new Uint8Array(f);const m=s[o+a];let g=0;const x=b=>b.forEach(w=>m[g++]=w);for(let b=0;b<c;++b)x(this.leftPad),x(this.separator);for(let b=0;b<h-1;++b)x(e[d+b]),x(this.separator);if(h>0){x(e[d+h-1]);for(let b=0;b<u;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<u-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,n){const s=e.length,o=n.length;if(o>0){let l=n[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<o;++c){let u=n[c]>=l;if(u=u&&n[c]<=s,!u)throw new Error(`Invalid split value ${n[c]}, must be in [${l}, ${s}]`);l=n[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=o-1,i=Ft("int32",o);if(s===0||o===0){const l=new Array(s);for(let c=0;c<=r;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=r;++l){const c=n[l]-n[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),i[l]=i[l-1]+u}const a=new Array(i[r]);for(let l=0;l<r;++l){const c=n[l];let u=i[l];if(this.nGramWidths.forEach(h=>{const d=n[l+1]-n[l],f=this.getNumNGrams(d,h);this.createNGrams(e,c,a,u,f,h),u+=f}),this.preserveShort&&u===i[l]){const h=n[l+1]-n[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(e,c,a,u,f,d)}}return[a,i]}}function f$(t,e,n,s,o,r,i,a){return new dz(n,s,o,r,i,a).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(t,e,n,s){if(!t.length)return;if(e.length===0){for(let r=0;r<t.length;++r)s.push(t.subarray(r,r+1));return}if(e.length===1){const r=e[0];let i=t.indexOf(r);for(;i!==-1;){const a=t.subarray(0,i);(!n||a.length!==0)&&s.push(a),t=t.subarray(i+1),i=t.indexOf(r)}(!n||t.length!==0)&&s.push(t);return}let o=0;for(let r=0;r<t.length+1;r++)if(r===t.length||e.indexOf(t[r])!==-1){const i=t.subarray(o,r);(!n||i.length!==0)&&s.push(i),o=r+1}}function p$(t,e,n){const s=t.length,o=[];let r=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const f=o.length;fz(t[d],e,n,o);const p=o.length-f;a[d]=p,r+=p,i=Math.max(i,p)}const l=Ft("int32",r*2),c=new Array(r),u=[s,i];let h=0;for(let d=0;d<s;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=o[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(t,e){const n=Ft("int32",t.length);for(let s=0;s<t.length;++s)n[s]=hE(t[s]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g$=Ct((t,e)=>t-e),pz=Xg((t,e,n,s)=>({real:t-n,imag:e-s})),ex=Mt(pl,g$,pz),mz={kernelName:pl,backendName:"cpu",kernelFunc:ex};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(t,e){const n=new Array(t.rank);for(let o=0;o<n.length;o++)n[o]=t.shape[o]*e[o];const s=ze(n,t.dtype);for(let o=0;o<s.values.length;++o){const r=s.indexToLoc(o),i=new Array(t.rank);for(let l=0;l<i.length;l++)i[l]=r[l]%t.shape[l];const a=t.locToIndex(i);s.values[o]=t.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qi=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function b$(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const a=s-n+1,l=e-n+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(n,Math.floor(e-l*u/a+h)),f=Math.min(s,Math.floor(e+(a-l)*u/a+h));b$(t,e,d,f)}const o=t[e];let r=n,i=s;for(Br(t,n,e),qi(t[s],o)>0&&Br(t,n,s);r<i;){for(Br(t,r,i),r++,i--;qi(t[r],o)<0;)r=r+1;for(;qi(t[i],o)>0;)i=i-1}qi(t[n],o)===0?Br(t,n,i):(i=i+1,Br(t,i,s)),i<=e&&(n=i+1),e<=i&&(s=i-1)}}function y$(t,e,n,s,o){const r=e[e.length-1],[i,a]=[t.length/r,r],l=Ut(n,i*s),c=Ut("int32",i*s);for(let h=0;h<i;h++){const d=h*a,f=t.subarray(d,d+a);let p=new Array(f.length);f.forEach((b,w)=>p[w]={value:b,index:w}),s<p.length&&(b$(p,s),p=p.slice(0,s)),o&&p.sort(qi);const m=h*s,g=l.subarray(m,m+s),x=c.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=p[b].value,x[b]=p[b].index}const u=e.slice();return u[u.length-1]=s,[ze(u,n,l),ze(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(t,e,n,s){const o=We(e,n)[0],r=[1,n[0],1];for(let p=0;p<o;p++)r[0]*=n[p];r[1]=n[o];for(let p=o+1;p<n.length;p++)r[2]*=n[p];const i={},a=new Int32Array(n[o]),l=new Kt(r,s,t),c=[],u=r[0]===1&&r[2]===1;for(let p=0;p<n[o];p++){let m;if(u)m=t[p].toString();else{const g=[];for(let x=0;x<r[0];x++)for(let b=0;b<r[2];b++)g.push(l.get(x,p,b));m=g.join(",")}if(i[m]!==void 0)a[p]=i[m];else{const g=Object.keys(i).length;i[m]=g,a[p]=g,c.push(p)}}const h=r.slice();h[1]=Object.keys(i).length;const d=new Kt(h,s);c.forEach((p,m)=>{for(let g=0;g<r[0];g++)for(let x=0;x<r[2];x++)d.set(l.get(g,p,x),g,m,x)});const f=n.slice();return f[o]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var gz=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:DC,addImpl:FC,bincountImpl:Yg,bincountReduceImpl:_C,castImpl:AC,ceilImpl:OC,concatImpl:MC,equalImpl:LC,expImpl:BC,expm1Impl:WC,floorImpl:VC,gatherNdImpl:UC,gatherV2Impl:GC,greaterImpl:HC,greaterEqualImpl:jC,lessImpl:KC,lessEqualImpl:qC,linSpaceImpl:XC,logImpl:YC,maxImpl:ZC,maximumImpl:JC,minimumImpl:QC,multiplyImpl:Zg,negImpl:e$,notEqualImpl:t$,prodImpl:n$,raggedGatherImpl:s$,raggedTensorToTensorImpl:o$,rangeImpl:r$,rsqrtImpl:i$,scatterImpl:Ur,sigmoidImpl:oz,sliceImpl:l$,sparseFillEmptyRowsImpl:c$,sparseReshapeImpl:u$,sparseSegmentReductionImpl:Qg,sqrtImpl:az,squaredDifferenceImpl:h$,stridedSliceImpl:d$,stringNGramsImpl:f$,stringSplitImpl:p$,stringToHashBucketFastImpl:m$,subImpl:g$,tileImpl:x$,topKImpl:y$,transposeImpl:Jg,uniqueImpl:w$},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ew("cpu",()=>new Xh,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v$=Qe(La,t=>t>=0?t:Math.exp(t)-1),xz={kernelName:La,backendName:"cpu",kernelFunc:v$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{alpha:r}=s;be([o],"leakyRelu");const i=q(o.shape),a=n.data.get(o.dataId).values,l=Ut("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return n.makeTensorInfo(o.shape,"float32",l)}const bz={kernelName:Uu,backendName:"cpu",kernelFunc:I$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yz=Ct((t,e)=>t<0?e*t:t);function C$(t){const{inputs:e,backend:n}=t,{x:s,alpha:o}=e;be([s,o],"prelu");const r=n.data.get(s.dataId).values,i=n.data.get(o.dataId).values,[a,l]=yz(s.shape,o.shape,r,i,"float32");return n.makeTensorInfo(l,"float32",a)}const wz={kernelName:lh,backendName:"cpu",kernelFunc:C$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $$=Qe(nl,t=>Math.max(0,t)),vz={kernelName:nl,backendName:"cpu",kernelFunc:$$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k$=Qe(sl,t=>Math.min(Math.max(0,t),6)),Iz={kernelName:sl,backendName:"cpu",kernelFunc:k$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tu(t,e,n,s,o){if(n==="linear")return Us({inputs:{x:e},backend:t});if(n==="relu")return $$({inputs:{x:e},backend:t});if(n==="elu")return v$({inputs:{x:e},backend:t});if(n==="relu6")return k$({inputs:{x:e},backend:t});if(n==="prelu")return C$({inputs:{x:e,alpha:s},backend:t});if(n==="leakyrelu")return I$({inputs:{x:e},backend:t,attrs:{alpha:o}});if(n==="sigmoid")return a$({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rt(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{shape:r}=s,i=q(o.shape),a=a1(r,i),l=q(a);$(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(o.dataId);const c=n.data.get(o.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}const Cz={kernelName:uh,backendName:"cpu",kernelFunc:rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(t){const{inputs:e,backend:n,attrs:s}=t,{a:o,b:r}=e,{transposeA:i,transposeB:a}=s;be([o,r],"matMul");const l=o.shape.length,c=r.shape.length,u=i?o.shape[l-2]:o.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=i?o.shape[l-1]:o.shape[l-2],f=a?r.shape[c-2]:r.shape[c-1],p=o.shape.slice(0,-2),m=r.shape.slice(0,-2),g=q(p),x=q(m),w=Fe(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,f]);$(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${i} and transposeB=${a} must match.`);const y=i?[g,u,d]:[g,d,u],v=a?[x,f,h]:[x,h,f],I=rt({inputs:{x:o},backend:n,attrs:{shape:y}}),C=rt({inputs:{x:r},backend:n,attrs:{shape:v}}),k=i?I.shape[1]:I.shape[2],N=i?I.shape[2]:I.shape[1],T=a?C.shape[1]:C.shape[2],A=Math.max(g,x),L=n.data.get(I.dataId).values,z=n.data.get(C.dataId).values,U=Se(I.shape),V=Se(C.shape),[B,j,P]=i?[U[0],1,U[1]]:[U[0],U[1],1],[Y,te,J]=a?[1,V[1],V[0]]:[V[1],1,V[0]],oe=N*T,ie=ze([A,N,T],I.dtype),de=ie.values,ce=n.blockSize;for(let ue=0;ue<A;ue++)for(let xe=0;xe<N;xe+=ce)for(let Ne=0;Ne<T;Ne+=ce)for(let $e=0;$e<k;$e+=ce){const De=Math.min(xe+ce,N),Pe=Math.min(Ne+ce,T),E=Math.min($e+ce,k);for(let R=xe;R<De;R++)for(let G=Ne;G<Pe;G++){let Z=0;for(let X=$e;X<E;X++){const Q=Math.min(ue,g-1)*B,le=Math.min(ue,x-1)*J,ae=L[Q+R*j+X*P],re=z[X*Y+G*te+le];Z+=ae*re}de[ue*oe+(R*T+G)]+=Z}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(w,ie.dtype,ie.values)}const $z={kernelName:Tu,backendName:"cpu",kernelFunc:S$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(t){const{inputs:e,backend:n,attrs:s}=t,{a:o,b:r,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,f,p;const m=[];d=S$({inputs:{a:o,b:r},attrs:{transposeA:l,transposeB:c},backend:n}),i&&(f=di({inputs:{a:d,b:i},backend:n}),m.push(d),d=f),u&&(p=tu(n,d,u,a,h),m.push(d),d=p);for(const x of m)n.disposeIntermediateTensorInfo(x);return d}const Sz={kernelName:Ac,backendName:"cpu",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz=Qe($a,t=>Math.acos(t)),Tz={kernelName:$a,backendName:"cpu",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez=Qe(ka,t=>Math.acosh(t)),Rz={kernelName:ka,backendName:"cpu",kernelFunc:Ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(t){const{inputs:e,backend:n}=t,s=e;be(e,"addN");const o=s.map(a=>n.data.get(a.dataId).values),r=ze(s[0].shape,s[0].dtype),i=r.values;for(let a=0;a<s.length;a++){const l=o[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}const Az={kernelName:wp,backendName:"cpu",kernelFunc:Dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s;be(o,"all");const a=We(r,o.shape);let l=a;const c=xt(l,o.shape.length);let u=o;c!=null&&(u=gn({inputs:{x:o},backend:n,attrs:{perm:c}}),l=vt(l.length,o.shape.length)),Ht("all",l,u.shape.length);const[h,d]=Ot(u.shape,l),f=q(d),p=Xt(q(h),u.dtype),m=n.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const b=x*f;let w=m[b];for(let y=0;y<f;++y){const v=m[b+y];w=w&&v}p[x]=w}c!=null&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,p);if(i){const x=wt(h,a),b=rt({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const _z={kernelName:vp,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s;be(o,"any");const a=We(r,o.shape);let l=a;const c=xt(l,o.shape.length);let u=o;c!=null&&(u=gn({inputs:{x:o},backend:n,attrs:{perm:c}}),l=vt(l.length,o.shape.length)),Ht("any",l,u.shape.length);const[h,d]=Ot(u.shape,l),f=q(d),p=Xt(q(h),u.dtype),m=n.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const b=x*f;let w=m[b];for(let y=0;y<f;++y){const v=m[b+y];w=w||v}p[x]=w}c!=null&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,p);if(i){const x=wt(h,a),b=rt({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const Mz={kernelName:Ip,backendName:"cpu",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r}=s;be(o,"argMax");let i=We(r,o.shape);const a=xt(i,o.shape.length);let l=o;const c=[];a!=null&&(l=gn({inputs:{x:o},backend:n,attrs:{perm:a}}),c.push(l),i=vt(i.length,l.shape.length)),i=[i[0]],Ht("argMax",i,l.shape.length);const[u,h]=Ot(l.shape,i),d=q(u),f=Xt(d,"int32"),p=q(h),m=n.data.get(l.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x],w=0;for(let y=0;y<p;++y){const v=m[x+y];v>b&&(b=v,w=y)}f[g]=w}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",f)}const Pz={kernelName:$u,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r}=s;be(o,"argMin");let i=We(r,o.shape);const a=xt(i,o.shape.length);let l=o;const c=[];a!=null&&(l=gn({inputs:{x:o},backend:n,attrs:{perm:a}}),c.push(l),i=vt(i.length,l.shape.length)),i=[i[0]],Ht("argMin",i,l.shape.length);const[u,h]=Ot(l.shape,i),d=q(u),f=Xt(d,"int32"),p=q(h),m=n.data.get(l.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x],w=0;for(let y=0;y<p;++y){const v=m[x+y];v<b&&(b=v,w=y)}f[g]=w}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",f)}const zz={kernelName:ku,backendName:"cpu",kernelFunc:Bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz=Qe(Sa,t=>Math.asin(t)),Vz={kernelName:Sa,backendName:"cpu",kernelFunc:Wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz=Qe(Na,t=>Math.asinh(t)),Gz={kernelName:Na,backendName:"cpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hz=Qe(Ta,t=>Math.atan(t)),jz={kernelName:Ta,backendName:"cpu",kernelFunc:Hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kz=Ct((t,e)=>Math.atan2(t,e)),qz=Mt(Ra,Kz),Xz={kernelName:Ra,backendName:"cpu",kernelFunc:qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yz=Qe(Ea,t=>Math.atanh(t)),Zz={kernelName:Ea,backendName:"cpu",kernelFunc:Yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tx(t,e,n,s,o,r){const i=o.strideHeight,a=o.strideWidth,l=o.dilationHeight,c=o.dilationWidth,u=o.effectiveFilterHeight,h=o.effectiveFilterWidth,d=o.padInfo.top,f=o.padInfo.left,p=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ze(o.outShape,n),g=m.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let y=0;y<o.batchSize;++y){const v=y*x,I=y*s[0];for(let C=0;C<o.inChannels;++C)for(let k=0;k<o.outHeight;++k){const N=k*i-d,T=Math.max(0,N),A=Math.min(o.inHeight,u+N),L=v+k*b;for(let z=0;z<o.outWidth;++z){const U=z*a-f,V=Math.max(0,U),B=Math.min(o.inWidth,h+U);let j=p,P=0,Y=0;for(let J=T;J<A;J+=l){const oe=I+J*s[1];for(let ie=V;ie<B;ie+=c){const de=oe+ie*s[2],ce=t[de+C];r==="max"&&ce>j?j=ce:r==="avg"&&(P+=ce,Y++)}if(isNaN(j))break}const te=L+z*w+C;g[te]=r==="avg"?P/Y:j}}}return m}function N$(t,e,n,s,o=!1,r=!1){const i=ze(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,f=s.padInfo.top,p=s.padInfo.left,m=ze(e,n,t);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let b=0;b<s.outHeight;++b){const w=b*a-f;let y=w;for(;y<0;)y+=c;const v=Math.min(s.inHeight,h+w);for(let I=0;I<s.outWidth;++I){const C=I*l-p;let k=C;for(;k<0;)k+=u;const N=Math.min(s.inWidth,d+C);let T=Number.NEGATIVE_INFINITY,A=-1;for(let L=y;L<v;L+=c){const z=L-w;for(let U=k;U<N;U+=u){const V=U-C,B=m.get(g,L,U,x);B>T&&(T=B,o?A=r?((g*s.inHeight+L)*s.inWidth+U)*s.inChannels+x:(L*s.inWidth+U)*s.inChannels+x:A=z*d+V)}}i.set(A,g,b,I,x)}}return i}function T$(t,e,n,s,o,r){const i=o.strideDepth,a=o.strideHeight,l=o.strideWidth,c=o.dilationDepth,u=o.dilationHeight,h=o.dilationWidth,d=o.effectiveFilterDepth,f=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=ze(o.outShape,n),y=w.values,v=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[2]*o.outShape[3]*o.outShape[4],C=o.outShape[3]*o.outShape[4],k=o.outShape[4];for(let N=0;N<o.batchSize;++N){const T=N*v,A=N*s[0];for(let L=0;L<o.inChannels;++L)for(let z=0;z<o.outDepth;++z){const U=z*i-m;let V=U;for(;V<0;)V+=c;const B=Math.min(o.inDepth,d+U),j=T+z*I;for(let P=0;P<o.outHeight;++P){const Y=P*a-g;let te=Y;for(;te<0;)te+=u;const J=Math.min(o.inHeight,f+Y),oe=j+P*C;for(let ie=0;ie<o.outWidth;++ie){const de=ie*l-x;let ce=de;for(;ce<0;)ce+=h;const ue=Math.min(o.inWidth,p+de),xe=oe+ie*k;let Ne=b,$e=0,De=0;for(let E=V;E<B;E+=c){const R=A+E*s[1];for(let G=te;G<J;G+=u){const Z=R+G*s[2];for(let X=ce;X<ue;X+=h){const Q=Z+X*s[3],le=t[Q+L];if(r==="max"&&le>Ne?Ne=le:r==="avg"&&($e+=le,De++),isNaN(Ne))break}if(isNaN(Ne))break}if(isNaN(Ne))break}const Pe=xe+L;y[Pe]=r==="avg"?$e/De:Ne}}}}return w}function Jz(t,e){const n=ze(e.outShape,"int32"),s=e.strideDepth,o=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,f=e.padInfo.top,p=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const b=x*s-d;let w=b;for(;w<0;)w+=i;const y=Math.min(e.inDepth,c+b);for(let v=0;v<e.outHeight;++v){const I=v*o-f;let C=I;for(;C<0;)C+=a;const k=Math.min(e.inHeight,u+I);for(let N=0;N<e.outWidth;++N){const T=N*r-p;let A=T;for(;A<0;)A+=l;const L=Math.min(e.inWidth,h+T);let z=Number.NEGATIVE_INFINITY,U=-1;for(let V=w;V<y;V+=i){const B=V-b;for(let j=C;j<k;j+=a){const P=j-I;for(let Y=A;Y<L;Y+=l){const te=Y-T,J=t.get(m,V,j,Y,g);J>=z&&(z=J,U=B*u*h+P*u+te)}}}n.set(U,m,x,v,N,g)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e;be(o,"avgPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;$(Yt(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=ns(o.shape,r,i,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Ye(u.inShape,u.outShape))h=Us({inputs:{x:o},backend:n});else{const d=n.data.get(o.dataId).values,f=Se(o.shape),p=tx(d,o.shape,o.dtype,f,u,"avg");h=n.makeTensorInfo(u.outShape,o.dtype,p.values)}return h}const eW={kernelName:Su,backendName:"cpu",kernelFunc:Qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;be(o,"avgPool3d");const u=Qs(o.shape,r,i,1,a,l,c),h=n.data.get(o.dataId).values,d=T$(h,o.shape,o.dtype,Se(o.shape),u,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const nW={kernelName:Nu,backendName:"cpu",kernelFunc:tW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;be([o,r],"avgPool3DGrad");const u=Qs(r.shape,i,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,m=u.filterHeight,g=u.filterWidth,x=u.dilationDepth,b=u.dilationHeight,w=u.dilationWidth,y=u.effectiveFilterDepth,v=u.effectiveFilterHeight,I=u.effectiveFilterWidth,C=y-1-u.padInfo.front,k=I-1-u.padInfo.left,N=v-1-u.padInfo.top,T=ze(r.shape,"float32"),A=1/(p*m*g),L=n.bufferSync(o);for(let z=0;z<u.batchSize;++z)for(let U=0;U<u.inChannels;++U)for(let V=0;V<u.inDepth;++V)for(let B=0;B<u.inHeight;++B)for(let j=0;j<u.inWidth;++j){const P=V-C,Y=B-N,te=j-k;let J=0;for(let oe=0;oe<y;oe+=x){const ie=(P+oe)/h;if(!(ie<0||ie>=u.outDepth||Math.floor(ie)!==ie))for(let de=0;de<v;de+=b){const ce=(Y+de)/d;if(!(ce<0||ce>=u.outHeight||Math.floor(ce)!==ce))for(let ue=0;ue<I;ue+=w){const xe=(te+ue)/f;if(xe<0||xe>=u.outWidth||Math.floor(xe)!==xe)continue;J+=L.get(z,ie,ce,xe,U)}}}T.set(J*A,z,V,B,j,U)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const oW={kernelName:$p,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r}=e,i=r;be([o,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=ns(i.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,x=u.effectiveFilterHeight,b=u.effectiveFilterWidth,w=b-1-u.padInfo.left,y=x-1-u.padInfo.top,v=ze(i.shape,"float32"),I=1/(f*p),C=n.data.get(o.dataId).values,k=ze(o.shape,"float32",C);for(let N=0;N<u.batchSize;++N)for(let T=0;T<u.inChannels;++T)for(let A=0;A<u.inHeight;++A)for(let L=0;L<u.inWidth;++L){const z=A-y,U=L-w;let V=0;for(let B=0;B<x;B+=m){const j=(z+B)/h;if(!(j<0||j>=u.outHeight||Math.floor(j)!==j))for(let P=0;P<b;P+=g){const Y=(U+P)/d;if(Y<0||Y>=u.outWidth||Math.floor(Y)!==Y)continue;V+=k.get(N,j,Y,T)}}v.set(V*I,N,A,L,T)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const iW={kernelName:Cp,backendName:"cpu",kernelFunc:rW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,scale:r,offset:i,mean:a,variance:l}=e;$(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([o,a,l,r,i],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,d=n.data.get(l.dataId).values,f=r?n.data.get(r.dataId).values:new Float32Array([1]),p=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=p.length,x=f.length,b=d.length,w=h.length;let y=0,v=0,I=0,C=0;for(let k=0;k<u.length;++k)m[k]=p[y++]+(u[k]-h[v++])*f[I++]/Math.sqrt(d[C++]+c),y>=g&&(y=0),v>=w&&(v=0),I>=x&&(I=0),C>=b&&(C=0);return n.makeTensorInfo(o.shape,o.dtype,m)}const lW={kernelName:zu,backendName:"cpu",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{blockShape:r,crops:i}=s;be([o],"batchToSpaceND");const a=r.reduce((x,b)=>x*b),l=Nl(o.shape,r,a),c=Tl(l.length,r.length),u=El(o.shape,r,a),h=ag(i,r.length),d=lg(u,i,r.length),f=rt({inputs:{x:o},backend:n,attrs:{shape:l}}),p=gn({inputs:{x:f},backend:n,attrs:{perm:c}}),m=rt({inputs:{x:p},backend:n,attrs:{shape:u}}),g=Cr({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}const uW={kernelName:Eu,backendName:"cpu",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,weights:r}=e,{size:i}=s,a=n.data.get(o.dataId).values,l=n.data.get(r.dataId).values,c=Yg(a,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}const dW={kernelName:kp,backendName:"cpu",kernelFunc:hW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(t){const{inputs:e,backend:n}=t,{s0:s,s1:o}=e,r=n.data.get(s.dataId).values,i=n.data.get(o.dataId).values,a=Fe(Array.from(r),Array.from(i));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const pW={kernelName:m1,backendName:"cpu",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW=Qe(Fa,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),gW={kernelName:Fa,backendName:"cpu",kernelFunc:mW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW=t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(q(e.shape)),o=n.data.get(e.dataId),r=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];s[c]=Math.hypot(u,h)}return n.makeOutput(s,e.shape,"float32")},bW={kernelName:Ru,backendName:"cpu",kernelFunc:xW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(t){const{inputs:e,backend:n}=t,{input:s}=e,o=n.data.get(s.dataId).complexTensorInfos.imag,r=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,r)}const yW={kernelName:zp,backendName:"cpu",kernelFunc:fi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(t){const{inputs:e,backend:n,attrs:s}=t,{axis:o}=s,r=We(o,e[0].shape)[0],i=e.map(m=>m.shape);og(i,r);let a=Ls(e.map(m=>m.shape),r);if(q(a)===0)return n.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>q(m.shape)>0);if(l.length===1)return Us({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){const m=l.map(y=>Ir({inputs:{input:y},backend:n})),g=l.map(y=>fi({inputs:{input:y},backend:n})),x=pi({inputs:m,backend:n,attrs:{axis:r}}),b=pi({inputs:g,backend:n,attrs:{axis:r}}),w=vn({inputs:{real:x,imag:b},backend:n});return m.forEach(y=>n.disposeIntermediateTensorInfo(y)),g.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),w}const c=l.map(m=>{const g=q(m.shape.slice(r));return rt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));a=Ls(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=MC(u,a,e[0].dtype,h),f=Ls(l.map(m=>m.shape),r),p=n.makeTensorInfo(f,e[0].dtype,d);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),p}const wW={kernelName:Du,backendName:"cpu",kernelFunc:pi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;be([o,r],"conv2d");const h=eo(l),d=Gt(o.shape,r.shape,i,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",y=new Kt(d.outShape,o.dtype),v=Se(o.shape),I=Se(r.shape),C=v[0],k=w?v[1]:v[2],N=w?v[2]:1,T=w?1:v[1],A=y.strides[0],L=w?y.strides[1]:y.strides[2],z=w?y.strides[2]:1,U=w?1:y.strides[1],V=n.data.get(o.dataId).values,B=n.data.get(r.dataId).values,j=y.values;for(let P=0;P<d.batchSize;++P){const Y=P*C,te=P*A;for(let J=0;J<d.outHeight;++J){const oe=te+J*L,ie=J*d.strideHeight-b;for(let de=0;de<f;++de){const ce=ie+de*m;if(ce<0||ce>=d.inHeight)continue;const ue=de*I[0],xe=Y+ce*k;for(let Ne=0;Ne<d.outWidth;++Ne){const $e=oe+Ne*z,De=Ne*d.strideWidth-x;for(let Pe=0;Pe<p;++Pe){const E=De+Pe*g;if(E<0||E>=d.inWidth)continue;const R=ue+Pe*I[1],G=xe+E*N;let Z=R;for(let X=0;X<d.inChannels;++X){const Q=V[G+X*T];for(let le=0;le<d.outChannels;++le)j[$e+le*U]+=Q*B[Z+le];Z+=d.outChannels}}}}}}return n.makeTensorInfo(y.shape,y.dtype,j)}const vW={kernelName:Au,backendName:"cpu",kernelFunc:E$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,dy:r}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;be([o,r],"conv2dBackpropFilter");const h=eo(l),d=Gt(o.shape,u,i,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",b=new Kt(d.filterShape,"float32"),w=d.padInfo.left,y=d.padInfo.top,v=n.data.get(o.dataId).values,I=n.data.get(r.dataId).values,C=new Kt(o.shape,o.dtype,v),k=new Kt(r.shape,r.dtype,I);for(let N=0;N<m;++N){const T=Math.max(0,Math.ceil((y-N)/f)),A=Math.min(d.outHeight,(d.inHeight+y-N)/f);for(let L=0;L<g;++L){const z=Math.max(0,Math.ceil((w-L)/p)),U=Math.min(d.outWidth,(d.inWidth+w-L)/p);for(let V=0;V<d.inChannels;++V)for(let B=0;B<d.outChannels;++B){let j=0;for(let P=0;P<d.batchSize;++P)for(let Y=T;Y<A;++Y){const te=N+Y*f-y;for(let J=z;J<U;++J){const oe=L+J*p-w;x?j+=C.get(P,te,oe,V)*k.get(P,Y,J,B):j+=C.get(P,V,te,oe)*k.get(P,B,Y,J)}}b.set(j,N,L,V,B)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const CW={kernelName:Np,backendName:"cpu",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,filter:r}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;be([o,r],"conv2dBackpropInput");const h=Se(r.shape),d=Se(o.shape);let f=eo(c);const p=Gt(i,r.shape,a,1,l,u,!1,f),m=new Kt(p.inShape,"float32"),g=m.values,x=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,[w,y,v]=h,{batchSize:I,filterHeight:C,filterWidth:k,inChannels:N,inHeight:T,inWidth:A,outChannels:L,outHeight:z,outWidth:U,strideHeight:V,strideWidth:B}=p;f=p.dataFormat;const j=C-1-p.padInfo.top,P=k-1-p.padInfo.left,Y=f==="channelsLast",te=m.strides[0],J=Y?m.strides[1]:m.strides[2],oe=Y?m.strides[2]:1,ie=Y?1:m.strides[1],de=d[0],ce=Y?d[1]:d[2],ue=Y?d[2]:1,xe=Y?1:d[1];for(let Ne=0;Ne<I;++Ne)for(let $e=0;$e<N;++$e)for(let De=0;De<T;++De){const Pe=De-j,E=Math.max(0,Math.ceil(Pe/V)),R=Math.min(z,(C+Pe)/V);for(let G=0;G<A;++G){const Z=G-P,X=Math.max(0,Math.ceil(Z/B)),Q=Math.min(U,(k+Z)/B);let le=0;for(let re=E;re<R;++re){const ne=re*V-Pe;for(let ge=X;ge<Q;++ge){const me=ge*B-Z,ye=de*Ne+ce*re+ue*ge,Te=w*(C-1-ne)+y*(k-1-me)+v*$e;for(let Ae=0;Ae<L;++Ae){const He=x[ye+xe*Ae],Ve=b[Te+Ae];le+=He*Ve}}}const ae=te*Ne+J*De+oe*G+ie*$e;g[ae]=le}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const kW={kernelName:Fu,backendName:"cpu",kernelFunc:$W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l}=s;be([o,r],"conv3d");const c=No(o.shape,r.shape,i,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:m,padInfo:g}=c,x=g.front,b=g.left,w=g.top,y=new Kt(c.outShape,o.dtype),v=n.data.get(o.dataId).values,I=n.data.get(r.dataId).values,C=y.values,k=Se(o.shape),N=Se(r.shape);for(let T=0;T<c.batchSize;++T){const A=T*k[0],L=T*y.strides[0];for(let z=0;z<c.outDepth;++z){const U=L+z*y.strides[1],V=z*c.strideDepth-x;for(let B=0;B<u;++B){const j=V+B*f;if(j<0||j>=c.inDepth)continue;const P=B*N[0],Y=A+j*k[1];for(let te=0;te<c.outHeight;++te){const J=U+te*y.strides[2],oe=te*c.strideHeight-w;for(let ie=0;ie<h;++ie){const de=oe+ie*p;if(de<0||de>=c.inHeight)continue;const ce=P+ie*N[1],ue=Y+de*k[2];for(let xe=0;xe<c.outWidth;++xe){const Ne=J+xe*c.outChannels,$e=xe*c.strideWidth-b;for(let De=0;De<d;++De){const Pe=$e+De*m;if(Pe<0||Pe>=c.inWidth)continue;const E=ce+De*N[2],R=ue+Pe*c.inChannels;let G=E;for(let Z=0;Z<c.inChannels;++Z){const X=v[R+Z];for(let Q=0;Q<c.outChannels;++Q)C[Ne+Q]+=X*I[G+Q];G+=c.outChannels}}}}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const NW={kernelName:_u,backendName:"cpu",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,dy:r}=e,{strides:i,pad:a,filterShape:l}=s;be([o,r],"conv3dBackpropFilterV2");const c=Se(o.shape),u=Se(r.shape),h=No(o.shape,l,i,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=new Kt(h.filterShape,"float32"),w=b.values,[y,v,I,C]=b.strides,k=n.data.get(r.dataId).values,[N,T,A,L]=u,z=n.data.get(o.dataId).values,[U,V,B,j]=c,P=h.padInfo.front,Y=h.padInfo.left,te=h.padInfo.top;for(let J=0;J<m;++J){const oe=Math.max(0,Math.ceil((P-J)/d)),ie=Math.min(h.outDepth,(h.inDepth+P-J)/d),de=J*y;for(let ce=0;ce<g;++ce){const ue=Math.max(0,Math.ceil((te-ce)/f)),xe=Math.min(h.outHeight,(h.inHeight+te-ce)/f),Ne=ce*v+de;for(let $e=0;$e<x;++$e){const De=Math.max(0,Math.ceil((Y-$e)/p)),Pe=Math.min(h.outWidth,(h.inWidth+Y-$e)/p),E=$e*I+Ne;for(let R=0;R<h.inChannels;++R){const G=R*C+E;for(let Z=0;Z<h.outChannels;++Z){let X=0;for(let Q=0;Q<h.batchSize;++Q){const le=Q*U,ae=Q*N;for(let re=oe;re<ie;++re){const ge=(J+re*d-P)*V+le,me=re*T+ae;for(let ye=ue;ye<xe;++ye){const Ae=(ce+ye*f-te)*B+ge,He=ye*A+me;for(let Ve=De;Ve<Pe;++Ve){const cn=($e+Ve*p-Y)*j+Ae,Is=Ve*L+He;X+=z[cn+R]*k[Is+Z]}}}}w[G+Z]=X}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const EW={kernelName:Tp,backendName:"cpu",kernelFunc:TW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,filter:r}=e,{pad:i,strides:a,inputShape:l}=s;be([o],"conv3dBackpropInputV2");const c=Se(o.shape),u=Se(r.shape),h=No(l,r.shape,a,1,i),d=new Kt(h.inShape,"float32"),f=d.values,[p,m,g,x]=d.strides,b=n.data.get(o.dataId).values,[w,y,v,I]=c,C=n.data.get(r.dataId).values,[k,N,T,A]=u,{batchSize:L,filterDepth:z,filterHeight:U,filterWidth:V,inChannels:B,inDepth:j,inHeight:P,inWidth:Y,outChannels:te,outDepth:J,outHeight:oe,outWidth:ie,strideDepth:de,strideHeight:ce,strideWidth:ue}=h,xe=z-1-h.padInfo.front,Ne=U-1-h.padInfo.top,$e=V-1-h.padInfo.left;for(let De=0;De<L;++De)for(let Pe=0;Pe<B;++Pe)for(let E=0;E<j;++E){const R=E-xe,G=Math.max(0,Math.ceil(R/de)),Z=Math.min(J,(z+R)/de);for(let X=0;X<P;++X){const Q=X-Ne,le=Math.max(0,Math.ceil(Q/ce)),ae=Math.min(oe,(U+Q)/ce);for(let re=0;re<Y;++re){const ne=re-$e,ge=Math.max(0,Math.ceil(ne/ue)),me=Math.min(ie,(V+ne)/ue);let ye=0;for(let Te=G;Te<Z;++Te){const Ae=Te*de-R;for(let He=le;He<ae;++He){const Ve=He*ce-Q;for(let at=ge;at<me;++at){const cn=at*ue-ne,Is=w*De+y*Te+v*He+I*at,Kl=k*(z-1-Ae)+N*(U-1-Ve)+T*(V-1-cn)+A*Pe;for(let Cs=0;Cs<te;++Cs){const ql=b[Is+Cs],un=C[Kl+Cs];ye+=ql*un}}}}f[p*De+m*E+g*X+x*re+Pe]=ye}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const DW={kernelName:Ep,backendName:"cpu",kernelFunc:RW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AW=Qe(_a,t=>Math.cos(t)),FW={kernelName:_a,backendName:"cpu",kernelFunc:AW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=Qe(Oa,t=>Math.cosh(t)),OW={kernelName:Oa,backendName:"cpu",kernelFunc:_W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(t){const{inputs:e,backend:n,attrs:s}=t,{image:o,boxes:r,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,[u,h,d,f]=o.shape,p=r.shape[0],[m,g]=a,x=ze([p,m,g,f],"float32"),b=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,y=n.data.get(o.dataId).values,v=Se(o.shape),I=Se(x.shape);for(let C=0;C<p;C++){const k=C*4,N=b[k],T=b[k+1],A=b[k+2],L=b[k+3],z=w[C];if(z>=u)continue;const U=m>1?(A-N)*(h-1)/(m-1):0,V=g>1?(L-T)*(d-1)/(g-1):0;for(let B=0;B<m;B++){const j=m>1?N*(h-1)+B*U:.5*(N+A)*(h-1);if(j<0||j>h-1){for(let P=0;P<g;P++)for(let Y=0;Y<f;Y++){const te=Y+P*I[2]+B*I[1]+C*I[0];x.values[te]=c}continue}if(l==="bilinear"){const P=Math.floor(j),Y=Math.ceil(j),te=j-P;for(let J=0;J<g;J++){const oe=g>1?T*(d-1)+J*V:.5*(T+L)*(d-1);if(oe<0||oe>d-1){for(let ue=0;ue<f;ue++){const xe=ue+J*I[2]+B*I[1]+C*I[0];x.values[xe]=c}continue}const ie=Math.floor(oe),de=Math.ceil(oe),ce=oe-ie;for(let ue=0;ue<f;ue++){let xe=ue+ie*v[2]+P*v[1]+z*v[0];const Ne=y[xe];xe=ue+de*v[2]+P*v[1]+z*v[0];const $e=y[xe];xe=ue+ie*v[2]+Y*v[1]+z*v[0];const De=y[xe];xe=ue+de*v[2]+Y*v[1]+z*v[0];const Pe=y[xe],E=Ne+($e-Ne)*ce,R=De+(Pe-De)*ce;xe=ue+J*I[2]+B*I[1]+C*I[0],x.values[xe]=E+(R-E)*te}}}else for(let P=0;P<g;++P){const Y=g>1?T*(d-1)+P*V:.5*(T+L)*(d-1);if(Y<0||Y>d-1){for(let oe=0;oe<f;oe++){const ie=oe+P*I[2]+B*I[1]+C*I[0];x.values[ie]=c}continue}const te=Math.round(Y),J=Math.round(j);for(let oe=0;oe<f;oe++){const ie=oe+te*v[2]+J*v[1]+z*v[0],de=oe+P*I[2]+B*I[1]+C*I[0];x.values[de]=y[ie]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const LW={kernelName:Dp,backendName:"cpu",kernelFunc:MW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;be(o,"cumprod");const l=xt([r],o.shape.length);let c=o;l!=null&&(c=gn({inputs:{x:o},backend:n,attrs:{perm:l}}));const u=vt(1,o.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=$n(c.dtype,"int32"),d=bp(q(c.shape),h),f=n.data.get(c.dataId).values,p=c.shape[c.shape.length-1],m=a?(x,b)=>x+p-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=p)for(let b=0;b<p;b++){const w=m(x,b);if(b===0)d[w]=i?1:f[w];else{const y=m(x,b-1);d[w]=i?f[y]*d[y]:f[w]*d[y]}}const g=n.makeTensorInfo(c.shape,h,d);if(l!=null){const x=To(l),b=gn({inputs:{x:g},backend:n,attrs:{perm:x}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),b}return g}const BW={kernelName:Rp,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;be(o,"cumsum");const l=xt([r],o.shape.length);let c=o;l!=null&&(c=gn({inputs:{x:o},backend:n,attrs:{perm:l}}));const u=vt(1,o.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=$n(c.dtype,"int32"),d=Xt(q(c.shape),h),f=n.data.get(c.dataId).values,p=c.shape[c.shape.length-1],m=a?(x,b)=>x+p-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=p)for(let b=0;b<p;b++){const w=m(x,b);if(b===0)d[w]=i?0:f[w];else{const y=m(x,b-1);d[w]=i?f[y]+d[y]:f[w]+d[y]}}const g=n.makeTensorInfo(c.shape,h,d);if(l!=null){const x=To(l),b=gn({inputs:{x:g},backend:n,attrs:{perm:x}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),b}return g}const WW={kernelName:Ou,backendName:"cpu",kernelFunc:zW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,weights:r}=e,{size:i,binaryOutput:a}=s;if(o.shape.length===1){const l=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values,u=Yg(l,c,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}else if(o.shape.length===2){const l=n.bufferSync(o),c=n.bufferSync(r),u=_C(l,c,i,a);return n.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const UW={kernelName:g1,backendName:"cpu",kernelFunc:VW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{blockSize:r,dataFormat:i}=s;$(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=o.shape[0],l=o.shape[1],c=o.shape[2],u=o.shape[3],h=l*r,d=c*r,f=u/(r*r),p=n.data.get(o.dataId).values,m=new Float32Array(a*h*d*f);let g=0;for(let x=0;x<a;++x)for(let b=0;b<h;++b){const w=Math.floor(b/r),y=b%r;for(let v=0;v<d;++v){const I=Math.floor(v/r),C=v%r,k=(y*r+C)*f;for(let N=0;N<f;++N){const A=N+k+u*(I+c*(w+l*x));m[g++]=p[A]}}}return n.makeTensorInfo([a,h,d,f],o.dtype,m)}const HW={kernelName:Ap,backendName:"cpu",kernelFunc:GW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;be([o,r],"depthwiseConv2DNative");const u=Se(o.shape),h=Se(r.shape);let d=l;d==null&&(d=[1,1]),$(Yt(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const f=Gt(o.shape,r.shape,i,d,a,c,!0),{filterHeight:p,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:b}=f,w=b.left,y=b.top,v=f.outChannels/f.inChannels,I=new Kt(f.outShape,o.dtype),C=n.data.get(o.dataId).values,k=n.data.get(r.dataId).values,N=I.values;for(let T=0;T<f.batchSize;++T){const A=T*u[0],L=T*I.strides[0];for(let z=0;z<f.outHeight;++z){const U=L+z*I.strides[1],V=z*f.strideHeight-y;for(let B=0;B<p;++B){const j=V+B*g;if(j<0||j>=f.inHeight)continue;const P=B*h[0],Y=A+j*u[1];for(let te=0;te<f.outWidth;++te){const J=U+te*I.strides[2],oe=te*f.strideWidth-w;for(let ie=0;ie<m;++ie){const de=oe+ie*x;if(de<0||de>=f.inWidth)continue;const ce=P+ie*h[1],ue=Y+de*f.inChannels;let xe=J,Ne=ce;for(let $e=0;$e<f.inChannels;++$e){const De=C[ue+$e];for(let Pe=0;Pe<v;++Pe)N[xe+Pe]+=De*k[Ne+Pe];xe+=v,Ne+=v}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const jW={kernelName:Mu,backendName:"cpu",kernelFunc:R$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,dy:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;be([o,r],"depthwiseConv2dNativeBackpropFilter");const h=Gt(o.shape,u,i,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:m}=h,g=new Kt(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,y=n.data.get(o.dataId).values,v=new Kt(o.shape,o.dtype,y),I=n.data.get(r.dataId).values,C=new Kt(r.shape,r.dtype,I);for(let k=0;k<p;++k){const N=Math.max(0,Math.ceil((b-k)/d)),T=Math.min(h.outHeight,(h.inHeight+b-k)/d);for(let A=0;A<m;++A){const L=Math.max(0,Math.ceil((x-A)/f)),z=Math.min(h.outWidth,(h.inWidth+x-A)/f);for(let U=0;U<h.outChannels;++U){const V=Math.trunc(U/w),B=U%w;let j=0;for(let P=0;P<h.batchSize;++P)for(let Y=N;Y<T;++Y){const te=k+Y*d-b;for(let J=L;J<z;++J){const oe=A+J*f-x;j+=v.get(P,te,oe,V)*C.get(P,Y,J,U)}}g.set(j,k,A,V,B)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const qW={kernelName:Fp,backendName:"cpu",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,filter:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;be([o,r],"depthwiseConv2DNativeBackpropInput");const h=Se(o.shape),d=Se(r.shape),f=Gt(u,r.shape,i,a,l,c,!0),p=new Kt(f.inShape,"float32"),m=p.values,[g,x,b]=p.strides,w=n.data.get(o.dataId).values,[y,v,I]=h,C=n.data.get(r.dataId).values,[k,N,T]=d,{batchSize:A,filterHeight:L,filterWidth:z,inChannels:U,inHeight:V,inWidth:B,outChannels:j,outHeight:P,outWidth:Y,strideHeight:te,strideWidth:J}=f,oe=L-1-f.padInfo.top,ie=z-1-f.padInfo.left,de=j/U;for(let ce=0;ce<A;++ce)for(let ue=0;ue<U;++ue)for(let xe=0;xe<V;++xe){const Ne=xe-oe,$e=Math.max(0,Math.ceil(Ne/te)),De=Math.min(P,(L+Ne)/te);for(let Pe=0;Pe<B;++Pe){const E=Pe-ie,R=Math.max(0,Math.ceil(E/J)),G=Math.min(Y,(z+E)/J);let Z=0;for(let X=$e;X<De;++X){const Q=X*te-Ne;for(let le=R;le<G;++le){const ae=le*J-E,re=y*ce+v*X+I*le,ne=k*(L-1-Q)+N*(z-1-ae)+T*ue;for(let ge=0;ge<de;++ge){const me=ue*de+ge,ye=w[re+me],Te=C[ne+ge];Z+=ye*Te}}}m[g*ce+x*xe+b*Pe+ue]=Z}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const YW={kernelName:_p,backendName:"cpu",kernelFunc:XW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(t){const{inputs:e,backend:n}=t,{x:s}=e,o=q(s.shape),r=n.data.get(s.dataId).values,i=ze([o,o],s.dtype),a=i.values;for(let c=0;c<r.length;c++)a[c*o+c]=r[c];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}const JW={kernelName:x1,backendName:"cpu",kernelFunc:ZW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW={kernelName:Lu,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:o}=t,{strides:r,pad:i,dilations:a}=n,l=e,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(o.dataId).values,d=o.shape.length,{batchSize:f,inHeight:p,inWidth:m,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:y,strideWidth:v,filterHeight:I,filterWidth:C,dilationHeight:k,dilationWidth:N,outShape:T}=Il(s.shape,o.shape,r,i,"NHWC",a),A=q(T),L=T.length,z=Ft(s.dtype,A);for(let V=0;V<f;++V)for(let B=0;B<x;++B){const j=B*y-w.top;for(let P=0;P<b;++P){const Y=P*v-w.left;for(let te=0;te<g;++te){let J=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<I;++ie){const de=j+ie*k;if(de>=0&&de<p)for(let ce=0;ce<C;++ce){const ue=Y+ce*N;if(ue>=0&&ue<m){const xe=Os([V,de,ue,te],u,Se(s.shape)),Ne=Os([ie,ce,te],d,Se(o.shape)),$e=c[xe]+h[Ne];$e>J&&(J=$e)}}}const oe=Os([V,B,P,te],L,Se(T));z[oe]=J}}}return{dataId:l.write(Nr(z,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV={kernelName:of,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:o,dy:r}=t,{strides:i,pad:a,dilations:l}=n,c=e,u=ms(s.shape,c.data.get(s.dataId).values),h=ms(o.shape,c.data.get(o.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:I,dilationHeight:C,dilationWidth:k,outShape:N}=Il(s.shape,o.shape,i,a,"NHWC",l);$(r.rank===N.length,()=>`Error in ${of}, dy must have the same rank as output ${N.length}, but got ${r.rank}`);const T=ms(N,c.data.get(r.dataId).values),A=u1(o.shape,o.dtype);for(let z=0;z<d;++z)for(let U=0;U<g;++U){const V=U*w-b.top;for(let B=0;B<x;++B){const j=B*y-b.left;for(let P=0;P<m;++P){let Y=Number.MIN_SAFE_INTEGER,te=0,J=0;for(let oe=0;oe<v;++oe){const ie=V+oe*C;if(ie>=0&&ie<f)for(let de=0;de<I;++de){const ce=j+de*k;if(ce>=0&&ce<p){const ue=u[z][ie][ce][P]+h[oe][de][P];ue>Y&&(Y=ue,te=oe,J=de)}}}A[te][J][P]+=T[z][U][B][P]}}}return{dataId:c.write(Nr(A,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV={kernelName:sf,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:o,dy:r}=t,{strides:i,pad:a,dilations:l}=n,c=e,u=ms(s.shape,c.data.get(s.dataId).values),h=ms(o.shape,c.data.get(o.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:I,dilationHeight:C,dilationWidth:k,outShape:N}=Il(s.shape,o.shape,i,a,"NHWC",l);$(r.rank===N.length,()=>`Error in ${sf}, dy must have the same rank as output ${N.length}, but got ${r.rank}`);const T=ms(N,c.data.get(r.dataId).values),A=u1(s.shape,s.dtype);for(let z=0;z<d;++z)for(let U=0;U<g;++U){const V=U*w-b.top;for(let B=0;B<x;++B){const j=B*y-b.left;for(let P=0;P<m;++P){let Y=Number.MIN_SAFE_INTEGER,te=V<0?0:V,J=j<0?0:j;for(let oe=0;oe<v;++oe){const ie=V+oe*C;if(ie>=0&&ie<f)for(let de=0;de<I;++de){const ce=j+de*k;if(ce>=0&&ce<p){const ue=u[z][ie][ce][P]+h[oe][de][P];ue>Y&&(Y=ue,te=ie,J=ce)}}}A[z][te][J][P]+=T[z][U][B][P]}}}return{dataId:c.write(Nr(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s;be(o,"sum");let a;o.dtype==="bool"?a=$o({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):a=Us({inputs:{x:o},backend:n});const l=a.shape.length,c=We(r,a.shape),u=xt(c,l);let h=c,d=a;u!=null&&(d=gn({inputs:{x:a},backend:n,attrs:{perm:u}}),h=vt(h.length,l)),Ht("sum",h,d.shape.length);const[f,p]=Ot(d.shape,h),m=$n(d.dtype,"int32");let g=Qc(n,f,m);const x=q(p),b=n.data.get(g.dataId).values,w=n.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const v=y*x;let I=0;for(let C=0;C<x;++C)I+=w[v+C];b[y]=I}if(i){const y=wt(g.shape,c),v=g;g=rt({inputs:{x:g},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(a),u!=null&&n.disposeIntermediateTensorInfo(d),g}const nV={kernelName:gh,backendName:"cpu",kernelFunc:Bl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(t){const{inputs:e,backend:n,attrs:s}=t,{equation:o}=s,r=e,{allDims:i,summedDims:a,idDims:l}=gg(o,r.length);bg(i.length,l,r);const{path:c,steps:u}=yg(a,l),h=u.length;let d=null,f=i.length;const p=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:b}=xg(f,l[g]);let w;wg(x)?w=r[g]:(w=gn({inputs:{x:r[g]},backend:n,attrs:{perm:x}}),p.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);Ye(w.shape,y)||(w=rt({inputs:{x:w},backend:n,attrs:{shape:y}}),p.push(w)),d===null?d=w:(d=Yh({inputs:{a:w,b:d},backend:n}),p.push(d))}m<h-1&&(c[m]>=0&&(d=Bl({inputs:{x:d},backend:n,attrs:{axis:c[m]-(i.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const oV={kernelName:b1,backendName:"cpu",kernelFunc:sV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(t){const{inputs:e,backend:n}=t,{dy:s,y:o}=e;be([s,o],"eluGrad");const r=new Float32Array(q(o.shape)),i=n.data.get(o.dataId).values,a=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const c=i[l];c>=1?r[l]=a[l]:r[l]=a[l]*(c+1)}return n.makeTensorInfo(o.shape,"float32",r)}const iV={kernelName:Op,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aV=cg,lV=ug,cV=hg,uV=dg,hV=fg,dV=pg,fV=Qe(Pa,t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+aV*n);return e*(1-((((dV*s+hV)*s+uV)*s+cV)*s+lV)*s*Math.exp(-n*n))}),pV={kernelName:Pa,backendName:"cpu",kernelFunc:fV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(t){const{inputs:e,backend:n,attrs:s}=t,{input:o}=e,{dim:r}=s,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&($(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),rt({inputs:{x:o},backend:n,attrs:{shape:a}})}const mV={kernelName:Bu,backendName:"cpu",kernelFunc:nu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV=Ct((t,e)=>t/e),nx=Mt(Ma,gV),Lf={kernelName:Ma,backendName:"cpu",kernelFunc:nx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(t,e,n){const s=t.shape,o=s[0],r=s[1],i=n.data.get(t.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[o,r],u=q(c),h=Ut("float32",u),d=Ut("float32",u);for(let g=0;g<o;g++){const x=Cr({inputs:{x:a},backend:n,attrs:{begin:[g,0],size:[1,r]}}),b=Cr({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,r]}}),w=vn({inputs:{real:x,imag:b},backend:n}),{real:y,imag:v}=xV(w,e,n),I=Zs(y,v);for(let C=0;C<r;C++){const k=mg(I,C);h[g*r+C]=k.real,d[g*r+C]=k.imag}n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w)}const f=n.makeTensorInfo(c,"float32",h),p=n.makeTensorInfo(c,"float32",d),m=vn({inputs:{real:f,imag:p},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),m}function xV(t,e,n){const s=q(t.shape),o=n.data.get(t.dataId),r=n.data.get(o.complexTensorInfos.real.dataId).values,i=n.data.get(o.complexTensorInfos.imag.dataId).values;if(bV(s)){const a=Pf(r,i,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const c=n.makeTensorInfo(l,"float32",a.real),u=n.makeTensorInfo(l,"float32",a.imag),h=n.makeTensorInfo([],"float32",So(s,"float32")),d=Us({inputs:{x:h},backend:n}),f=Lf.kernelFunc({inputs:{a:c,b:h},backend:n}),p=Lf.kernelFunc({inputs:{a:u,b:d},backend:n}),m=n.data.get(f.dataId).values,g=n.data.get(p.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),{real:m,imag:g}}return a}else{const a=Zs(r,i),l=yV(a,s,e);return Qw(l)}}function bV(t){return(t&t-1)===0}function Pf(t,e,n,s,o){if(n===1)return{real:t,imag:e};const r=Zs(t,e),i=n/2,a=ev(r),l=a.real,c=a.imag,u=[l.length],h=o.makeTensorInfo(u,"float32",l),d=o.makeTensorInfo(u,"float32",c),f=vn({inputs:{real:h,imag:d},backend:o}),p=tv(r),m=p.real,g=p.imag,x=[m.length],b=o.makeTensorInfo(x,"float32",m),w=o.makeTensorInfo(x,"float32",g),y=vn({inputs:{real:b,imag:w},backend:o}),v=Pf(l,c,i,s,o),I=v.real,C=v.imag,k=[I.length],N=o.makeTensorInfo(k,"float32",I),T=o.makeTensorInfo(k,"float32",C),A=vn({inputs:{real:N,imag:T},backend:o}),L=Pf(m,g,i,s,o),z=L.real,U=L.imag,V=[z.length],B=o.makeTensorInfo(V,"float32",z),j=o.makeTensorInfo(V,"float32",U),P=vn({inputs:{real:B,imag:j},backend:o}),Y=sv(n,s),te=[Y.real.length],J=o.makeTensorInfo(te,"float32",Y.real),oe=o.makeTensorInfo(te,"float32",Y.imag),ie=vn({inputs:{real:J,imag:oe},backend:o}),de=Yh({inputs:{a:ie,b:P},backend:o}),ce=di({inputs:{a:A,b:de},backend:o}),ue=ex({inputs:{a:A,b:de},backend:o}),xe=Ir({inputs:{input:ce},backend:o}),Ne=Ir({inputs:{input:ue},backend:o}),$e=fi({inputs:{input:ce},backend:o}),De=fi({inputs:{input:ue},backend:o}),Pe=pi({inputs:[xe,Ne],backend:o,attrs:{axis:0}}),E=pi({inputs:[$e,De],backend:o,attrs:{axis:0}}),R=o.data.get(Pe.dataId).values,G=o.data.get(E.dataId).values;return o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(N),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(A),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(de),o.disposeIntermediateTensorInfo(ce),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(xe),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(Ne),o.disposeIntermediateTensorInfo(De),o.disposeIntermediateTensorInfo(Pe),o.disposeIntermediateTensorInfo(E),{real:R,imag:G}}function yV(t,e,n){const s=new Float32Array(e*2);for(let o=0;o<e;o++){let r=0,i=0;for(let a=0;a<e;a++){const l=ov(o*a,e,n),c=mg(t,a);r+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}n&&(r/=e,i/=e),nv(s,r,i,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(t){const{inputs:e,backend:n}=t,{input:s}=e,o=q(s.shape),r=s.shape[s.shape.length-1],i=o/r,a=rt({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=D$(a,!1,n),c=rt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}const vV={kernelName:Mp,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(t){const{backend:e,attrs:n}=t,{shape:s,value:o,dtype:r}=n,i=r||Ca(o),a=Ft(i,q(s));return CV(a,o,i),e.makeTensorInfo(s,i,a)}const IV={kernelName:Lp,backendName:"cpu",kernelFunc:sx};function CV(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $V={kernelName:Pp,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,o=n,r=Ut(s.dtype,q(s.shape)),[i,a,l,c]=s.shape,u=o.data.get(s.dataId).values;for(let d=0;d<i;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const m=p*(l*c);for(let g=0;g<l;g++){const x=g*c;for(let b=0;b<c;b++){const w=Math.round(l-g-1),y=f+m+x+b;let v=u[y];if(w>=0&&w<l){const I=w*c,C=f+m+I+b;v=u[C]}r[y]=v}}}}return{dataId:o.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV=Ct((t,e)=>Math.floor(t/e)),SV=Mt(Va,kV,null,"int32"),NV={kernelName:Va,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s;let m=E$({inputs:{x:o,filter:r},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const x=rt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=di({inputs:{a:m,b:x},backend:n}),n.disposeIntermediateTensorInfo(x)}else m=di({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(f){const g=m;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=rt({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=tu(n,m,f,x,p),n.disposeIntermediateTensorInfo(x)}else m=tu(n,m,f,a,p);n.disposeIntermediateTensorInfo(g)}return m}const EV={kernelName:Fc,backendName:"cpu",kernelFunc:TV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s;let m=R$({inputs:{x:o,filter:r},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;m=di({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(f){const g=m;m=tu(n,m,f,a,p),n.disposeIntermediateTensorInfo(g)}return m}const DV={kernelName:T1,backendName:"cpu",kernelFunc:RV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(t){const{inputs:e,backend:n}=t,{params:s,indices:o}=e,r=q(s.shape),i=o.shape,a=i[i.length-1],[l,c,u,h]=xm(s,o);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(o.dataId).values,f=n.bufferSync(s),p=UC(d,f,s.dtype,c,a,u,h,s.shape,r);return n.makeTensorInfo(l,s.dtype,p.values)}const FV={kernelName:y1,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,indices:r}=e,{axis:i,batchDims:a}=s;be([o,r],"gatherV2");const l=We(i,o.shape)[0],c=n.data.get(r.dataId).values,u=o.shape[l];for(let y=0;y<c.length;++y){const v=c[y];$(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=q(r.shape),f=Ig(o,r,l,h),p=rt({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),m=rt({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),g=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=n.bufferSync(m),b=n.bufferSync(p),w=GC(b,x,g);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(f.outputShape,w.dtype,w.values)}const OV={kernelName:Wu,backendName:"cpu",kernelFunc:_V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(t){const{inputs:e,backend:n}=t,{input:s}=e,o=q(s.shape),r=s.shape[s.shape.length-1],i=o/r,a=rt({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=D$(a,!0,n),c=rt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}const LV={kernelName:Bp,backendName:"cpu",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV=Qe(Ha,t=>Number.isFinite(t)?1:0,"bool"),BV={kernelName:Ha,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV=Qe(ja,t=>Math.abs(t)===1/0?1:0,"bool"),WV={kernelName:ja,backendName:"cpu",kernelFunc:zV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VV=Qe(Ka,t=>Number.isNaN(t)?1:0,"bool"),UV={kernelName:Ka,backendName:"cpu",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(t){const{backend:e,attrs:n}=t,{start:s,stop:o,num:r}=n,i=XC(s,o,r);return e.makeTensorInfo([i.length],"float32",i)}const HV={kernelName:w1,backendName:"cpu",kernelFunc:GV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV=Qe(Xa,t=>Math.log1p(t)),KV={kernelName:Xa,backendName:"cpu",kernelFunc:jV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV=Ct((t,e)=>t&&e),XV=Mt(ju,qV,null,"bool"),YV={kernelName:ju,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV=Qe(Ku,t=>t?0:1,"bool"),JV={kernelName:Ku,backendName:"cpu",kernelFunc:ZV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV=Ct((t,e)=>t||e),e4=Mt(qu,QV,null,"bool"),t4={kernelName:qu,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{depthRadius:r,bias:i,alpha:a,beta:l}=s;be(o,"LRN");const c=o.shape[3],u=c-1,h=n.data.get(o.dataId).values,d=q(o.shape),f=new Float32Array(d);function p(m){const g=m%c;let x=m-g+Math.max(0,g-r);const b=m-g+Math.min(g+r,u);let w=0;for(;x<=b;x++){const y=h[x];w+=y*y}return w}for(let m=0;m<d;m++){const g=p(m),x=h[m]*Math.pow(i+a*g,-l);f[m]=x}return n.makeTensorInfo(o.shape,o.dtype,f)}const s4={kernelName:Xu,backendName:"cpu",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,y:r,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s;be(i,"LRNGrad");const h=q(i.shape),d=i.shape[3],f=n.data.get(i.dataId).values,p=n.data.get(o.dataId).values,m=n.data.get(r.dataId).values,g=new Float32Array(h),x=h;for(let b=0;b<x;b++){const w=b%d,y=b-w+Math.max(0,w-a),v=b-w+Math.min(d,w+a+1);let I=0;for(let C=y;C<v;C++)I+=Math.pow(p[C],2);I=c*I+l;for(let C=y;C<v;C++){let k=-2*c*u*p[C]*m[b]/I;b===C&&(k+=Math.pow(I,-u)),k*=f[b],g[C]+=k}}return n.makeTensorInfo(i.shape,o.dtype,g)}const r4={kernelName:Wp,backendName:"cpu",kernelFunc:o4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{reductionIndices:r,keepDims:i}=s,a=n;let l=o.shape;const c=l.length,u=We(r,l);let h=u;const d=xt(h,c);let f=a.data.get(o.dataId).values;if(d!=null){const y=new Array(c);for(let v=0;v<y.length;v++)y[v]=l[d[v]];f=Jg(f,l,o.dtype,d,y),h=vt(h.length,c),l=y}be(o,"max"),Ht("max",h,c);const[p,m]=Ot(l,h),g=q(m),x=ZC(f,g,p,o.dtype),b=a.write(x,p,o.dtype);let w=p;return i&&(w=wt(p,u)),{dataId:b,shape:w,dtype:o.dtype}}const i4={kernelName:Yu,backendName:"cpu",kernelFunc:A$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e;be(o,"maxPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;$(Yt(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=ns(o.shape,r,i,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Ye(u.inShape,u.outShape))h=Us({inputs:{x:o},backend:n});else{const d=n.data.get(o.dataId).values,f=Se(o.shape),p=tx(d,o.shape,o.dtype,f,u,"max");h=n.makeTensorInfo(u.outShape,o.dtype,p.values)}return h}const l4={kernelName:Zu,backendName:"cpu",kernelFunc:a4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;be(o,"maxPool3d");const u=Qs(o.shape,r,i,1,a,l,c),h=n.data.get(o.dataId).values,d=T$(h,o.shape,o.dtype,Se(o.shape),u,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const u4={kernelName:Ju,backendName:"cpu",kernelFunc:c4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;be([o,r],"maxPool3DGrad");const u=Qs(r.shape,i,a,1,l,c),h=n.bufferSync(r),d=Jz(h,u),f=u.strideDepth,p=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,x=u.dilationHeight,b=u.dilationWidth,w=u.effectiveFilterDepth,y=u.effectiveFilterHeight,v=u.effectiveFilterWidth,I=w-1-u.padInfo.front,C=v-1-u.padInfo.left,k=y-1-u.padInfo.top,N=ze(r.shape,"float32"),T=n.bufferSync(o);for(let A=0;A<u.batchSize;++A)for(let L=0;L<u.inChannels;++L)for(let z=0;z<u.inDepth;++z)for(let U=0;U<u.inHeight;++U)for(let V=0;V<u.inWidth;++V){const B=z-I,j=U-k,P=V-C;let Y=0;for(let te=0;te<w;te+=g){const J=(B+te)/f;if(!(J<0||J>=u.outDepth||Math.floor(J)!==J))for(let oe=0;oe<y;oe+=x){const ie=(j+oe)/p;if(!(ie<0||ie>=u.outHeight||Math.floor(ie)!==ie))for(let de=0;de<v;de+=b){const ce=(P+de)/m;if(ce<0||ce>=u.outWidth||Math.floor(ce)!==ce)continue;const ue=w*y*v-1-d.get(A,J,ie,ce,L),xe=te*y*v+oe*v+de,Ne=ue===xe?1:0;if(Ne===0)continue;Y+=T.get(A,J,ie,ce,L)*Ne}}}N.set(Y,A,z,U,V,L)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const d4={kernelName:Up,backendName:"cpu",kernelFunc:h4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r,output:i}=e,a=r;be([r,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=ns(a.shape,l,c,1,u,h),f=n.data.get(a.dataId).values,p=ze(d.outShape,a.dtype,N$(f,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,y=d.effectiveFilterWidth,v=y-1-d.padInfo.left,I=w-1-d.padInfo.top,C=ze(a.shape,"float32"),k=n.data.get(o.dataId).values,N=ze(o.shape,"float32",k);for(let T=0;T<d.batchSize;++T)for(let A=0;A<d.inChannels;++A)for(let L=0;L<d.inHeight;++L)for(let z=0;z<d.inWidth;++z){const U=L-I,V=z-v;let B=0;for(let j=0;j<w;j+=x){const P=(U+j)/m;if(!(P<0||P>=d.outHeight||Math.floor(P)!==P))for(let Y=0;Y<y;Y+=b){const te=(V+Y)/g;if(te<0||te>=d.outWidth||Math.floor(te)!==te)continue;const J=w*y-1-p.get(T,P,te,A),oe=j*y+Y,ie=J===oe?1:0;if(ie===0)continue;B+=N.get(T,P,te,A)*ie}}C.set(B,T,L,z,A)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const p4={kernelName:Vp,backendName:"cpu",kernelFunc:f4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(t,e,n,s,o){const r=Se(e),i=tx(t,e,n,r,o,"max"),a=N$(t,e,n,o,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4={kernelName:v1,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:o,strides:r,pad:i,includeBatchInIndex:a}=e,l=n;be(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=ns(s.shape,o,r,[1,1],i),[h,d]=m4(c,s.shape,s.dtype,a,u),f=l.write(h,u.outShape,s.dtype),p=l.write(d,u.outShape,s.dtype);return[{dataId:f,shape:u.outShape,dtype:s.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s,a=We(r,o.shape),c=Ot(o.shape,a)[1],u=q(c),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=$o({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});h.push(f);const p=nx({inputs:{a:f,b:d},backend:n});h.push(p);const m=Bl({inputs:{x:p},backend:n,attrs:{axis:r,keepDims:i}});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const b4={kernelName:Qu,backendName:"cpu",kernelFunc:x4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s;be(o,"min");const a=We(r,o.shape);let l=a;const c=xt(l,o.shape.length);let u=o;c!=null&&(u=gn({inputs:{x:o},backend:n,attrs:{perm:c}}),l=vt(l.length,o.shape.length)),Ht("min",l,u.shape.length);const[h,d]=Ot(u.shape,l),f=q(d),p=Xt(q(h),u.dtype),m=n.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const b=x*f;let w=m[b];for(let y=0;y<f;++y){const v=m[b+y];(Number.isNaN(v)||v<w)&&(w=v)}p[x]=w}c!=null&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,p);if(i){const x=wt(h,a),b=rt({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const w4={kernelName:eh,backendName:"cpu",kernelFunc:y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{paddings:r,mode:i}=s;be(o,"mirrorPad");const a=r.map((w,y)=>w[0]+o.shape[y]+w[1]),l=r.map(w=>w[0]),c=r.map((w,y)=>w[0]+o.shape[y]),u=i==="reflect"?0:1,h=n.data.get(o.dataId).values,d=o.shape.length,f=Se(o.shape),p=q(a),m=a.length,g=Se(a),x=Ut(o.dtype,p);for(let w=0;w<p;w++){let y=vi(w,m,g);for(let I=0;I<m;I++)y[I]<l[I]?y[I]=l[I]*2-y[I]-u:y[I]>=c[I]&&(y[I]=(c[I]-1)*2-y[I]+u);y=y.map((I,C)=>I-l[C]);const v=Os(y,d,f);x[w]=h[v]}return{dataId:n.write(x,a,o.dtype),shape:a,dtype:o.dtype}}const I4={kernelName:th,backendName:"cpu",kernelFunc:v4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4=Ct((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),$4=Mt(Ja,C4),k4={kernelName:Ja,backendName:"cpu",kernelFunc:$4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(t){const{inputs:e,backend:n,attrs:s}=t,{logits:o}=e,{dim:r}=s,i=o.shape.length;let a=r;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=We([a],o.shape),c=A$({inputs:{x:o},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=wt(c.shape,l),h=rt({inputs:{x:c},backend:n,attrs:{shape:u}}),d=ex({inputs:{a:o,b:h},backend:n}),f=zC({inputs:{x:d},backend:n}),p=Bl({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),m=rt({inputs:{x:p},backend:n,attrs:{shape:u}}),g=nx({inputs:{a:f,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}const S4={kernelName:yh,backendName:"cpu",kernelFunc:F$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(t){const{inputs:e,backend:n,attrs:s}=t,{logits:o}=e,{numSamples:r,seed:i,normalized:a}=s;be(o,"multinomial");const l=a?o:F$({inputs:{logits:o},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=n.data.get(l.dataId).values,d=[c,r],f=Xt(q(d),"int32");for(let p=0;p<c;++p){const m=p*u,g=new Float32Array(u-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=Dh.alea(i.toString()),b=p*r;for(let w=0;w<r;++w){const y=x();f[b+w]=g.length;for(let v=0;v<g.length;v++)if(y<g[v]){f[b+w]=v;break}}}return a||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",f)}const T4={kernelName:I1,backendName:"cpu",kernelFunc:N4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4=qm;function R4(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;be(o,"NonMaxSuppression");const c=n.data.get(o.dataId).values,u=n.data.get(r.dataId).values,{selectedIndices:h}=E4(c,u,i,a,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const D4={kernelName:Gp,backendName:"cpu",kernelFunc:R4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4=Xm;function F4(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;be(o,"NonMaxSuppressionPadded");const u=n.data.get(o.dataId).values,h=n.data.get(r.dataId).values,{selectedIndices:d,validOutputs:f}=A4(u,h,i,a,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const _4={kernelName:Hp,backendName:"cpu",kernelFunc:F4};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4=Ym;function M4(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;be(o,"NonMaxSuppressionWithScore");const u=n.data.get(o.dataId).values,h=n.data.get(r.dataId).values,d=i,f=a,p=l,m=c,{selectedIndices:g,selectedScores:x}=O4(u,h,d,f,p,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const L4={kernelName:jp,backendName:"cpu",kernelFunc:M4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(t){const{inputs:e,backend:n,attrs:s}=t,{indices:o}=e,{dtype:r,depth:i,onValue:a,offValue:l}=s;be(o,"oneHot");const c=q(o.shape),u=new Float32Array(c*i);u.fill(l);const h=n.data.get(o.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<i&&(u[d*i+h[d]]=a);return n.makeTensorInfo([...o.shape,i],r,u)}const B4={kernelName:rh,backendName:"cpu",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ir({inputs:{input:s},backend:n}),r=su({inputs:{x:o},backend:n}),i=fi({inputs:{input:s},backend:n}),a=su({inputs:{x:i},backend:n}),l=vn({inputs:{real:r,imag:a},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return sx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const z4={kernelName:Ih,backendName:"cpu",kernelFunc:su};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ir({inputs:{input:s},backend:n}),r=_$({inputs:{x:o},backend:n}),i=fi({inputs:{input:s},backend:n}),a=su({inputs:{x:i},backend:n}),l=vn({inputs:{real:r,imag:a},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return sx({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const W4={kernelName:oh,backendName:"cpu",kernelFunc:_$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(t){const{inputs:e,backend:n,attrs:s}=t,{axis:o}=s;if(e.length===1)return nu({inputs:{input:e[0]},backend:n,attrs:{dim:o}});const r=e[0].shape,i=e[0].dtype;e.forEach(u=>{ts(r,u.shape,"All tensors passed to stack must have matching shapes"),$(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=nu({inputs:{input:u},backend:n,attrs:{dim:o}});return a.push(h),h}),c=pi({inputs:l,backend:n,attrs:{axis:o}});return a.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}const V4={kernelName:ih,backendName:"cpu",kernelFunc:O$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{paddings:r,constantValue:i}=s;be(o,"pad");const a=r.map((b,w)=>b[0]+o.shape[w]+b[1]),l=r.map(b=>b[0]),c=n.data.get(o.dataId).values,u=q(o.shape),h=o.shape.length,d=Se(o.shape),f=q(a),p=a.length,m=Se(a),g=Ut(o.dtype,f);i!==0&&g.fill(i);for(let b=0;b<u;b++){const y=vi(b,h,d).map((I,C)=>I+l[C]),v=Os(y,p,m);g[v]=c[b]}return{dataId:n.write(g,a,o.dtype),shape:a,dtype:o.dtype}}const M$={kernelName:ah,backendName:"cpu",kernelFunc:U4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G4=Ct((t,e)=>Math.pow(t,e)),H4=Mt(el,G4),j4={kernelName:el,backendName:"cpu",kernelFunc:H4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:o,paramsDenseValues:r,indices:i}=e,a=o.map(g=>n.data.get(g.dataId).values),l=o.map(g=>g.shape),c=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[h,d,f]=s$(a,l,c,r.shape,r.dtype,u,i.shape),p=h.map(g=>n.makeTensorInfo([g.length],"int32",g)),m=n.makeTensorInfo(f,r.dtype,d);return p.concat([m])}const q4={kernelName:C1,backendName:"cpu",kernelFunc:K4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(t){const{inputs:e,backend:n,attrs:s}=t,{shape:o,values:r,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=n.data.get(o.dataId).values,u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=a.map(g=>n.data.get(g.dataId).values),f=a.map(g=>g.shape),[p,m]=o$(c,o.shape,u,r.shape,r.dtype,h,i.shape,d,f,l);return n.makeTensorInfo(p,r.dtype,m)}const Y4={kernelName:$1,backendName:"cpu",kernelFunc:X4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(t){const{backend:e,attrs:n}=t,{start:s,stop:o,dtype:r,step:i}=n,a=r$(s,o,i,r);return e.makeTensorInfo([a.length],r,a)}const J4={kernelName:Kp,backendName:"cpu",kernelFunc:Z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q4=Qe(tl,t=>1/t),eU={kernelName:tl,backendName:"cpu",kernelFunc:Q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(t){const{inputs:e,backend:n,attrs:s}=t,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s;be(o,"resizeBilinear");const l=Se(o.shape),[c,u]=a,[h,d,f,p]=o.shape,m=n.data.get(o.dataId).values,g=new Float32Array(q([h,c,u,p])),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],b=[r&&c>1?c-1:c,r&&u>1?u-1:u];let w=0;const y=x[0]/b[0],v=x[1]/b[1];for(let I=0;I<h;I++)for(let C=0;C<c;C++){let k;i?k=y*(C+.5)-.5:k=y*C;const N=Math.max(0,Math.floor(k)),T=k-N,A=Math.min(d-1,Math.ceil(k)),L=I*l[0]+N*l[1],z=I*l[0]+A*l[1];for(let U=0;U<u;U++){let V;i?V=v*(U+.5)-.5:V=v*U;const B=Math.max(0,Math.floor(V)),j=V-B,P=Math.min(f-1,Math.ceil(V)),Y=L+B*l[2],te=z+B*l[2],J=L+P*l[2],oe=z+P*l[2];for(let ie=0;ie<p;ie++){const de=m[Y+ie],ce=m[te+ie],ue=m[J+ie],xe=m[oe+ie],Ne=de+(ue-de)*j,$e=ce+(xe-ce)*j,De=Ne+($e-Ne)*T;g[w++]=De}}}return n.makeTensorInfo([h,c,u,p],"float32",g)}const nU={kernelName:dh,backendName:"cpu",kernelFunc:tU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(t){const{inputs:e,backend:n,attrs:s}=t,{images:o,dy:r}=e,{alignCorners:i}=s;be([r,o],"resizeBilinearGrad");const a=Se(o.shape),[l,c,u,h]=o.shape,[,d,f]=r.shape,p=new Float32Array(l*c*u*h),m=[i&&d>1?c-1:c,i&&f>1?u-1:u],g=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=m[0]/g[0],b=m[1]/g[1],w=n.data.get(r.dataId).values;let y=0;for(let v=0;v<l;v++){const I=v*a[0];for(let C=0;C<d;C++){const k=C*x,N=Math.floor(k),T=Math.min(Math.ceil(k),c-1),A=I+N*a[1],L=I+T*a[1],z=k-N,U=1-z;for(let V=0;V<f;V++){const B=V*b,j=Math.floor(B),P=Math.min(Math.ceil(B),u-1),Y=B-j,te=1-Y,J=A+j*a[2],oe=A+P*a[2],ie=L+j*a[2],de=L+P*a[2],ce=U*te,ue=U*Y,xe=z*te,Ne=z*Y;for(let $e=0;$e<h;$e++){const De=w[y++];p[J+$e]+=De*ce,p[oe+$e]+=De*ue,p[ie+$e]+=De*xe,p[de+$e]+=De*Ne}}}}return n.makeTensorInfo([l,u,c,h],"float32",p)}const oU={kernelName:Yp,backendName:"cpu",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(t){const{inputs:e,backend:n,attrs:s}=t,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s;be(o,"resizeNearestNeighbor");const l=Se(o.shape),[c,u]=a,[h,d,f,p]=o.shape,m=n.data.get(o.dataId).values,g=new Float32Array(h*c*u*p),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],b=[r&&c>1?c-1:c,r&&u>1?u-1:u],w=x[0]/b[0],y=x[1]/b[1];let v=0;for(let I=0;I<h;I++){const C=I*l[0];for(let k=0;k<c;k++){const N=i?w*(k+.5):w*k;let T=Math.min(d-1,r?Math.round(N):Math.floor(N));i&&(T=Math.max(0,T));const A=C+T*l[1];for(let L=0;L<u;L++){const z=i?y*(L+.5):y*L;let U=Math.min(f-1,r?Math.round(z):Math.floor(z));i&&(U=Math.max(0,U));const V=A+U*l[2];for(let B=0;B<p;B++){const j=m[V+B];g[v++]=j}}}}return n.makeTensorInfo([h,c,u,p],o.dtype,g)}const iU={kernelName:hh,backendName:"cpu",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(t){const{inputs:e,backend:n,attrs:s}=t,{images:o,dy:r}=e,{alignCorners:i}=s;be([r,o],"resizeNearestNeighborGrad");const a=Se(o.shape),l=Se(r.shape),[c,u,h,d]=o.shape,[,f,p]=r.shape,m=new Float32Array(c*u*h*d),g=n.data.get(r.dataId).values,x=[i&&f>1?u-1:u,i&&p>1?h-1:h],b=[i&&f>1?f-1:f,i&&p>1?p-1:p],w=x[0]/b[0],y=x[1]/b[1],v=1/w,I=1/y,C=Math.ceil(v)*2+2,k=Math.ceil(I)*2+2;for(let N=0;N<c;N++){const T=N*a[0];for(let A=0;A<u;A++){const L=T+A*a[1],z=Math.floor(A*v),U=Math.floor(z-C/2);for(let V=0;V<h;V++){const B=L+V*a[2],j=Math.floor(V*I),P=Math.floor(j-k/2);for(let Y=0;Y<d;Y++){let te=0;for(let J=0;J<C;J++){const oe=J+U;if(oe<0||oe>=f)continue;const ie=T+oe*l[1],de=oe*w,ce=Math.min(u-1,i?Math.round(de):Math.floor(de));if(A===ce)for(let ue=0;ue<k;ue++){const xe=ue+P;if(xe<0||xe>=p)continue;const Ne=ie+xe*l[2],$e=xe*y,De=Math.min(h-1,i?Math.round($e):Math.floor($e));V===De&&(te+=g[Ne+Y])}}m[B+Y]=te}}}}return n.makeTensorInfo(o.shape,o.dtype,m)}const lU={kernelName:Xp,backendName:"cpu",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{dims:r}=s;be(o,"reverse");const i=o.shape.length,a=We(r,o.shape);if(i===0)return Us({inputs:{x:o},backend:n});const l=new Kt(o.shape,o.dtype),c=n.bufferSync(o);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=o.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const uU={kernelName:fh,backendName:"cpu",kernelFunc:cU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU={kernelName:cm,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:o,fillValue:r,center:i}=e,a=n,l=Ut(s.dtype,q(s.shape)),[c,u,h,d]=s.shape,[f,p]=ig(i,u,h),m=255,g=Math.sin(o),x=Math.cos(o),b=a.data.get(s.dataId).values;for(let y=0;y<c;y++){const v=y*h*u*d;for(let I=0;I<u;I++){const C=I*(h*d);for(let k=0;k<h;k++){const N=k*d;for(let T=0;T<d;T++){const A=[c,I,k,T],L=A[2],z=A[1];let U=(L-f)*x-(z-p)*g,V=(L-f)*g+(z-p)*x;U=Math.round(U+f),V=Math.round(V+p);let B=r;if(typeof r!="number"&&(T===3?B=m:B=r[T]),U>=0&&U<h&&V>=0&&V<u){const P=V*(h*d),Y=U*d,te=v+P+Y+T;B=b[te]}const j=v+C+N+T;l[j]=B}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU=Qe(ol,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),fU={kernelName:ol,backendName:"cpu",kernelFunc:dU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(t){const{inputs:e,backend:n,attrs:s}=t,{indices:o,updates:r}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=vl(r,o,i),d=!0,f=n.bufferSync(o),p=n.bufferSync(r),m=Ur(f,p,i,h,c,l,a,u,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}const mU={kernelName:k1,backendName:"cpu",kernelFunc:pU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gU(t,e){let n=0,s=t.length,o=0;for(;n<s;)o=Math.floor((n+s)/2),t[o]<e?n=o+1:s=o;return s}function xU(t,e){let n=0,s=t.length,o=0;for(;n<s;)o=Math.floor((n+s)/2),t[o]<=e?n=o+1:s=o;return s}function bU(t,e,n,s,o,r){const i=Ft("int32",n*o);for(let a=0;a<n;++a){const l=t.slice(a*s,(a+1)*s),c=a*o;for(let u=0;u<o;++u)i[c+u]=r==="left"?gU(l,e[u+c]):xU(l,e[u+c])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:o,values:r}=e,{side:i}=s,a=n.data.get(o.dataId).values,l=n.data.get(r.dataId).values,c=bU(a,l,o.shape[0],o.shape[1],r.shape[1],i);return n.makeTensorInfo(r.shape,"int32",c)}const wU={kernelName:S1,backendName:"cpu",kernelFunc:yU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(t){const{inputs:e,backend:n}=t,{condition:s,t:o,e:r}=e;be([s,o,r],"select");const i=s.shape.length,a=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values,u=$n(o.dtype,r.dtype),h=Xt(q(o.shape),u);let d=0;const f=i===0||i>1||o.shape.length===1?1:q(o.shape.slice(1));for(let p=0;p<a.length;p++)for(let m=0;m<f;m++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return n.makeTensorInfo(o.shape,u,h)}const IU={kernelName:ph,backendName:"cpu",kernelFunc:vU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU=Oh,$U=Mh,kU=Qe(il,t=>t>=0?$U*t:CU*(Math.exp(t)-1)),SU={kernelName:il,backendName:"cpu",kernelFunc:kU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NU=Qe(cl,t=>t<0?-1:t>0?1:0),TU={kernelName:cl,backendName:"cpu",kernelFunc:NU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=Qe(al,t=>Math.sin(t)),RU={kernelName:al,backendName:"cpu",kernelFunc:EU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU=Qe(ll,t=>Math.sinh(t)),AU={kernelName:ll,backendName:"cpu",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FU=11920928955078125e-23,d0=Math.log(FU)+2,_U=Qe(hl,t=>{const e=t>-d0,n=t<d0,s=Math.exp(t);let o;return n?o=s:e?o=t:o=Math.log(1+s),o}),OU={kernelName:hl,backendName:"cpu",kernelFunc:_U};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{blockShape:r,paddings:i}=s;be([o],"spaceToBatchND");const a=q(r),l=[[0,0]];l.push(...i);for(let I=1+r.length;I<o.shape.length;++I)l.push([0,0]);const c=M$.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),u=Nl(c.shape,r,a,!1),h=Tl(u.length,r.length,!1),d=El(c.shape,r,a,!1),m=rt({inputs:{x:c},backend:n,attrs:{shape:u}}),b=gn({inputs:{x:m},backend:n,attrs:{perm:h}}),v=rt({inputs:{x:b},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),v}const LU={kernelName:xh,backendName:"cpu",kernelFunc:MU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(t){const{inputs:e,backend:n}=t,{indices:s,values:o,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values[0],[h,d,f,p,m]=c$(a,s.shape,s.dtype,l,o.dtype,c,u);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],o.dtype,f),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const BU={kernelName:Zp,backendName:"cpu",kernelFunc:PU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.data.get(o.dataId).values),a=n.data.get(s.dataId).values,l=Array.from(n.data.get(r.dataId).values),[c,u,h]=u$(a,s.shape,s.dtype,i,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const WU={kernelName:Jp,backendName:"cpu",kernelFunc:zU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(t){const{inputs:e,backend:n}=t,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,a=n.data.get(o.dataId).values,l=n.data.get(r.dataId).values,[c,u]=Qg(i,s.shape,s.dtype,a,l,!0);return n.makeTensorInfo(u,s.dtype,c)}const UU={kernelName:Qp,backendName:"cpu",kernelFunc:VU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(t){const{inputs:e,backend:n}=t,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,a=n.data.get(o.dataId).values,l=n.data.get(r.dataId).values,[c,u]=Qg(i,s.shape,s.dtype,a,l);return n.makeTensorInfo(u,s.dtype,c)}const HU={kernelName:em,backendName:"cpu",kernelFunc:GU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:o,sparseValues:r,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=vl(r,o,a),f=!1,p=n.bufferSync(o);let m;switch(r.dtype){case"bool":{const g=n.bufferSync(r),x=Boolean(n.data.get(i.dataId).values[0]);m=Ur(p,g,a,d,u,c,l,h,x,f);break}case"float32":{const g=n.bufferSync(r),x=n.data.get(i.dataId).values[0];m=Ur(p,g,a,d,u,c,l,h,x,f);break}case"int32":{const g=n.bufferSync(r),x=n.data.get(i.dataId).values[0];m=Ur(p,g,a,d,u,c,l,h,x,f);break}case"string":{const g=n.bufferSync(r),x=bo(n.data.get(i.dataId).values[0]);m=Ur(p,g,a,d,u,c,l,h,x,f);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return n.makeTensorInfo(a,m.dtype,m.values)}const KU={kernelName:N1,backendName:"cpu",kernelFunc:jU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{numOrSizeSplits:r,axis:i}=s,a=We(i,o.shape)[0],l=vg(o,r,a),c=new Array(o.shape.length).fill(0),u=o.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=Cr({inputs:{x:o},backend:n,attrs:{begin:c,size:d}});return c[a]+=h,f})}const XU={kernelName:bh,backendName:"cpu",kernelFunc:qU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU={kernelName:tm,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;be(n,"square");const o=s.data.get(n.dataId).values,r=new Float32Array(o.length);for(let a=0;a<o.length;++a){const l=o[a];r[a]=l*l}return{dataId:s.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU=Qe(bl,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),JU={kernelName:bl,backendName:"cpu",kernelFunc:ZU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{begin:r,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;be(o,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=Im(o.shape,r,i,a,l,c,u,h,d);let v;if(m)v=rt({inputs:{x:o},backend:n,attrs:{shape:p}});else if(g||x){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const I=ym(b,w,y),C=Cr({inputs:{x:o},backend:n,attrs:{begin:b,size:I}});v=rt({inputs:{x:C},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(C)}else{const I=n.bufferSync(o),C=d$(f,I,y,b);v=n.makeTensorInfo(p,C.dtype,C.values)}return v}const eG={kernelName:nm,backendName:"cpu",kernelFunc:QU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(t){const{inputs:e,backend:n,attrs:s}=t,{separator:o,nGramWidths:r,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=n.data.get(u.dataId).values,f=n.data.get(h.dataId).values,[p,m]=f$(d,f,o,r,i,a,l,c);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}const nG={kernelName:sm,backendName:"cpu",kernelFunc:tG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:o}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values[0],[c,u,h]=p$(a,l,o),d=u.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const oG={kernelName:om,backendName:"cpu",kernelFunc:sG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(r.dataId).values,a=m$(i,o);return n.makeTensorInfo(r.shape,"int32",a)}const iG={kernelName:rm,backendName:"cpu",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG=Qe(ml,t=>Math.tan(t)),lG={kernelName:ml,backendName:"cpu",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG=Qe(gl,t=>Math.tanh(t)),uG={kernelName:gl,backendName:"cpu",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{reps:r}=s;be(o,"tile");const i=x$(n.bufferSync(o),r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const dG={kernelName:xl,backendName:"cpu",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{k:r,sorted:i}=s;be(o,"topk");const a=n.data.get(o.dataId).values,[l,c]=y$(a,o.shape,o.dtype,r,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}const pG={kernelName:im,backendName:"cpu",kernelFunc:fG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(t){const{inputs:e,attrs:n,backend:s}=t,{image:o,transforms:r}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=n,[u,h,d,f]=o.shape,[p,m]=c!=null?c:[h,d],g=[u,p,m,f],x=Se(o.shape),b=x[0],w=x[1],y=x[2],v=Se(g),I=v[0],C=v[1],k=v[2],N=Ut(o.dtype,q(g));N.fill(l);const T=s.data.get(o.dataId).values,A=s.data.get(r.dataId).values;for(let z=0;z<u;++z){const U=r.shape[0]===1?A:A.subarray(z*8,z*8+8);for(let V=0;V<p;++V)for(let B=0;B<m;++B)for(let j=0;j<f;++j){let P;const Y=U[6]*B+U[7]*V+1;if(Y===0)continue;const te=(U[0]*B+U[1]*V+U[2])/Y,J=(U[3]*B+U[4]*V+U[5])/Y,oe=f0(te,d,a),ie=f0(J,h,a);switch(i){case"nearest":P=vG(T,h,d,b,w,y,z,ie,oe,j,l);break;case"bilinear":P=IG(T,h,d,b,w,y,z,ie,oe,j,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const de=z*I+V*C+B*k+j;N[de]=P}return s.makeTensorInfo(g,o.dtype,N)}return{dataId:s.write(N,g,o.dtype),shape:o.shape,dtype:o.dtype}}const gG={kernelName:am,backendName:"cpu",kernelFunc:mG};function f0(t,e,n){switch(n){case"reflect":return xG(t,e);case"wrap":return bG(t,e);case"nearest":return wG(t,e);case"constant":default:return yG(t)}}function xG(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=2*e;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-e?n+s:-n-1}else if(n>e-1)if(e<=1)n=0;else{const s=2*e;n-=s*Math.trunc(n/s),n>=e&&(n=s-n-1)}return ur(0,n,e-1)}function bG(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=e-1;n+=e*(Math.trunc(-n/s)+1)}else if(n>e-1)if(e<=1)n=0;else{const s=e-1;n-=e*Math.trunc(n/s)}return ur(0,n,e-1)}function yG(t,e){return t}function wG(t,e){return ur(0,t,e-1)}function Xi(t,e,n,s,o,r,i,a,l,c,u){const h=i*s+a*o+l*r+c;return 0<=a&&a<e&&0<=l&&l<n?t[h]:u}function vG(t,e,n,s,o,r,i,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Xi(t,e,n,s,o,r,i,h,d,c,u)}function IG(t,e,n,s,o,r,i,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,m=(p-l)*Xi(t,e,n,s,o,r,i,h,d,c,u)+(l-d)*Xi(t,e,n,s,o,r,i,h,p,c,u),g=(p-l)*Xi(t,e,n,s,o,r,i,f,d,c,u)+(l-d)*Xi(t,e,n,s,o,r,i,f,p,c,u);return(f-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(t){const{inputs:e,attrs:n,backend:s}=t,{axis:o}=n,{x:r}=e;be(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=w$(i,o,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const $G={kernelName:lm,backendName:"cpu",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(t){const{inputs:e,backend:n,attrs:s}=t,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o.shape.length,a=o.shape[r],l=new Array(i-1);let c=0;for(let f=0;f<i;f++)f!==r&&(l[c++]=o.shape[f]);const u=new Array(i).fill(0),h=o.shape.slice();h[r]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[r]=f;const p=Cr({inputs:{x:o},backend:n,attrs:{begin:u,size:h}});d[f]=rt({inputs:{x:p},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(p)}return d}const SG={kernelName:wh,backendName:"cpu",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,segmentIds:r}=e,{numSegments:i}=s;be(o,"unsortedSegmentSum");const a=o.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let p=0;p<h;++p){const m=nu({inputs:{input:d},backend:n,attrs:{dim:p+1}});d=m,u.push(m)}for(let p=0;p<i;++p){const m=So(p,"int32"),g=n.makeTensorInfo([],"int32",m),x=PC({inputs:{a:g,b:d},backend:n}),b=$o({inputs:{x},backend:n,attrs:{dtype:"float32"}}),w=Yh({inputs:{a:b,b:o},backend:n}),y=Bl({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});c.push(y),u.push(g),u.push(x),u.push(b),u.push(w),u.push(y)}const f=O$({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),f}const TG={kernelName:vh,backendName:"cpu",kernelFunc:NG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=[Sz,dB,Tz,Rz,bB,Az,_z,Mz,Pz,zz,Vz,Gz,jz,Xz,Zz,eW,nW,oW,iW,$z,lW,uW,dW,pW,gB,wB,gW,fB,bW,wW,vW,CW,kW,NW,EW,DW,FW,OW,LW,BW,WW,UW,HW,jW,qW,YW,JW,QW,eV,tV,oV,xz,iV,vB,pV,IB,mV,$B,vV,IV,$V,SB,NV,EV,DV,FV,OV,TB,RB,pB,LV,yW,BV,WV,UV,bz,AB,_B,HV,MB,KV,YV,JV,t4,s4,r4,i4,PB,l4,u4,d4,p4,g4,b4,w4,zB,I4,k4,T4,VB,GB,D4,_4,L4,jB,B4,W4,V4,M$,j4,wz,XB,q4,Y4,J4,mB,Lf,eU,vz,Iz,Cz,nU,oU,iU,lU,uU,hU,fU,sz,mU,wU,IU,SU,rz,TU,RU,AU,iz,S4,OU,LU,BU,WU,UU,HU,KU,XU,cz,YU,hz,JU,eG,nG,oG,iG,mz,nV,lG,uG,dG,pG,gG,KB,$G,SG,TG,z4];for(const t of EG)E1(t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo={},ic={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function RG(t,e){Xo[t]=e}function ys(t,e){if(!(t in Xo)||e!=null){const s=AG(t,e);if(s!==null)Xo[t]=s;else return console.log("Could not get context for WebGL version",t),null}const n=Xo[t];return n==null||n.isContextLost()?(delete Xo[t],ys(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Xo[t])}function DG(t){if(typeof OffscreenCanvas!="undefined"&&t===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function AG(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e==null?DG(t):e;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Xo[t]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(ic.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",ic)||n.getContext("experimental-webgl",ic):n.getContext("webgl2",ic)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ma;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(ma||(ma={}));var On;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(On||(On={}));var zt;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(zt||(zt={}));function zl(t,e){return[e,t]}function FG(t,e){return t*e}function ac(t){const e=q(t),n=Math.ceil(e/4);return Jd(n)}function Ri(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function _G(t,e){const[n,s]=Ri(t,e);return n*s*4}function ox(t,e){const n=t;let s,o,r,i,a,l,c,u,h,d;return H().getNumber("WEBGL_VERSION")===2?(s=n.R32F,o=n.R16F,r=n.RGBA16F,i=n.RGBA32F,a=n.RED,c=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=t.RGBA,o=t.RGBA,r=t.RGBA,i=n.RGBA,a=t.RGBA,c=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(t,e){const n=e();return H().getBool("DEBUG")&&OG(t),n}function OG(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+BG(t,e))}const MG=596e-10,LG=65504;function PG(t){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||MG<Math.abs(t)&&Math.abs(t)<LG)}function BG(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function lc(t,e){return no(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function zG(t,e){const n=no(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(we(t,()=>t.shaderSource(n,e)),we(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function WG(t,e){const n=no(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(we(t,()=>t.shaderSource(n,e)),we(t,()=>t.compileShader(n)),H().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw L$(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const VG=/ERROR: [0-9]+:([0-9]+):/g;function L$(t,e){const n=VG.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const s=+n[1],o=t.split(`
`),r=o.length.toString().length+2,i=o.map((h,d)=>Xr((d+1).toString(),r)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),c=i.slice(s-1,s),u=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Xr(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function UG(t){return no(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function GG(t,e){if(we(t,()=>t.linkProgram(e)),!H().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function $d(t,e){if(we(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function HG(t,e){const n=no(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return we(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),we(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function jG(t,e){const n=no(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return we(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),we(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function KG(t){return no(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function qG(t,e){const n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const s=`[${t}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(t>n||e>n){const s=`[${t}x${e}]`,o=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function XG(t){return no(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function p0(t,e,n,s,o,r,i){const a=t.getAttribLocation(e,n);return a===-1?!1:(we(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),we(t,()=>t.vertexAttribPointer(a,o,t.FLOAT,!1,r,i)),we(t,()=>t.enableVertexAttribArray(a)),!0)}function YG(t,e,n){tH(t,n),we(t,()=>t.activeTexture(t.TEXTURE0+n)),we(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function ZG(t,e,n){return no(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function JG(t,e,n){return t.getUniformLocation(e,n)}function QG(t,e,n,s){we(t,()=>YG(t,e,s)),we(t,()=>t.uniform1i(n,s))}function kd(t,e,n){we(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),we(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function m0(t,e){we(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),we(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function cc(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+eH(t,e))}function eH(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function no(t,e,n){const s=we(t,()=>e());if(s==null)throw new Error(n);return s}function tH(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n){const o=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${o}.`)}}function mi(t,e=2){return q(t.slice(0,t.length-e))}function gi(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Sd(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[mi(t),...gi(t)]),e}function nH(t,e=!1){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n=n*2,s=s*2,t=t.map((a,l)=>l>=t.length-2?gp(t[l]):t[l]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=ko(t).newShape);let o=q(t),r=null;t.length<=1&&o<=n?r=[1,o]:t.length===2&&t[0]<=n&&t[1]<=n?r=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?r=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?r=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?r=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(r=[t[0],t[1]*t[2]*t[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||i)if(e){const a=mi(t);let l=2,c=2;t.length&&([l,c]=gi(t)),o=a*(l/2)*(c/2),r=Jd(o).map(u=>u*2)}else r=Jd(o);return r}function uc(t){return t%2===0}function ou(t,e){if(t=t.slice(-2),e=e.slice(-2),Ye(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s||uc(n)&&uc(s)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&uc(t[0])&&uc(e[0])}let Nd,Td;function sH(t){if(Nd==null){const e=ys(t);Nd=e.getParameter(e.MAX_TEXTURE_SIZE)}return Nd}function oH(t){if(Td==null){const e=ys(t);Td=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Td)}function rH(t){if(t===0)return 0;let e;const n=ys(t);return Zn(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:Zn(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function Zn(t,e){return t.getExtension(e)!=null}function g0(t){try{if(ys(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function iH(t){if(t===0)return!1;const e=ys(t);if(t===1){if(!Zn(e,"OES_texture_float"))return!1}else if(!Zn(e,"EXT_color_buffer_float"))return!1;return Bf(e)}function aH(t){if(t===0)return!1;const e=ys(t);if(t===1){if(!Zn(e,"OES_texture_float")||!Zn(e,"WEBGL_color_buffer_float"))return!1}else{if(Zn(e,"EXT_color_buffer_float"))return Bf(e);const s="EXT_color_buffer_half_float";if(Zn(e,s)){const o=e.getExtension(s);return lH(e,o)}return!1}return Bf(e)}function Bf(t){const e=ox(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const s=1,o=1;t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,s,o,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function lH(t,e){const n=ox(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s);const o=1,r=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,o,r,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(i),a}function cH(t){return t!==2?!1:ys(t).fenceSync!=null}function Wl(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&$(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce=H();Ce.registerFlag("HAS_WEBGL",()=>Ce.getNumber("WEBGL_VERSION")>0);Ce.registerFlag("WEBGL_VERSION",()=>g0(2)?2:g0(1)?1:0);Ce.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ce.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ce.get("WEBGL_VERSION")===2);Ce.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ce.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ce.registerFlag("WEBGL_PACK",()=>Ce.getBool("HAS_WEBGL"));Ce.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_CLIP",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_PACK_REDUCE",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_CONV_IM2COL",()=>Ce.getBool("WEBGL_PACK"));Ce.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>sH(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>oH(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Ce.getNumber("WEBGL_VERSION");return t===0?0:rH(t)});Ce.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ce.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!z1());Ce.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>iH(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ce.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ce.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ce.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>aH(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_FENCE_API_ENABLED",()=>cH(Ce.getNumber("WEBGL_VERSION")));Ce.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ce.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ce.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});Ce.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>z1()?1:-1,t=>{if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});Ce.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ce.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ce.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ce.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ce.registerFlag("WEBGL_EXP_CONV",()=>!1);Ce.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ce.getBool("IS_TEST"));Ce.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ce.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ce.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(){let t,e,n,s,o,r,i,a,l,c;return H().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",s="in",o="texture",r="outputColor",i="out vec4 outputColor;",a=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",s="varying",o="texture2D",r="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:o,output:r,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(t,e,n="index"){const s=Se(e);return s.map((o,r)=>{const i=`int ${t[r]} = ${n} / ${o}`,a=r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${o}`:`index -= ${t[r]} * ${o}`;return`${i}; ${a};`}).join("")}function Zh(t,e,n="index"){const s=Se(e);return s.map((o,r)=>{const i=`int ${t[r]} = ${n} / outShapeStrides[${r}]`,a=r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * outShapeStrides[${r}]`:`index -= ${t[r]} * outShapeStrides[${r}]`;return`${i}; ${a};`}).join("")}function uH(t,e){const n=t.length,s=t.map(r=>`${e}[${r}]`),o=new Array(n-1);o[n-2]=s[n-1];for(let r=n-3;r>=0;--r)o[r]=`(${o[r+1]} * ${s[r+1]})`;return o}function hH(t,e,n="index"){const s=t.map((r,i)=>i),o=uH(s,e);return o.map((r,i)=>{const a=`int ${t[i]} = ${n} / ${o[i]}`,l=i===o.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${o[i]}`:`index -= ${t[i]} * ${o[i]}`;return`${a}; ${l};`}).join("")}function rx(t){const e=Se(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function ix(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const P$=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:B$}=HO;function dH(t,e,n){const s=[];if(t.forEach(f=>{const p=q(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),n.enableShapeUniforms){const{uniformShape:m}=ax(n.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const o=s.join(`
`),r=t.map(f=>fH(f,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=e.texShape,a=an(),l=gH(a);let c,u,h=yH(a);return e.isPacked?(c=pH(e.logicalShape,i,n.enableShapeUniforms),u=bH(a)):(c=mH(e.logicalShape,i,n.enableShapeUniforms),u=xH(a)),n.packedInputs&&(h+=CH),[h,l,u,o,c,r,n.userCode].join(`
`)}function Di(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return OH(t,e);case 1:return LH(t,e);case 2:return BH(t,e);case 3:return WH(t,e);case 4:return UH(t,e);case 5:return GH(t);case 6:return HH(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function z$(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return _H(t);case 1:return MH(t,e);case 2:return PH(t,e);case 3:return zH(t,e);default:return VH(t,e)}}function fH(t,e,n=!1,s){let o="";n?o+=z$(t,s):o+=Di(t,s);const r=t.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(n?o+=jH(t,e):o+=KH(t,e)),o}function pH(t,e,n){switch(t.length){case 0:return W$();case 1:return $H(t,e,n);case 2:return AH(t,e,n);case 3:return SH(t,e,n);default:return TH(t,e,n)}}function mH(t,e,n){switch(t.length){case 0:return W$();case 1:return kH(t,e,n);case 2:return FH(t,e,n);case 3:return NH(t,e,n);case 4:return EH(t,e,n);case 5:return RH(t,e);case 6:return DH(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function gH(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function xH(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function bH(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function yH(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${wH}
    ${vH}
    ${IH}
  `}const wH=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vH=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,IH=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,CH=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function W$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function $H(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function kH(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function SH(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(t[2]/2),r=o*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function NH(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Zh(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const s=Dr(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function TH(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(t[t.length-1]/2),r=o*Math.ceil(t[t.length-2]/2);let i=r,a="",l="b, r, c";for(let c=2;c<t.length-1;c++)i*=t[t.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,l=`b${c}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${t.length}(${l});
    }
  `}function EH(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Zh(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Dr(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function RH(t,e){const n=Dr(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function DH(t,e){const n=Dr(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function AH(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ye(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function FH(t,e,n){return Ye(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function Ar(t){return`offset${t}`}function _H(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=an();return`
    vec4 ${n}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function OH(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[o,r]=t.shapeInfo.texShape;if(o===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=Ar(n);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[a,l]=t.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function MH(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,r=an();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${n}, uv);
    }
  `}function LH(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Ai(t)}
      }
    `;const o=t.shapeInfo.texShape,r=o[0],i=o[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=Ar(n);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${n}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});
      return sampleTexture(${n}, uv);
    }
  `}function PH(t,e){const n=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape,i=r[0],a=r[1],l=an();if(r!=null&&Ye(n,r))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function BH(t,e){const n=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape;if(r!=null&&Ye(n,r)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=ko(n),l=i;if(l.length<n.length){const d=Fi(t,l),f=["row","col"];return`
      ${Di(d,e)}
      float ${o}(int row, int col) {
        return ${o}(${_i(f,a)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Ai(t)}
      }
    `;const c=r[0],u=r[1],h=Ar(s);return u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function zH(t,e){const n=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(n[0]===1){const d=n.slice(1),f=[1,2],p=Fi(t,d),m=["b","row","col"];return`
        ${z$(p,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${_i(m,f)});
        }
      `}const a=an();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],c=i[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function WH(t,e){const n=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[1]*n[2],i=n[2],{newShape:a,keptDims:l}=ko(n),c=a;if(c.length<n.length){const m=Fi(t,c),g=["row","col","depth"];return`
        ${Di(m,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${_i(g,l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${Ai(t)}
      }
    `;const u=t.shapeInfo.texShape,h=u[0],d=u[1],f=t.shapeInfo.flatOffset;if(d===r&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const p=Ar(s);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function VH(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),o=an();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${n}, uv);
    }
  `;const r=t.shapeInfo.logicalShape,i=r.length,a=t.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)f=`int b${m}, `+f,d*=r[i-m-1],p=`b${m} * ${d} + `+p;return`
    vec4 ${s}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${o.texture2D}(${n}, uv);
    }
  `}function UH(t,e){const n=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[3],i=n[2]*r,a=n[1]*i,{newShape:l,keptDims:c}=ko(n);if(l.length<n.length){const b=Fi(t,l),w=["row","col","depth","depth2"];return`
      ${Di(b,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${_i(w,c)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${r}, 1)));
        ${Ai(t)}
      }
    `;const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(f===a&&u==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${p}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===r&&u==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=Ar(s);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function GH(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[4],r=e[3]*o,i=e[2]*r,a=e[1]*i,{newShape:l,keptDims:c}=ko(e);if(l.length<e.length){const m=Fi(t,l),g=["row","col","depth","depth2","depth3"];return`
      ${Di(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${_i(g,c)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${r}, ${o})) +
          depth3;
        ${Ai(t)}
      }
    `;const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const p=Ar(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${r} +
          depth2 * ${o} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function HH(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:r}=ko(e);if(o.length<e.length){const g=Fi(t,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Di(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${_i(x,r)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,c=e[2]*l,u=e[1]*c;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Ai(t)}
      }
    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=Ar(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Ai(t){const e=t.name,n=q(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function jH(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),o="get"+s+"AtOutCoords",r=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=B$(t.shapeInfo.logicalShape,e.logicalShape),l=it(i),c=i-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":i<2&&a.length>=1?u="coords = 0;":u=a.map(b=>`coords.${h[b+c]} = 0;`).join(`
`);let d="";i<2&&r>0?d="coords":d=t.shapeInfo.logicalShape.map((b,w)=>`coords.${h[w+c]}`).join(", ");let f="return outputValue;";const m=q(t.shapeInfo.logicalShape)===1,x=q(e.logicalShape)===1;if(r===1&&!m&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=r-2,w=r-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${f}
    }
  `}function KH(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),o="get"+s+"AtOutCoords",r=e.texShape,i=t.shapeInfo.texShape,a=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&a===l&&t.shapeInfo.flatOffset==null&&Ye(i,r))return`
      float ${o}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const c=it(l),u=B$(t.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${f[m+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=t.shapeInfo.logicalShape.map((m,g)=>`coords.${f[g+h]}`).join(", "),`
    float ${o}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${p});
    }
  `}function it(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function ax(t,e,n){const{newShape:s,keptDims:o}=ko(e),r=e.length,i=t&&r===3&&e[0]===1,a=i?e.slice(1):s,l=!t&&r>1&&!Ye(e,n)&&s.length<r||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:o}}function Fi(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function _i(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(t,e,n,s){const o=n.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=o.map(u=>u.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=dH(o,i,e),l=WG(t.gl,a),c=t.createProgram(l);return H().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:i},V$(t,e,c))}function V$(t,e,n){const s={},o={},r={},i=[];let a,l,c,u=null,h=null;h=t.getUniformLocation(n,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(u=t.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let f=0;f<e.variableNames.length;f++){const p=e.variableNames[f];s[p]=t.getUniformLocation(n,p,d),s[`offset${p}`]=t.getUniformLocation(n,`offset${p}`,d),e.enableShapeUniforms&&(o[`${p}Shape`]=t.getUniformLocation(n,`${p}Shape`,d),r[`${p}TexShape`]=t.getUniformLocation(n,`${p}TexShape`,d))}return e.enableShapeUniforms&&(a=t.getUniformLocation(n,"outShape",d),c=t.getUniformLocation(n,"outShapeStrides",d),l=t.getUniformLocation(n,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach((f,p)=>{i[p]=t.getUniformLocation(n,f.name,d)}),{uniformLocations:s,customUniformLocations:i,infLoc:u,nanLoc:h,inShapesLocations:o,inTexShapesLocations:r,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function x0(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,s)=>{const o=n.logicalShape,r=e[s],i=r.shape;if(!Ye(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(n.isUniform&&r.isUniform)return;const a=n.texShape,l=r.isUniform?null:r.texData.texShape;if(!Ye(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function XH(t,e,n,s,o){e.program.enableShapeUniforms||(x0(e.inShapeInfos,n),x0([e.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):t.setOutputMatrixTexture(r.texture,i[0],i[1]),t.setProgram(e.webGLProgram),H().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((l,c)=>{const u=e.program.variableNames[c],h=e.uniformLocations[u],d=e.uniformLocations[`offset${u}`],f=e.inShapesLocations[`${u}Shape`],p=e.inTexShapesLocations[`${u}TexShape`];if(f){const{uniformShape:m}=ax(e.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:t.gl.uniform1iv(f,new Int32Array(m));break;case 2:t.gl.uniform2iv(f,new Int32Array(m));break;case 3:t.gl.uniform3iv(f,new Int32Array(m));break;case 4:t.gl.uniform4iv(f,new Int32Array(m));break}}if(p&&t.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(q(l.shape)<2)t.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),t.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&d!=null&&t.gl.uniform1i(d,l.texData.slice.flatOffset),t.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:t.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Se(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((l,c)=>{const u=e.customUniformLocations[c],h=o[c];if(l.type==="float")t.gl.uniform1fv(u,h);else if(l.type==="vec2")t.gl.uniform2fv(u,h);else if(l.type==="vec3")t.gl.uniform3fv(u,h);else if(l.type==="vec4")t.gl.uniform4fv(u,h);else if(l.type==="int")t.gl.uniform1iv(u,h);else if(l.type==="ivec2")t.gl.uniform2iv(u,h);else if(l.type==="ivec3")t.gl.uniform3iv(u,h);else if(l.type==="ivec4")t.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),t.executeProgram()}function YH(t,e,n){let s="";e.concat(n).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=ax(t.packedInputs,i.shape,l);let d="",f="",p="";if(u.length===1&&t.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!t.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!t.packedInputs){const v=Se(u);p=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}const m=i.shape.length,g=u.length===2&&Ye(i.shape,l),x=q(i.shape)===1,b=ai(i.shape,n.shape),w=!t.packedInputs&&m===n.shape.length&&Ye(l,n.texData.texShape),y=t.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${c?h:""}_${u.length}_${x}_${b}_${g}_${d}_${f}_${p}_${y}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const o=t.userCode;let r=t.constructor.name;return r+="_"+s+"_"+o+`${H().getNumber("WEBGL_VERSION")}`,r}function ln(t){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ma.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=an();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Zh(["r","c","d"],e):Dr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ma.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=an();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Zh(["r","c","d"],e):Dr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QH{constructor(e){this.variableNames=["A"],this.outTexUsage=On.DOWNLOAD;const n=an();this.outputShape=e,this.userCode=`
      ${P$}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ej{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=On.DOWNLOAD;const n=an();this.outputShape=e,this.userCode=`
      ${P$}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tj{constructor(e,n=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=an();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?ix():rx(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${s.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nj{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=an();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let o="",r="result";n&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?ix():rx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(t){const e=an(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return zG(t,n)}function oj(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return HG(t,e)}function rj(t){const e=new Uint16Array([0,1,2,2,1,3]);return jG(t,e)}function Vl(t,e,n,s,o,r){qG(e,n);const i=KG(t),a=t.TEXTURE_2D;return we(t,()=>t.bindTexture(a,i)),we(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),we(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),we(t,()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST)),we(t,()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST)),H().getNumber("WEBGL_VERSION")===1?we(t,()=>t.texImage2D(a,0,s,e,n,0,o,r,null)):we(t,()=>t.texStorage2D(a,1,s,e,n)),we(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:i,texShape:[n,e]}}function U$(t){return t.internalFormatFloat}function ij(t,e,n,s){const[o,r]=zl(e,n);return Vl(t,o,r,U$(s),s.textureFormatFloat,t.FLOAT)}function G$(t){return t.internalFormatHalfFloat}function aj(t,e,n,s){const[o,r]=zl(e,n);return Vl(t,o,r,G$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function H$(t){return t.downloadTextureFormat}function lj(t,e,n,s){const[o,r]=zl(e,n);return Vl(t,o,r,H$(s),t.RGBA,t.UNSIGNED_BYTE)}function j$(t){return t.internalFormatPackedFloat}function cj(t,e,n,s){const[o,r]=Ri(e,n);return Vl(t,o,r,j$(s),t.RGBA,t.FLOAT)}function K$(t){return t.internalFormatPackedHalfFloat}function uj(t,e,n,s){const[o,r]=Ri(e,n);return Vl(t,o,r,K$(s),t.RGBA,s.textureTypeHalfFloat)}function hj(t,e,n){return we(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),p0(t,e,"clipSpacePos",n,3,20,0)&&p0(t,e,"uv",n,2,20,12)}function dj(t,e,n,s,o,r){we(t,()=>t.bindTexture(t.TEXTURE_2D,e));let i,a,l;o instanceof Uint8Array?(i=new Uint8Array(n*s*4),a=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),a=t.FLOAT,l=r.internalFormatPackedFloat),i.set(o),H().getNumber("WEBGL_VERSION")===2?we(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,a,i)):we(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,a,i)),we(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function fj(t,e,n){we(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?we(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):we(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):H().getNumber("WEBGL_VERSION")===2?we(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):we(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),we(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function pj(t,e,n,s){const o=t.createBuffer();we(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,o));const a=4*4*e*n;return we(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ)),we(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),we(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),o}function mj(t,e,n){const s=t,o=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function gj(t,e,n,s){const[o,r]=zl(e,n),i=4,a=new Uint8Array(FG(e*n,i));return we(t,()=>t.readPixels(0,0,o,r,s.downloadTextureFormat,t.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function xj(t,e,n,s,o,r,i,a){const l=t,c=new Float32Array(_G(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function bj(t,e,n){const s=new Float32Array(e*n*4);return we(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ed{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const n=H().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,RG(n,e)):this.gl=ys(n);let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=lc(this.gl,r),Zn(this.gl,i))this.textureHalfFloatExtension=lc(this.gl,i);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Zn(this.gl,o))this.colorBufferHalfFloatExtension=lc(this.gl,o);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Zn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Zn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=oj(this.gl),this.indexBuffer=rj(this.gl),this.framebuffer=XG(this.gl),this.textureConfig=ox(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;we(e,()=>e.finish()),we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.deleteFramebuffer(this.framebuffer)),we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),we(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),ij(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),aj(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),lj(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),fj(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,s,o){this.throwIfDisposed(),dj(this.gl,e,n,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),uj(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),cj(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(m0(this.gl,this.framebuffer),this.outputTexture=null),we(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,s){return this.downloadMatrixDriver(e,()=>gj(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,s,o,r,i){return xj(this.gl,e,n,s,o,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return mj(this.gl,e,n)}createBufferFromTexture(e,n,s){this.bindTextureToFrameBuffer(e);const o=pj(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,s;if(H().getBool("WEBGL_FENCE_API_ENABLED")){const o=e,r=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=o.clientWaitSync(r,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},n=r}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(e,n,s){return this.downloadMatrixDriver(e,()=>bj(this.gl,n,s))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=sj(n));const s=UG(n);return we(n,()=>n.attachShader(s,this.vertexShader)),we(n,()=>n.attachShader(s,e)),GG(n,s),this.debug&&$d(n,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=hj(n,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&we(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&$d(this.gl,this.program),we(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,s=!0){return this.throwIfDisposed(),s?ZG(this.gl,e,n):JG(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),we(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),QG(this.gl,e,n,s)}setOutputMatrixTexture(e,n,s){this.setOutputMatrixTextureDriver(e,s,n)}setOutputPackedMatrixTexture(e,n,s){this.throwIfDisposed();const[o,r]=Ri(n,s);this.setOutputMatrixTextureDriver(e,o,r)}setOutputMatrixWriteRegion(e,n,s,o){this.setOutputMatrixWriteRegionDriver(s,e,o,n)}setOutputPackedMatrixWriteRegion(e,n,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&$d(this.gl,this.program),cc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),we(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),we(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=lc(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await rb(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=yj(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in H().platform&&(s=H().platform.setTimeoutCustom.bind(H().platform)),rb(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kd(this.gl,e,this.framebuffer),this.debug&&cc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(kd(this.gl,this.outputTexture,this.framebuffer),this.debug&&cc(this.gl)):m0(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,n,s){this.throwIfDisposed();const o=this.gl;kd(o,e,this.framebuffer),this.debug&&cc(o),this.outputTexture=e,we(o,()=>o.viewport(0,0,n,s)),we(o,()=>o.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(e,n,s,o){this.throwIfDisposed(),we(this.gl,()=>this.gl.scissor(e,n,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function yj(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:wj,bincountImpl:q$,bincountReduceImpl:vj,castImpl:Ij,ceilImpl:Cj,concatImpl:$j,equalImpl:kj,expImpl:Sj,expm1Impl:Nj,floorImpl:Tj,gatherNdImpl:Ej,gatherV2Impl:Rj,greaterImpl:Dj,greaterEqualImpl:Aj,lessImpl:Fj,lessEqualImpl:_j,linSpaceImpl:Oj,logImpl:Mj,maxImpl:Lj,maximumImpl:Pj,minimumImpl:Bj,multiplyImpl:zj,negImpl:Wj,notEqualImpl:Vj,prodImpl:Uj,raggedGatherImpl:Gj,raggedTensorToTensorImpl:Hj,rangeImpl:jj,rsqrtImpl:Kj,scatterImpl:qj,sigmoidImpl:Xj,simpleAbsImpl:X$,sliceImpl:Yj,sparseFillEmptyRowsImpl:Zj,sparseReshapeImpl:Jj,sparseSegmentReductionImpl:Y$,sqrtImpl:Qj,stridedSliceImpl:eK,stringNGramsImpl:tK,stringSplitImpl:nK,stringToHashBucketFastImpl:sK,subImpl:oK,tileImpl:rK,topKImpl:iK,transposeImpl:lx,uniqueImpl:aK}=gz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function tn(t,e){return e===1?[t]:Z$(t,e)}function lK(t,e){if(t===1)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cK{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ln(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=tn("rc",this.rank),s=it(this.rank),o=this.getOutOfBoundsCondition(n),r=this.getSetup(n),i=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let r=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${e[e.length-1-i]},`+r;n.push(r)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J${constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let s="";for(let o=0;o<4;o++){let r="thisRC = rc;";o%2===1&&(r+="thisRC.z += 1;"),o>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${uK(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?ix():rx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function uK(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?hH(["r","c","d"],"inputShape"):Dr(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hK{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,n,s){const o=y0(n,s),r=w0(e,o,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=b0(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let a;return o===zt.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===zt.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===zt.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===zt.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===zt.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,n,s,o){if(this.freeTextures==null)return;const r=y0(s,o),i=w0(n,r,o);i in this.freeTextures||(this.freeTextures[i]=[]);const a=b0(n,r,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],u=c.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function dK(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function b0(t,e,n,s,o){const r=fK(e,s);let i;if(o){const[l,c]=Ri(t[0],t[1]);i=l*c}else{const[l,c]=zl(t[0],t[1]);i=l*c}const a=dK(n,r);return i*a}function fK(t,e){switch(t){case zt.PACKED_2X2_FLOAT32:return j$(e);case zt.PACKED_2X2_FLOAT16:return K$(e);case zt.UNPACKED_FLOAT32:return U$(e);case zt.UNPACKED_FLOAT16:return G$(e);case zt.PACKED_4X1_UNSIGNED_BYTE:return H$(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function pK(t){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?zt.PACKED_2X2_FLOAT32:zt.UNPACKED_FLOAT32:t?zt.PACKED_2X2_FLOAT16:zt.UNPACKED_FLOAT16}function y0(t,e){if(t===On.UPLOAD)return zt.PACKED_2X2_FLOAT32;if(t===On.RENDER||t==null)return pK(e);if(t===On.DOWNLOAD||t===On.PIXELS)return zt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function w0(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qs{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const rs="if (isnan(x)) return x;",mK="return x;",v0="return abs(x);",gK="return (x >= 0.0) ? x : (exp(x) - 1.0);",xK=rs+`
  return (x < 0.0) ? 0.0 : x;
`,bK=rs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Mr="return x;",yK="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK="return x;",vK=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,IK=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CK=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$K="return 1.0 / (1.0 + exp(-1.0 * x));";class tr{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kK{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);const n=e.length,s=tn("rc",n),o=it(n),r=lK(n,s),i=s.slice(-2),a=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=Hw,NK=1e-7,TK=1e-4,hc={};function EK(t){return t in hc||(hc[t]={}),hc[t]}const RK=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),DK=600;function AK(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*DK/1024/1024}class Jh extends mp{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Ed)n=e;else{const s=ys(H().getNumber("WEBGL_VERSION"),e);n=new Ed(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=ys(H().getNumber("WEBGL_VERSION"));n=new Ed(s),this.binaryCache=EK(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new hK(this.gpgpu),this.numMBBeforeWarning=AK(),this.texData=new i1(this,ro())}nextDataId(){return Jh.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,n,s){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:n,dtype:s,values:e,usage:On.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,s,o,r){if(H().getBool("DEBUG")&&this.checkNumericalProblems(n),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:o,values:n,usage:On.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:s,dtype:o,complexTensorInfos:r,slice:i,shape:a,isPacked:l}=n;if(i!=null){let d;l?d=new tr(a,Mr):d=new qs(a,Mr);const f=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:o}],o),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(s!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Zt());let h;if(o==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=Zs(d,f)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Zt()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const p=this.pendingRead.get(e);return new Promise(m=>p.push(m))}const n=this.texData.get(e),{values:s,shape:o,slice:r,dtype:i,complexTensorInfos:a,isPacked:l}=n;if(r!=null){let p;l?p=new tr(o,Mr):p=new qs(o,Mr);const m=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(i!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...ac(o))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=p[0],g=p[1];h=Zs(m,g)}else if(c==null)h=this.getValuesFromTexture(e);else{const p=q(o);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;we(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ro().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){const s=this.texData.get(e),{values:o,shape:r,slice:i,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;l?f=new tr(r,Mr):f=new qs(r,Mr);const p=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:a}],a),m=this.readToGPU(p,n);return this.disposeIntermediateTensorInfo(p),m}if(c==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,n.customTexShape),h=ro().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(o=>bo(o));return ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const s=e[n];if(!PG(s))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:s,isPacked:o}=this.texData.get(e),r=q(n);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...ac(n)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const i=H().getBool("WEBGL_PACK")&&o===!0,a=i?Sd(n):n,l=i?new ej(a):new QH(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=si(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=si(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,o&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=G2(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:i[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Zt(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Zt(),e)}async getQueryTime(e){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:s,texShape:o,usage:r,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(n,o,r,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=RK){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&q(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){_n("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return SK(e.shape,n)}packedUnaryOp(e,n,s){const o=new tr(e.shape,n),r=this.compileAndRun(o,[e],s);return ro().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const o=X$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,v0,e.dtype);const n=new qs(e.shape,v0),s=this.compileAndRun(n,[e]);return ro().makeTensorFromTensorInfo(s)}makeTensorInfo(e,n,s){let o;if(n==="string"&&s!=null&&s.length>0&&Ia(s[0])){const r=s.map(i=>po(i));o=this.write(r,e,n)}else o=this.write(s,e,n);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:n}}makeOutput(e,n,s){return ro().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,s),this)}unpackTensor(e){const n=new kK(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new cK(e.shape),s=!0;return this.runWebGLProgram(n,[e],e.dtype,null,s)}packedReshape(e,n){const s=[mi(e.shape),...gi(e.shape)],o={dtype:e.dtype,shape:s,dataId:e.dataId},r=[mi(n),...gi(n)],i=new J$(r,s),a=!0,l=[s],c=this.runWebGLProgram(i,[o],e.dtype,l,a);return{dataId:c.dataId,shape:n,dtype:c.dtype}}decode(e,n){const s=this.texData.get(e),{isPacked:o,shape:r,dtype:i}=s;if(n!=null){const d=q(r),f=n[0]*n[1]*4;$(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Sd(r);let l;o?l=new JH(a):l=new ZH(a);const c=!0,u=[n!=null?n:ac(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,u,c,n);return{dtype:i,shape:r,dataId:h.dataId}}runWebGLProgram(e,n,s,o,r=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===ma.DENSE){const x=i!=null?i:ac(e.outputShape);l.texShape=x.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),q(a.shape)===0)return l.values=Ut(a.dtype,0),a;const c=[],u=n.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!e.packedInputs&&q(x.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!e.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!ou(b.shape,x.shape)){const w=x,y=x.shape;x.shape=b.shape,x=this.packedReshape(x,y),c.push(x),b=this.texData.get(x.dataId),w.shape=y}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=YH(e,u,h),f=this.getAndSaveBinary(d,()=>qH(this.gpgpu,e,u,h)),p=this.activeTimers!=null;let m;p&&(m=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||XH(this.gpgpu,f,u,h,o),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),p&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=H().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=Zt();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(e,n,s,o,r=!1){return s=s||n[0].dtype,this.runWebGLProgram(e,n,s,o,r)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=H().getBool("DEBUG");H().set("DEBUG",!1);const n=this.abs(Re(1e-8)).dataSync()[0];if(H().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?NK:TK}uploadToGPU(e){const n=this.texData.get(e),{shape:s,dtype:o,values:r,texture:i,usage:a,isPacked:l}=n;if(i!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Zt());let h=n.texShape;if(h==null&&(h=nH(s,l),n.texShape=h),r!=null){const d=Sd(s);let f,p=h[1],m=h[0];const g=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!g)&&([p,m]=Ri(h[0],h[1])),l?f=new nj(d,g):f=new tj(d,g);const x=g?[m,p]:h,b=this.makeTensorInfo(x,o),w=this.texData.get(b.dataId);g?w.usage=On.PIXELS:w.usage=On.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),p,m,r);const y=[[m,p]],v=!0,I=this.runWebGLProgram(f,[b],o,y,v),C=this.texData.get(I.dataId);n.texShape=C.texShape,n.isPacked=C.isPacked,n.usage=C.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(n.texture=C.texture,n.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=Zt()-u)}else{const d=this.acquireTexture(h,a,o,l);n.texture=d}}convertAndCacheOnCPU(e,n){const s=this.texData.get(e),{dtype:o}=s;return this.releaseGPUData(e),n!=null&&(s.values=FK(n,o)),s.values}acquireTexture(e,n,s,o){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,o)}computeBytes(e,n){return e[0]*e[1]*Qd(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(n),o(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Vc(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(L$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:n,customUniformLocations:s,infLoc:o,nanLoc:r,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=V$(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=n,e.customUniformLocations=s,e.infLoc=o,e.nanLoc=r,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=l,e.outShapeStridesLocation=c,e.outTexShapeLocation=u}}}Jh.nextDataId=0;function FK(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<n.length;++s)n[s]=Math.round(t[s]);return n}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W1()&&ew("webgl",()=>new Jh,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class xi{constructor(e,n,s){this.variableNames=["A","B"],this.outputShape=Fe(n,s),this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ul=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Gl{constructor(e,n,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Fe(n,s);const r=this.outputShape.length;this.enableShapeUniforms=ln(r);let i="";if(o)if(r===0||q(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${it(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=tn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const _K={kernelName:Ga,backendName:"webgl",kernelFunc:Tn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(t){const{inputs:e,backend:n}=t,{real:s,imag:o}=e,r=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(r.dataId),a=Tn({inputs:{x:s},backend:n}),l=Tn({inputs:{x:o},backend:n});return i.complexTensorInfos={real:a,imag:l},r}const OK={kernelName:Sp,backendName:"webgl",kernelFunc:Oo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q$="return (a < 0.) ? b * a : a;",ek=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function MK(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{alpha:r}=s,i=n.makeTensorInfo([],"float32",So(r,"float32")),a=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gl(ek,o.shape,i.shape):new xi(Q$,o.shape,i.shape),l=n.runWebGLProgram(a,[o,i],"float32");return n.disposeIntermediateTensorInfo(i),l}const LK={kernelName:Uu,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tk="return (a < 0.) ? b * a : a;",nk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function PK(t){const{inputs:e,backend:n}=t,{x:s,alpha:o}=e,r=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gl(nk,s.shape,o.shape):new xi(tk,s.shape,o.shape);return n.runWebGLProgram(r,[s,o],"float32")}const BK={kernelName:lh,backendName:"webgl",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oi="if (isnan(x)) return x;";function qe({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:o,backend:r})=>{const{x:i}=o,a=r,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&n!=null){const h=a.texData.get(i.dataId),d=n(h.values,l);return a.makeTensorInfo(i.shape,l,d)}const c=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return c?u=new tr(i.shape,e):u=new qs(i.shape,t),a.runWebGLProgram(u,[i],l)}}function jt({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:r}){return({inputs:i,backend:a})=>{const{a:l,b:c}=i,u=a;if(s&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,x]=[[p.complexTensorInfos.real,m.complexTensorInfos.real],[p.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[y,v]=w,I={dataId:y.dataId,dtype:y.dtype,shape:l.shape},C={dataId:v.dataId,dtype:v.dtype,shape:c.shape},k=new xi(t,l.shape,c.shape);return u.runWebGLProgram(k,[I,C],$n(y.dtype,v.dtype))}),b=Oo({inputs:{real:g,imag:x},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(x),b}const h=r||$n(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&o!=null){const p=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?wr(p):p,x=l.dtype==="string"?wr(m):m,[b,w]=o(l.shape,c.shape,g,x,h),y=u.makeTensorInfo(w,h),v=u.texData.get(y.dataId);return v.values=b,y}const d=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return d?f=new Gl(e,l.shape,c.shape,n):f=new xi(t,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function ga(t,e=!1){if(t==="linear")return e?wK:mK;if(t==="relu")return e?IK:xK;if(t==="elu")return e?vK:gK;if(t==="relu6")return e?CK:bK;if(t==="prelu")return e?nk:tk;if(t==="leakyrelu")return e?ek:Q$;if(t==="sigmoid")return e?$K:yK;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sk{constructor(e,n,s,o=!1,r=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=ln(this.outputShape.length);const u=o?e[1]:e[2],h=Math.ceil(u/2),d=o?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";e[0]<n[0]?w=`int(min(float(rc.x), ${e[0]-1}.))`:n[0]<e[0]&&(y=`int(min(float(rc.x), ${n[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${w};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${m[0]});
          result += (${p[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class C0{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Fe(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $0="return a * b;";function ux(t){const{inputs:e,backend:n}=t,{a:s,b:o}=e,r=$n(s.dtype,o.dtype);if(s.dtype==="complex64"){const a=n.texData.get(s.dataId),l=n.texData.get(o.dataId),c=new C0(I0.REAL,s.shape,o.shape),u=new C0(I0.IMAG,s.shape,o.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],d=n.runWebGLProgram(c,h,"float32"),f=n.runWebGLProgram(u,h,"float32"),p=Oo({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),p}if(n.shouldExecuteOnCPU([s,o])){const a=n.texData.get(s.dataId),l=n.texData.get(o.dataId),[c,u]=zj(s.shape,o.shape,a.values,l.values,r),h=n.makeTensorInfo(u,r),d=n.texData.get(h.dataId);return d.values=c,h}let i;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Gl($0,s.shape,o.shape):i=new xi($0,s.shape,o.shape),n.runWebGLProgram(i,[s,o],r)}const zK={kernelName:Qa,backendName:"webgl",kernelFunc:ux};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WK(t,e,n){const s=[mi(t.shape),...gi(t.shape)],o={dtype:t.dtype,shape:s,dataId:t.dataId},r=[mi(e),...gi(e)],i=new J$(r,s),a=!0,l=[s],c=n.runWebGLProgram(i,[o],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{shape:r}=s,i=n,a=q(o.shape),l=a1(r,a),c=q(l);$(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=i.texData.get(o.dataId);return u.isPacked&&!ou(o.shape,l)&&!(u.texture!==null&&ou(u.shape,l))?WK(o,l,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}const VK={kernelName:uh,backendName:"webgl",kernelFunc:fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k0{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=e;this.outputShape=[o,i];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(n!=null){const h=1/n;c=`sumValue += dot(values * ${oi(h)?h.toPrecision(2):h}, ones);`}let u="";r%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=e;this.outputShape=[o,i];let a="0.0",l="";n==="prod"?a="1.0":n==="min"?(a="1.0 / 1e-20",l="min"):n==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?c="sumValue":n==="prod"?c="prodValue":n==="all"?c="allValue":n==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";n==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):n==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],s=_h(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}function Fr(t,e,n,s){const o=GK(t.shape);let r=t;for(let i=0;i<o.length;i++){const{inSize:a,windowSize:l,outSize:c}=o[i];let u,h;n==="mean"?u=i===0?new k0({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:c},a):new k0({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:c}):u=new UK({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:c},n),h=r,r=s.runWebGLProgram(u,[r],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HK{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[n[i]];this.outputShape=s,this.rank=s.length;const o=it(this.rank),r=jK(n);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function jK(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let o=0;o<t.length;o++)s[t[o]]=n[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KK{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[n[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=it(this.rank),r=Z$("rc",this.rank),i=new Array(this.rank);for(let u=0;u<n.length;u++)i[n[u]]=r[u];const a=`vec2(${i.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qh(t,e,n){const s=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KK(t.shape,e):new HK(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(t,e,n,s){const o=e,r=t.shape.length,i=We(o,t.shape);let a=i;const l=xt(a,r),c=l!=null;let u=t;c&&(u=Qh(t,l,s),a=vt(a.length,r)),Ht("sum",a,r);const[h,d]=Ot(u.shape,a);let f=h;n&&(f=wt(h,i));const p=q(d),g=q(t.shape)/p,x=fe({inputs:{x:u},attrs:{shape:[g,p]},backend:s}),b=hm(t.dtype),w=Fr(x,b,"sum",s),y=fe({inputs:{x:w},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),c&&s.disposeIntermediateTensorInfo(u),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ed(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s;return qK(o,r,i,n)}const XK={kernelName:gh,backendName:"webgl",kernelFunc:ed};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{perm:r}=s,i=n,a=o.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=o.shape[r[u]];let c;if(i.shouldExecuteOnCPU([o])){const h=i.texData.get(o.dataId).values,d=lx(h,o.shape,o.dtype,r,l);c=i.makeTensorInfo(l,o.dtype);const f=i.texData.get(c.dataId);f.values=d}else c=Qh(o,r,i);return c}const YK={kernelName:Yr,backendName:"webgl",kernelFunc:rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok=1e3;function ru({a:t,b:e,transposeA:n,transposeB:s,backend:o,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const c=t.shape.length,u=e.shape.length,h=n?t.shape[c-2]:t.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],f=n?t.shape[c-1]:t.shape[c-2],p=s?e.shape[u-2]:e.shape[u-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),x=q(m),b=q(g),y=Fe(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);$(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[x,h,f]:[x,f,h],I=s?[b,p,d]:[b,d,p],C=fe({inputs:{x:t},backend:o,attrs:{shape:v}}),k=fe({inputs:{x:e},backend:o,attrs:{shape:I}}),N=[C,k],T=Math.max(x,b),A=n?C.shape[1]:C.shape[2],L=r!=null,z=i!=null,U=l==="leakyrelu",V=l!=null?ga(l,!0):null,B=L||z||U||V!=null;let j;if((f===1||p===1)&&A>ok&&B===!1){let Y=C,te=k;n&&(Y=rn({inputs:{x:C},backend:o,attrs:{perm:[0,2,1]}}),N.push(Y)),s&&(te=rn({inputs:{x:k},backend:o,attrs:{perm:[0,2,1]}}),N.push(te));const J=p!==1,oe=p===1;let ie=Y;J&&(ie=fe({inputs:{x:Y},backend:o,attrs:{shape:[T,A,1]}}),N.push(ie));const de=p===1?2:1;let ce=te;oe&&(ce=fe({inputs:{x:te},backend:o,attrs:{shape:[T,1,A]}}),N.push(ce));const ue=ux({inputs:{a:ie,b:ce},backend:o});j=ed({inputs:{x:ue},backend:o,attrs:{axis:de,keepDims:!0}}),N.push(ue)}else{const Y=$n(t.dtype,e.dtype),te=new sk(v,I,[T,f,p],n,s,L,V,z,U),J=[C,k];if(r!=null&&J.push(r),z&&J.push(i),U){const oe=o.makeTensorInfo([],"float32",So(a,"float32"));J.push(oe),N.push(oe)}j=o.runWebGLProgram(te,J,Y)}const P=fe({inputs:{x:j},backend:o,attrs:{shape:y}});N.push(j);for(const Y of N)o.disposeIntermediateTensorInfo(Y);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(t){const{inputs:e,backend:n,attrs:s}=t,{a:o,b:r,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return ru({a:o,b:r,transposeA:l,transposeB:c,backend:n,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const JK={kernelName:Ac,backendName:"webgl",kernelFunc:ZK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S0="return abs(x);";function QK(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=n.texData.get(s.dataId),i=X$(r.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let o;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new tr(s.shape,S0):o=new qs(s.shape,S0),n.runWebGLProgram(o,[s],s.dtype)}const e6={kernelName:Cu,backendName:"webgl",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6=rs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,n6=qe({opSnippet:t6}),s6={kernelName:$a,backendName:"webgl",kernelFunc:n6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6=rs+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,r6=qe({opSnippet:o6}),i6={kernelName:ka,backendName:"webgl",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N0="return a + b;",a6=jt({opSnippet:N0,packedOpSnippet:N0,supportsComplex:!0,cpuKernelImpl:wj}),l6={kernelName:Ii,backendName:"webgl",kernelFunc:a6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c6{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u6{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cc(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return Tn({inputs:{x:s[0]},backend:n});if(s.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Cc({inputs:s.slice(0,l),backend:n}),u=Cc({inputs:s.slice(l),backend:n});return Cc({inputs:[c,u],backend:n})}const o=s.map(l=>l.dtype).reduce((l,c)=>$n(l,c)),r=s.map(l=>l.shape),a=H().getBool("WEBGL_PACK")?new u6(s[0].shape,r):new c6(s[0].shape,r);return n.runWebGLProgram(a,s,o)}const h6={kernelName:wp,backendName:"webgl",kernelFunc:Cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=We(r,o.shape);let c=l;const u=xt(c,a);let h=o;u!=null&&(h=rn({inputs:{x:o},backend:n,attrs:{perm:u}}),c=vt(c.length,a)),Ht("all",c,a);const[d,f]=Ot(h.shape,c),p=q(f),m=fe({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}}),g=Fr(m,m.dtype,"all",n);let x;if(i){const b=wt(d,l);x=fe({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=fe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(h),x}const f6={kernelName:vp,backendName:"webgl",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=We(r,o.shape);let c=l;const u=xt(c,a);let h=o;u!=null&&(h=rn({inputs:{x:o},backend:n,attrs:{perm:u}}),c=vt(c.length,a)),Ht("any",c,a);const[d,f]=Ot(h.shape,c),p=q(f),m=fe({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}}),g=Fr(m,m.dtype,"any",n);let x;if(i){const b=wt(d,l);x=fe({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=fe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(h),x}const m6={kernelName:Ip,backendName:"webgl",kernelFunc:p6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g6{constructor(e,n,s){this.variableNames=["A"];const{windowSize:o,batchSize:r,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a=n==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x6{constructor(e,n,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,$(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],i=Math.ceil(r/n);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=it(l),u=tn("coords",l);let h,d;if(i===1){d=l+1;const k=it(d);h=`
        ${k} sourceLocR = ${k}(${u.join()}, 0);
        ++${u[l-1]};
        ${k} sourceLocG = ${k}(${u.join()}, 0);
        ++${u[l-2]};
        ${k} sourceLocA = ${k}(${u.join()}, 0);
        --${u[l-1]};
        ${k} sourceLocB = ${k}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],m=f.map(k=>"int "+k),g=tn("sourceLocR",d-1).concat("inIdx.r"),x=tn("sourceLocG",d-1).concat("inIdx.g"),b=tn("sourceLocB",d-1).concat("inIdx.b"),w=tn("sourceLocA",d-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",v=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,I=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,C=o?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(t,e,n,s=null){let o=e.shape[0],r=e.shape[1];s!=null&&(o=s.shape[0],r=s.shape[1]);const i=_h(r),a={windowSize:i,inSize:r,batchSize:o,outSize:Math.ceil(r/i)},l=new g6(a,n,s==null),c=[e];s!=null&&c.push(s);const u=t.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=rk(t,e,n,u);return t.disposeIntermediateTensorInfo(u),h}function ik(t,e,n,s=null){const o=s!=null?s.shape:e.shape,r=o[o.length-1],i=_h(r),a=new x6(o,i,n,s==null),l=s==null?[e]:[e,s],c=t.runWebGLProgram(a,l,"int32");if(c.shape.length===e.shape.length){const u=ik(t,e,n,c);return t.disposeIntermediateTensorInfo(c),u}return c}function ak(t,e,n,s){const o=[n];if(Ht("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,e.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],i=t.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=t.unpackTensor(e),r.push(l));const[c,u]=Ot(l.shape,o),h=q(u),d=fe({inputs:{x:l},backend:t,attrs:{shape:[-1,h]}});r.push(d);const f=rk(t,d,s);r.push(f);const p=fe({inputs:{x:f},backend:t,attrs:{shape:c}});return r.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}return ik(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r}=s;let i=We(r,o.shape);const a=xt(i,o.shape.length);let l=o;const c=[];a!=null&&(l=rn({inputs:{x:o},backend:n,attrs:{perm:a}}),c.push(l),i=vt(i.length,l.shape.length)),Ht("argMax",[i[0]],l.shape.length);const u=ak(n,l,i[0],"max");return c.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}const y6={kernelName:$u,backendName:"webgl",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r}=s;let i=We(r,o.shape);const a=xt(i,o.shape.length);let l=o;const c=[];a!=null&&(l=rn({inputs:{x:o},backend:n,attrs:{perm:a}}),c.push(l),i=vt(i.length,l.shape.length)),Ht("argMin",[i[0]],l.shape.length);const u=ak(n,l,i[0],"min");return c.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}const v6={kernelName:ku,backendName:"webgl",kernelFunc:w6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6=rs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,C6=qe({opSnippet:I6}),$6={kernelName:Sa,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6=rs+"return log(x + sqrt(x * x + 1.0));",S6=qe({opSnippet:k6}),N6={kernelName:Na,backendName:"webgl",kernelFunc:S6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6=rs+`
  return atan(x);
`,E6=qe({opSnippet:T6}),R6={kernelName:Ta,backendName:"webgl",kernelFunc:E6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=cx+`
  return atan(a, b);
`,A6=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ul+`
  return result;
`,F6=jt({opSnippet:D6,packedOpSnippet:A6}),_6={kernelName:Ra,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6=rs+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,M6=qe({opSnippet:O6}),L6={kernelName:Ea,backendName:"webgl",kernelFunc:M6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xa{constructor(e,n,s,o=!1,r=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${k} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?r?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(y="avgValue / count");const v=Math.floor(i/4)*4,I=i%4,C=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${v};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${y});
      }
    `}}class hx{constructor(e,n,s,o=!1,r=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const w=n==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let I=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(I="avgValue / count");const C=Math.floor(i/4)*4,k=i%4,N=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${C};
            if (${k===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${k===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${k===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${N}
            }
          }
          setOutput(${I});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e;Wl(o,"avgPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;$(Yt(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=ns(o.shape,r,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Ye(u.inShape,u.outShape))return Tn({inputs:{x:o},backend:n});const h=new xa(u,"avg",!1);return n.runWebGLProgram(h,[o],"float32")}const B6={kernelName:Su,backendName:"webgl",kernelFunc:P6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=Qs(o.shape,r,i,u,a,l,c),d=new hx(h,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}const W6={kernelName:Nu,backendName:"webgl",kernelFunc:z6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V6{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=l-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class U6{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,p=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=f-1-e.padInfo.left,x=1/(n*s*o);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r}=e,i=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Qs(i.shape,a,l,h,c,u),f=new U6(d);return n.runWebGLProgram(f,[o],i.dtype)}const H6={kernelName:$p,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r}=e,i=r;Wl([o,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=ns(i.shape,a,l,1,c),h=new V6(u);return n.runWebGLProgram(h,[o],i.dtype)}const K6={kernelName:Cp,backendName:"webgl",kernelFunc:j6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(t){const{inputs:e,backend:n,attrs:s}=t,{a:o,b:r}=e,{transposeA:i,transposeB:a}=s;return ru({a:o,b:r,transposeA:i,transposeB:a,backend:n})}const X6={kernelName:Tu,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y6{constructor(e,n,s,o,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Fe(e,n),Fe(e,s);let a="0.0";o!=null&&(Fe(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(Fe(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z6{constructor(e,n,s,o,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Fe(e,n),Fe(e,s);let a="vec4(0.0)";o!=null&&(Fe(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(Fe(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6=({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:o,variance:r,offset:i,scale:a}=t;$(o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);const c=[s,o,r];let u=null;i!=null&&(u=i.shape,c.push(i));let h=null;a!=null&&(h=a.shape,c.push(a));const d=H().getBool("WEBGL_PACK_NORMALIZATION")?new Z6(s.shape,o.shape,r.shape,u,h,l):new Y6(s.shape,o.shape,r.shape,u,h,l);return e.runWebGLProgram(d,c,c[0].dtype)},Q6={kernelName:zu,backendName:"webgl",kernelFunc:J6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eq{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=it(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=tq(this.rank);let o;const r=e.map((i,a)=>`sourceLoc.${zf[a]} = start[${a}] + coords.${zf[a]};`);o=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const zf=["x","y","z","w","u","v"];function tq(t){if(t===1)return"sourceLoc";if(t<=6)return zf.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nq{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=it(this.rank),s=tn("coords",this.rank),o=tn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${r})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${o[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(t,e,n,s){const o=s.texData.get(t.dataId),r=s.makeTensorInfo(n,t.dtype),i=s.texData.get(r.dataId);Object.assign(i,o),i.refCount=1,i.shape=n,i.dtype=t.dtype;let a=vm(e,Se(t.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),r}function Mi(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{begin:r,size:i}=s,[a,l]=kh(o,r,i);if(bm(o,a,l),q(l)===0)return n.makeTensorInfo(l,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||o.dtype==="string"){const h=n.texData.get(o.dataId),d=Yj(h.values,a,l,o.shape,o.dtype);return n.makeTensorInfo(l,o.dtype,d)}const{isPacked:c}=n.texData.get(o.dataId),u=wm(o.shape,a,l);if(c||!u){const h=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nq(l):new eq(l),d=[a];return n.runWebGLProgram(h,[o],o.dtype,d)}return n.uploadToGPU(o.dataId),sq(o,a,l,n)}const oq={kernelName:mh,backendName:"webgl",kernelFunc:Mi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{blockShape:r,crops:i}=s;$(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((b,w)=>b*w),l=Nl(o.shape,r,a),c=Tl(l.length,r.length),u=El(o.shape,r,a),h=ag(i,r.length),d=lg(u,i,r.length),f=[],p=fe({inputs:{x:o},backend:n,attrs:{shape:l}}),m=rn({inputs:{x:p},backend:n,attrs:{perm:c}}),g=fe({inputs:{x:m},backend:n,attrs:{shape:u}}),x=Mi({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return f.push(p),f.push(m),f.push(g),f.forEach(b=>n.disposeIntermediateTensorInfo(b)),x},iq={kernelName:Eu,backendName:"webgl",kernelFunc:rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aq(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,weights:r}=e,{size:i}=s,a=n.readSync(o.dataId),l=n.readSync(r.dataId),c=q$(a,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}const lq={kernelName:kp,backendName:"webgl",kernelFunc:aq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq(t){const{inputs:e,backend:n}=t,{s0:s,s1:o}=e,r=n.readSync(s.dataId),i=n.readSync(o.dataId),a=Fe(Array.from(r),Array.from(i));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const uq={kernelName:m1,backendName:"webgl",kernelFunc:cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq="return float(a != b);",lk=jt({opSnippet:hq,cpuKernelImpl:Vj,dtype:"bool"}),dq={kernelName:sh,backendName:"webgl",kernelFunc:lk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(t){const{inputs:e,backend:n}=t,{input:s}=e,o=n.texData.get(s.dataId);return Tn({inputs:{x:o.complexTensorInfos.real},backend:n})}const fq={kernelName:qp,backendName:"webgl",kernelFunc:Hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq="return float(int(x));";function mq(t,e){const n=new qs(t.shape,pq),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return Tn({inputs:{x:o},backend:n});const i=At(o.shape),a=Wf({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),l=Oo({inputs:{real:a,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(a),l}if(o.dtype==="complex64"){const i=Hl({inputs:{input:o},backend:n}),a=Wf({inputs:{x:i},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(i),a}if(!l1(o.dtype,r)){const i=Tn({inputs:{x:o},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(n.shouldExecuteOnCPU([o])){const i=n.texData.get(o.dataId).values,[a,l,c]=Ij(i,o.shape,o.dtype,r);return n.makeTensorInfo(a,l,c)}if(r==="int32")return mq(o,n);if(r==="bool"){const i=n.makeTensorInfo([],"bool",Ut("bool",1)),l=lk({inputs:{a:o,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const gq={kernelName:Da,backendName:"webgl",kernelFunc:Wf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T0="return ceil(x);",xq=qe({opSnippet:T0,packedOpSnippet:T0,cpuKernelImpl:Cj}),bq={kernelName:Aa,backendName:"webgl",kernelFunc:xq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yq{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wq{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vq(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{clipValueMin:r,clipValueMax:i}=s;let a;H().getBool("WEBGL_PACK_CLIP")?a=new wq(o.shape):a=new yq(o.shape);const l=[[r],[i]];return n.runWebGLProgram(a,[o],o.dtype,l)}const Iq={kernelName:Fa,backendName:"webgl",kernelFunc:vq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cq{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function $q(t){const{inputs:e,backend:n}=t,{x:s}=e,o=n.texData.get(s.dataId),r=new Cq(s.shape),i=[E0(s,o.complexTensorInfos.real),E0(s,o.complexTensorInfos.imag)];return n.runWebGLProgram(r,i,i[0].dtype)}const kq={kernelName:Ru,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sq{constructor(e){this.outputShape=[],this.outputShape=Ls(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+e[i][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const a=n[i-1];s.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const o=n.length,r=n[n.length-1];s.push(`else setOutput(getT${o}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nq{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ls(e,n);const s=this.outputShape,o=s.length,r=it(o),i=tn("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][n];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][n];const c=a[n],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${dc(a,c,g)}),
            vec2(${dc(u,c,g)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${dc(a,c,p)}),
          vec2(${dc(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${s[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${s[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${s[o-2]} &&
            ${i[o-1]} < ${s[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function dc(t,e,n){const s=t.indexOf(e);return t.map((r,i)=>i===s?`${r} - ${n}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function td(t){const{inputs:e,backend:n}=t,{input:s}=e,o=n.texData.get(s.dataId);return Tn({inputs:{x:o.complexTensorInfos.imag},backend:n})}const Tq={kernelName:zp,backendName:"webgl",kernelFunc:td};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yi(t,e,n){const s=t[0].dtype;if(s==="complex64"){const h=t.map(g=>Hl({inputs:{input:g},backend:n})),d=t.map(g=>td({inputs:{input:g},backend:n})),f=Yi(h,e,n),p=Yi(d,e,n),m=Oo({inputs:{real:f,imag:p},backend:n});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),m}let o=n.shouldExecuteOnCPU(t);if(s==="string"&&(o=!0),o){const h=t.map(b=>{const w=q(b.shape.slice(e));return fe({inputs:{x:b},backend:n,attrs:{shape:[-1,w]}})}),d=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),f=Ls(h.map(b=>b.shape),1),p=h[0].shape[0]===1,m=$j(d,f,s,p),g=Ls(t.map(b=>b.shape),e),x=n.makeTensorInfo(g,s,m);return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}const r=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>r){const h=[];for(let f=0;f<t.length;f+=r){const p=t.slice(f,f+r);h.push(Yi(p,e,n))}const d=Yi(h,e,n);for(const f of h)n.disposeIntermediateTensorInfo(f);return d}if(H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const h=new Nq(t.map(d=>d.shape),e);return n.runWebGLProgram(h,t,s)}const{tensors2D:i,outShape:a}=Eq(t,e,n),l=new Sq(i.map(h=>h.shape)),c=n.runWebGLProgram(l,i,s);i.forEach(h=>n.disposeIntermediateTensorInfo(h));const u=fe({inputs:{x:c},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(c),u}function Eq(t,e,n){const s=Ls(t.map(r=>r.shape),e);return{tensors2D:t.map(r=>fe({inputs:{x:r},attrs:{shape:[-1,q(r.shape.slice(e))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(t){const{inputs:e,backend:n,attrs:s}=t,{axis:o}=s,r=We(o,e[0].shape)[0],i=e.map(c=>c.shape);og(i,r);const a=Ls(e.map(c=>c.shape),r);if(q(a)===0)return n.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>q(c.shape)>0);return l.length===1?Tn({inputs:{x:l[0]},backend:n}):Yi(l,r,n)}const Rq={kernelName:Du,backendName:"webgl",kernelFunc:ck};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uk{constructor(e,n=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1;let y="",v="";s&&(o?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const I=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${v}
        setOutput(result);
      }
    `}}class Dq{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${a});
      const ivec3 pads = ivec3(${n}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hk{constructor(e,n=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ln(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const b=i%2===0?gp(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";s&&(o?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,p="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aq{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);const{dataFormat:s}=n,o=an(),r=s==="channelsLast",i=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function dk({x:t,filter:e,convInfo:n,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:a=null}){const l=t.shape,c=s.texData.get(t.dataId),u=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f=n.dataFormat==="channelsLast",p=!1,m=!1;let g;const x=[];if(r!=null){const y=iu(r.shape,f);y!=null&&(r=fe({inputs:{x:r},backend:s,attrs:{shape:y}}),x.push(r))}if(o!=null){const y=iu(o.shape,f);y!=null&&(o=fe({inputs:{x:o},backend:s,attrs:{shape:y}}),x.push(o))}if(!((h===1||d===1)&&u>ok)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&Ye(c.shape.slice(-3),l.slice(-3))){const y=l[0]*l[1]*(l[2]+1),v={dataId:t.dataId,shape:[1,y,n.inChannels],dtype:t.dtype},I=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,$(ou(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);const C=fe({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});x.push(C);const k=ru({a:v,b:C,backend:s,transposeA:p,transposeB:m,bias:o,activation:a,preluActivationWeights:r,leakyreluAlpha:i}),N=s.texData.get(k.dataId);$(N.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=I,N.shape=n.outShape,g=Tn({inputs:{x:k},backend:s}),g.shape=n.outShape,x.push(k)}else{const y=n.outHeight*n.outWidth,v=fe({inputs:{x:t},backend:s,attrs:{shape:f?[n.batchSize,y,n.inChannels]:[n.batchSize,n.inChannels,y]}}),I=fe({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),C=ru({a:f?v:I,b:f?I:v,transposeA:!f,transposeB:m,backend:s,bias:o,activation:a,preluActivationWeights:r,leakyreluAlpha:i});g=fe({inputs:{x:C},backend:s,attrs:{shape:n.outShape}}),x.push(v),x.push(I),x.push(C)}for(const y of x)s.disposeIntermediateTensorInfo(y);return g}function fk({x:t,filter:e,convInfo:n,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=n,p=f==="channelsLast",m=l*c*u,g=d*h,x=[n.batchSize,m,g],b=!0,w=!1,y=[];if(r!=null){const P=iu(r.shape,p);P!=null&&(r=fe({inputs:{x:r},backend:s,attrs:{shape:P}}),y.push(r))}if(o!=null){const P=iu(o.shape,p);P!=null&&(o=fe({inputs:{x:o},backend:s,attrs:{shape:P}}),y.push(o))}const v=fe({inputs:{x:e},backend:s,attrs:{shape:[1,m,q(e.shape)/m]}});y.push(v);const I=new Aq(x,n),C=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(I,[t],"float32",C),N=fe({inputs:{x:k},backend:s,attrs:{shape:x}});y.push(k),y.push(N);const T=o!=null,A=r!=null,L=a==="leakyrelu",z=a?ga(a,!0):null,U=new sk(p?N.shape:v.shape,p?v.shape:N.shape,p?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,w,T,z,A,L),V=p?[N,v]:[v,N];if(o&&V.push(o),A&&V.push(r),L){const P=s.makeTensorInfo([],"float32",So(i,"float32"));V.push(P),y.push(P)}const B=s.runWebGLProgram(U,V,"float32"),j=fe({inputs:{x:B},backend:s,attrs:{shape:n.outShape}});y.push(B);for(const P of y)s.disposeIntermediateTensorInfo(P);return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fq(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=eo(l),d=Gt(o.shape,r.shape,i,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=dk({x:o,filter:r,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const m=new hk(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=n.runWebGLProgram(m,[o,r],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))f=fk({x:o,filter:r,convInfo:d,backend:n});else{const m=new uk(d);f=n.runWebGLProgram(m,[o,r],"float32")}const p=fe({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),p}const _q={kernelName:Au,backendName:"webgl",kernelFunc:Fq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Mq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=e.dataFormat==="channelsLast",a=n-1-e.padInfo.top,l=s-1-e.padInfo.left,c=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Lq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Pq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=n-1-e.padInfo.front,c=s-1-e.padInfo.top,u=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bq(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,dy:r}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=eo(l),d=Gt(o.shape,u,i,1,a,c,!1,h),f=new Oq(d);return n.runWebGLProgram(f,[o,r],"float32")}const zq={kernelName:Np,backendName:"webgl",kernelFunc:Bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wq(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,filter:r}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=eo(c),d=Gt(i,r.shape,a,1,l,u,!1,h),f=new Mq(d);return n.runWebGLProgram(f,[o,r],"float32")}const Vq={kernelName:Fu,backendName:"webgl",kernelFunc:Wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uq(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l}=s,c=No(o.shape,r.shape,i,l,a),u=new Dq(c);return n.runWebGLProgram(u,[o,r],"float32")}const Gq={kernelName:_u,backendName:"webgl",kernelFunc:Uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hq(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,dy:r}=e,{strides:i,pad:a,filterShape:l}=s,c=No(o.shape,l,i,1,a),u=new Lq(c);return n.runWebGLProgram(u,[o,r],"float32")}const jq={kernelName:Tp,backendName:"webgl",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kq(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,filter:r}=e,{pad:i,strides:a,inputShape:l}=s,c=No(l,r.shape,a,1,i),u=new Pq(c);return n.runWebGLProgram(u,[o,r],"float32")}const qq={kernelName:Ep,backendName:"webgl",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=Oi+`
  return cos(x);
`,Yq=qe({opSnippet:Xq}),Zq={kernelName:_a,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Qq=qe({opSnippet:Jq}),eX={kernelName:Oa,backendName:"webgl",kernelFunc:Qq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tX{constructor(e,n,s,o,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,c]=e,[u]=n,[h,d]=s;this.outputShape=[u,h,d,c];const f=o==="bilinear"?1:0,[p,m]=[`${a-1}.0`,`${l-1}.0`],[g,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[w,y,v]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:o,boxes:r,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,u=new tX(o.shape,r.shape,a,l,c);return n.runWebGLProgram(u,[o,r,i],"float32")},sX={kernelName:Dp,backendName:"webgl",kernelFunc:nX};var ba;(function(t){t.Prod="*",t.Sum="+"})(ba||(ba={}));class R0{constructor(e,n,s,o){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===ba.Prod?"1.0":"0.0",a=s?i:`getX(${D0(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=o?`end != ${l-1}`:"end != 0",u=o?"end + 1":"end - 1"):(c=o?`end + pow2 < ${l}`:"end >= pow2",u=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${it(r)} coords = getOutputCoords();
        int end = ${A0(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${A0(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${D0(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function D0(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function A0(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(t,e,n,s,o,r){const i=e.shape.length,a=xt([s],i);let l=e;a!=null&&(l=rn({inputs:{x:e},backend:n,attrs:{perm:a}}));const c=vt(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=Tn({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new R0(t,l.shape,!1,r),p=[[d]],m=h;h=n.runWebGLProgram(f,[h],h.dtype,p),n.disposeIntermediateTensorInfo(m)}if(o){const d=new R0(t,l.shape,o,r),f=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(f)}if(a!=null){const d=To(a),f=rn({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;return pk(ba.Prod,o,n,r,i,a)}const rX={kernelName:Rp,backendName:"webgl",kernelFunc:oX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;return pk(ba.Sum,o,n,r,i,a)}const aX={kernelName:Ou,backendName:"webgl",kernelFunc:iX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,weights:r}=e,{size:i,binaryOutput:a}=s;if(o.shape.length===1){const l=n.readSync(o.dataId),c=n.readSync(r.dataId),u=q$(l,c,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}else if(o.shape.length===2){const l=n.bufferSync(o),c=n.bufferSync(r),u=vj(l,c,i,a);return n.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const cX={kernelName:g1,backendName:"webgl",kernelFunc:lX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uX{constructor(e,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{blockSize:r,dataFormat:i}=s,a=o.shape[0],l=i==="NHWC"?o.shape[1]:o.shape[2],c=i==="NHWC"?o.shape[2]:o.shape[3],u=i==="NHWC"?o.shape[3]:o.shape[1],h=l*r,d=c*r,f=u/(r*r),p=i==="NHWC"?[a,h,d,f]:[a,f,h,d],m=new uX(p,r,i);return n.runWebGLProgram(m,[o],o.dtype)}const dX={kernelName:Ap,backendName:"webgl",kernelFunc:hX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mk{constructor(e,n=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ln(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let c="",u="";s&&(o?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gk{constructor(e,n=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ln(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const b=x*2;if(f+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?gp(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",m="";s&&(o?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:p=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),$(Yt(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Gt(o.shape,r.shape,i,u,a,c,!0);let d;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new gk(h):d=new mk(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[o,r],"float32",f)}const pX={kernelName:Mu,backendName:"webgl",kernelFunc:fX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mX{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class gX{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=n-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,dy:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=Gt(o.shape,u,i,a,l,c,!0),d=new mX(h);return n.runWebGLProgram(d,[o,r],"float32")}const bX={kernelName:Fp,backendName:"webgl",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yX(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,filter:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=Gt(u,r.shape,i,a,l,c,!0),d=new gX(h);return n.runWebGLProgram(d,[o,r],"float32")}const wX={kernelName:_p,backendName:"webgl",kernelFunc:yX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vX{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IX(t){const{inputs:e,backend:n}=t,{x:s}=e,o=[...s.shape,...s.shape],r=q(s.shape),i=fe({inputs:{x:s},backend:n,attrs:{shape:[r]}}),a=new vX(r),l=n.runWebGLProgram(a,[i],i.dtype),c=fe({inputs:{x:l},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}const CX={kernelName:x1,backendName:"webgl",kernelFunc:IX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $X{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:s,padInfo:o,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=e,{top:h,left:d}=o;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kX(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l}=s,c=Il(o.shape,r.shape,i,a,"NHWC",l);let u;const h=new $X(c);u=n.runWebGLProgram(h,[o,r],"float32");const d=fe({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),d}const SX={kernelName:Lu,backendName:"webgl",kernelFunc:kX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NX(t){const{inputs:e,backend:n,attrs:s}=t,{equation:o}=s,r=e,{allDims:i,summedDims:a,idDims:l}=gg(o,r.length);bg(i.length,l,r);const{path:c,steps:u}=yg(a,l),h=u.length;let d=null,f=i.length;const p=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:b}=xg(f,l[g]);let w;wg(x)?w=r[g]:(w=rn({inputs:{x:r[g]},backend:n,attrs:{perm:x}}),p.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);Ye(w.shape,y)||(w=fe({inputs:{x:w},backend:n,attrs:{shape:y}}),p.push(w)),d===null?d=w:(d=ux({inputs:{a:w,b:d},backend:n}),p.push(d))}m<h-1&&(c[m]>=0&&(d=ed({inputs:{x:d},backend:n,attrs:{axis:c[m]-(i.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const TX={kernelName:b1,backendName:"webgl",kernelFunc:NX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EX="return (x >= 0.0) ? x : (exp(x) - 1.0);",RX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,DX=qe({opSnippet:EX,packedOpSnippet:RX}),AX={kernelName:La,backendName:"webgl",kernelFunc:DX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FX="return (b >= 1.0) ? a : a * (b + 1.0);",_X=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,OX=t=>{const{inputs:e,backend:n}=t,{dy:s,y:o}=e,r=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gl(_X,s.shape,o.shape):new xi(FX,s.shape,o.shape);return n.runWebGLProgram(r,[s,o],s.dtype)},MX={kernelName:Op,backendName:"webgl",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LX=`
  return vec4(equal(a, b));
`,PX="return float(a == b);",BX=jt({opSnippet:PX,packedOpSnippet:LX,dtype:"bool",cpuKernelImpl:kj}),zX={kernelName:Pu,backendName:"webgl",kernelFunc:BX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${cg};
  float a1 = ${ug};
  float a2 = ${hg};
  float a3 = ${dg};
  float a4 = ${fg};
  float a5 = ${pg};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,VX=qe({opSnippet:WX}),UX={kernelName:Pa,backendName:"webgl",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX=Oi+`
  return exp(x);
`,HX=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xk=qe({opSnippet:GX,packedOpSnippet:HX,cpuKernelImpl:Sj,dtype:"float32"}),jX={kernelName:Ba,backendName:"webgl",kernelFunc:xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(t){const{inputs:e,attrs:n,backend:s}=t,{dim:o}=n,{input:r}=e,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&($(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),fe({inputs:{x:r},backend:s,attrs:{shape:a}})}const KX={kernelName:Bu,backendName:"webgl",kernelFunc:Vf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F0="return exp(x) - 1.0;",qX=qe({opSnippet:F0,packedOpSnippet:F0,cpuKernelImpl:Nj}),XX={kernelName:za,backendName:"webgl",kernelFunc:qX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _0{constructor(e,n,s){this.variableNames=["real","imag"];const o=n[1];this.outputShape=n;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${o}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(t,e,n){const s=n.texData.get(t.dataId),o=q(t.shape),r=t.shape[t.shape.length-1],i=o/r,a=fe({inputs:{x:t},backend:n,attrs:{shape:[i,r]}}),l=a.shape,c=new _0("real",l,e),u=new _0("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(c,h,"float32"),f=n.runWebGLProgram(u,h,"float32"),p=Oo({inputs:{real:d,imag:f},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f);const m=fe({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(t){const{inputs:e,backend:n}=t,{input:s}=e;return bk(s,!1,n)}const ZX={kernelName:Mp,backendName:"webgl",kernelFunc:YX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JX{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(t){const{backend:e,attrs:n}=t,{shape:s,value:o}=n;let{dtype:r}=n;if(r=r||Ca(o),r==="string"){const i=Ft(r,q(s));return i.fill(o),e.makeTensorInfo(s,r,i)}else{const i=new JX(s,o),a=[[o]];return e.runWebGLProgram(i,[],r,a)}}const QX={kernelName:Lp,backendName:"webgl",kernelFunc:jl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e5{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:Pp,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,o=new e5(n.shape);return s.runWebGLProgram(o,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O0="return floor(x);",n5=qe({opSnippet:O0,packedOpSnippet:O0,cpuKernelImpl:Tj}),s5={kernelName:Wa,backendName:"webgl",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,r5=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,i5=jt({opSnippet:o5,packedOpSnippet:r5,dtype:"int32"}),a5={kernelName:Va,backendName:"webgl",kernelFunc:i5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l5{constructor(e){this.variableNames=["A"];const n=an(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c5{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=an(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:rf,backendName:"webgl",kernelFunc:h5};let Lr,Rd=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function h5(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:o}=e;const{numChannels:r}=s,i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[l,c]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],u=[c,l],h=[c,l,r];if(a||i){const m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Lr==null||m!==Rd)&&(Rd=m,Lr=document.createElement("canvas").getContext("2d",{willReadFrequently:Rd})),Lr.canvas.width=l,Lr.canvas.height=c,Lr.drawImage(o,0,0,l,c),o=Lr.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=On.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),o);const f=H().getBool("WEBGL_PACK")?new c5(h):new l5(h),p=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s,m=eo(u),g=Gt(o.shape,r.shape,l,h,c,d,!1,m);let x;const b=[],w=i!=null,y=a!=null,v=f==="leakyrelu",I=()=>{const k=[o,r],N=(T,A)=>{if(A==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const L=fe({inputs:{x:T},backend:n,attrs:{shape:[T.shape[0],1,1]}});return b.push(L),L}return T};if(w&&k.push(N(i,u)),y&&k.push(N(a,u)),v){const T=n.makeTensorInfo([],"float32",So(p,"float32"));k.push(T),b.push(T)}return k};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=dk({x:o,filter:r,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(g.strideWidth<=2&&m==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const k=f?ga(f,!0):null,N=new hk(g,w,k,y,v),T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=I();x=n.runWebGLProgram(N,A,"float32",T)}else if(H().getBool("WEBGL_CONV_IM2COL"))x=fk({x:o,filter:r,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const k=f?ga(f,!1):null,N=new uk(g,w,k,y,v),T=I();x=n.runWebGLProgram(N,T,"float32")}const C=fe({inputs:{x},backend:n,attrs:{shape:g.outShape}});return b.push(x),b.forEach(k=>n.disposeIntermediateTensorInfo(k)),C}const f5={kernelName:Fc,backendName:"webgl",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s,p=[];let m=u;m==null&&(m=[1,1]),$(Yt(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Gt(o.shape,r.shape,l,m,c,h,!0),x=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?ga(d,x):null,w=[o,r],y=i!=null,v=a!=null,I=d==="leakyrelu";if(y&&w.push(i),v&&w.push(a),I){const T=n.makeTensorInfo([],"float32",So(f,"float32"));w.push(T),p.push(T)}let C;x?C=new gk(g,y,b,v,I):C=new mk(g,y,b,v,I);const k=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(C,w,"float32",k);return p.forEach(T=>n.disposeIntermediateTensorInfo(T)),N}const m5={kernelName:T1,backendName:"webgl",kernelFunc:p5};class g5{constructor(e,n,s,o){this.sliceDim=e,this.strides=n,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=s;const r=it(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(t){const{inputs:e,backend:n}=t,{params:s,indices:o}=e,r=o.shape,i=r[r.length-1],a=q(s.shape),[l,c,u,h]=xm(s,o),d=fe({inputs:{x:o},backend:n,attrs:{shape:[c,i]}}),f=fe({inputs:{x:s},backend:n,attrs:{shape:[q(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const x=n.readSync(o.dataId),b=n.bufferSync(s),w=Ej(x,b,s.dtype,c,i,u,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,w.values)}const p=new g5(i,h,[c,u],s.shape),m=n.runWebGLProgram(p,[f,d],f.dtype),g=fe({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const b5={kernelName:y1,backendName:"webgl",kernelFunc:x5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y5{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=it(this.rank),o=w5(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function w5(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<t.length;o++)o===2?s.push("index"):s.push(`${n[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,indices:r}=e,{axis:i,batchDims:a}=s,l=We(i,o.shape)[0];if(H().get("DEBUG")){const b=n.readSync(r.dataId),w=o.shape[l];for(let y=0;y<b.length;++y){const v=b[y];$(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const c=Ig(o,r,l,a),u=q(r.shape),h=[],d=fe({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=fe({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([o,r])||o.dtype==="string"){const b=n.bufferSync(f),w=n.bufferSync(d),y=Rj(w,b,p);return h.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(c.outputShape,y.dtype,y.values)}const m=new y5(d.shape,p),g=n.runWebGLProgram(m,[d,f],d.dtype);h.push(g);const x=fe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}const v5={kernelName:Wu,backendName:"webgl",kernelFunc:yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5="return float(a > b);",C5=`
  return vec4(greaterThan(a, b));
`,$5=jt({opSnippet:I5,packedOpSnippet:C5,cpuKernelImpl:Dj,dtype:"bool"}),k5={kernelName:Vu,backendName:"webgl",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5="return float(a >= b);",N5=`
  return vec4(greaterThanEqual(a, b));
`,T5=jt({opSnippet:S5,packedOpSnippet:N5,dtype:"bool",cpuKernelImpl:Aj}),E5={kernelName:Ua,backendName:"webgl",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(t){const{inputs:e,backend:n}=t,{input:s}=e;return bk(s,!0,n)}const D5={kernelName:Bp,backendName:"webgl",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5="return float(!isnan(x) && !isinf(x));",F5=qe({opSnippet:A5,dtype:"bool"}),_5={kernelName:Ha,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5="return float(isinf(x));",M5=qe({opSnippet:O5,dtype:"bool"}),L5={kernelName:ja,backendName:"webgl",kernelFunc:M5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5="return float(isnan(x));",B5=qe({opSnippet:P5,dtype:"bool"}),z5={kernelName:Ka,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5="return float(a < b);",V5=`
  return vec4(lessThan(a, b));
`,U5=jt({opSnippet:W5,packedOpSnippet:V5,cpuKernelImpl:Fj,dtype:"bool"}),G5={kernelName:Gu,backendName:"webgl",kernelFunc:U5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5="return float(a <= b);",j5=`
  return vec4(lessThanEqual(a, b));
`,K5=jt({opSnippet:H5,packedOpSnippet:j5,cpuKernelImpl:_j,dtype:"bool"}),q5={kernelName:Hu,backendName:"webgl",kernelFunc:K5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X5(t){const{backend:e,attrs:n}=t,{start:s,stop:o,num:r}=n,i=Oj(s,o,r);return e.makeTensorInfo([i.length],"float32",i)}const Y5={kernelName:w1,backendName:"webgl",kernelFunc:X5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5=Oi+`
  return x < 0.0 ? 0./0. : log(x);
`,J5=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Q5=qe({opSnippet:Z5,packedOpSnippet:J5,cpuKernelImpl:Mj}),e8={kernelName:qa,backendName:"webgl",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8=Oi+`
  return log(1.0 + x);
`,n8=qe({opSnippet:t8}),s8={kernelName:Xa,backendName:"webgl",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8="return float(a >= 1.0 && b >= 1.0);",r8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,i8=jt({opSnippet:o8,packedOpSnippet:r8,dtype:"bool"}),a8={kernelName:ju,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8="return float(!(x >= 1.0));",c8=qe({opSnippet:l8}),u8={kernelName:Ku,backendName:"webgl",kernelFunc:c8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8="return float(a >= 1.0 || b >= 1.0);",d8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,f8=jt({opSnippet:h8,packedOpSnippet:d8,dtype:"bool"}),p8={kernelName:qu,backendName:"webgl",kernelFunc:f8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m8{constructor(e,n,s,o,r){this.variableNames=["x"],this.outputShape=[];const i=n,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${o}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g8{constructor(e,n,s,o,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${o}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{depthRadius:r,bias:i,alpha:a,beta:l}=s,c=H().getBool("WEBGL_PACK_NORMALIZATION")?new g8(o.shape,r,i,a,l):new m8(o.shape,r,i,a,l);return n.runWebGLProgram(c,[o],o.dtype)},b8={kernelName:Xu,backendName:"webgl",kernelFunc:x8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y8{constructor(e,n,s,o,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=s,this.alpha=o,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:o,y:r,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new y8(o.shape,a,l,c,u);return n.runWebGLProgram(h,[o,r,i],o.dtype)},v8={kernelName:Wp,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I8(t,e,n,s){const o=q(e),i=q(t.shape)/o,a=fe({inputs:{x:t},attrs:{shape:[i,o]},backend:s}),l=Fr(a,t.dtype,"max",s),c=fe({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{reductionIndices:r,keepDims:i}=s,a=o.shape.length,l=We(r,o.shape);let c=l;const u=xt(c,a),h=u!=null,d=n.shouldExecuteOnCPU([o]);let f=o;if(h){if(d){const w=n.texData.get(f.dataId).values,y=new Array(a);for(let C=0;C<y.length;C++)y[C]=o.shape[u[C]];const v=lx(w,o.shape,o.dtype,u,y);f=n.makeTensorInfo(y,o.dtype);const I=n.texData.get(f.dataId);I.values=v}else f=Qh(o,u,n);c=vt(c.length,a)}Ht("max",c,a);const[p,m]=Ot(f.shape,c);let g=p;i&&(g=wt(p,l));let x;if(d){const w=n.texData.get(f.dataId).values,y=Lj(w,q(m),g,o.dtype);x=n.makeTensorInfo(g,o.dtype);const v=n.texData.get(x.dataId);v.values=y}else x=I8(f,m,g,n);return h&&n.disposeIntermediateTensorInfo(f),x}const C8={kernelName:Yu,backendName:"webgl",kernelFunc:wk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=cx+`
  return max(a, b);
`,k8=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ul+`
  return result;
`,S8=jt({opSnippet:$8,packedOpSnippet:k8,cpuKernelImpl:Pj}),N8={kernelName:Ya,backendName:"webgl",kernelFunc:S8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e;Wl(o,"maxPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;$(Yt(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=ns(o.shape,r,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Ye(u.inShape,u.outShape))return Tn({inputs:{x:o},backend:n});const h=new xa(u,"max",!1);return n.runWebGLProgram(h,[o],o.dtype)}const E8={kernelName:Zu,backendName:"webgl",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{filterSize:r,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=Qs(o.shape,r,i,u,a,c,l),d=new hx(h,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}const D8={kernelName:Ju,backendName:"webgl",kernelFunc:R8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A8{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,s=e.strideWidth,o=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=r-1-e.padInfo.top,l=i-1-e.padInfo.left,c=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class F8{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=c-1-e.padInfo.top,f=u-1-e.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r}=e,i=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Qs(i.shape,a,l,h,c,u),f=new hx(d,"max",!0),p=n.runWebGLProgram(f,[i],i.dtype),m=new F8(d),g=n.runWebGLProgram(m,[o,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}const O8={kernelName:Up,backendName:"webgl",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:o,input:r,output:i}=e,a=r;Wl([r,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=ns(a.shape,l,c,1,u,h),f=!0,p=new xa(d,"max",f),m=n.runWebGLProgram(p,[a],a.dtype),g=new A8(d),x=n.runWebGLProgram(g,[o,m],a.dtype);return n.disposeIntermediateTensorInfo(m),x}const L8={kernelName:Vp,backendName:"webgl",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(t,e,n,s){let o=new xa(n,"max",!1);const r=s.runWebGLProgram(o,[t],"float32");o=new xa(n,"max",!0,!0,e);const i=s.runWebGLProgram(o,[t],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8={kernelName:v1,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:o,strides:r,pad:i,includeBatchInIndex:a}=e,l=n;$(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];$(Yt(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=ns(s.shape,o,r,c,i),[h,d]=P8(s,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(t,e,n,s){const o=q(e),i=q(t.shape)/o,a=fe({inputs:{x:t},attrs:{shape:[i,o]},backend:s}),l=Fr(a,"float32","mean",s),c=fe({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8={kernelName:Qu,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:o,axis:r}=e,i=n,a=s.shape.length,l=We(r,s.shape);let c=l;const u=xt(c,a),h=u!=null,d=i.shouldExecuteOnCPU([s]),f=[];let p=s;if(h){if(d){const y=i.texData.get(p.dataId).values,v=new Array(a);for(let k=0;k<v.length;k++)v[k]=s.shape[u[k]];const I=lx(y,s.shape,s.dtype,u,v);p=i.makeTensorInfo(v,s.dtype);const C=i.texData.get(p.dataId);C.values=I}else p=Qh(s,u,i);f.push(p),c=vt(c.length,a)}Ht("sum",c,a);const[m,g]=Ot(p.shape,c);let x=m;o&&(x=wt(m,l));const b=z8(p,g,x,i);for(const w of f)i.disposeIntermediateTensorInfo(w);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=We(r,o.shape);let c=l;const u=xt(c,a);let h=o;u!=null&&(h=rn({inputs:{x:o},backend:n,attrs:{perm:u}}),c=vt(c.length,o.shape.length)),Ht("min",c,a);const[d,f]=Ot(h.shape,c),p=q(f),m=fe({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}}),g=Fr(m,m.dtype,"min",n);let x;if(i){const b=wt(d,l);x=fe({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=fe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(h),x}const U8={kernelName:eh,backendName:"webgl",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8=cx+`
  return min(a, b);
`,H8=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ul+`
  return result;
`,j8=jt({opSnippet:G8,packedOpSnippet:H8,cpuKernelImpl:Bj}),K8={kernelName:Za,backendName:"webgl",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q8{constructor(e,n,s){this.variableNames=["x"],this.outputShape=n.map((u,h)=>u[0]+e[h]+u[1]);const o=e.length,r=it(o),i=n.map(u=>u[0]).join(","),a=n.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),c=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X8{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((p,m)=>p[0]+e[m]+p[1]);const o=e.length,r=it(o),i=n.map(p=>p[0]).join(","),a=n.map((p,m)=>p[0]+e[m]).join(","),l=tn("rc",o),c=tn("source",o),u=`${l[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let f="";if(o===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[o-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[o-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[o-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8=({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:o,mode:r}=n,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new X8(s.shape,o,r):new q8(s.shape,o,r);return e.runWebGLProgram(i,[s],s.dtype)},Z8={kernelName:th,backendName:"webgl",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8=`if (b == 0.0) return NAN;
  return mod(a, b);`,Q8=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ul+`
  return result;
`,eY=jt({opSnippet:J8,packedOpSnippet:Q8}),tY={kernelName:Ja,backendName:"webgl",kernelFunc:eY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nY{constructor(e,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=`
if (a == b) {
  return 1.0;
};
return a / b;`,oY=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,vk=jt({opSnippet:sY,packedOpSnippet:oY,checkOutOfBounds:!0}),rY={kernelName:Ma,backendName:"webgl",kernelFunc:vk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M0="return a - b;",Ik=jt({opSnippet:M0,packedOpSnippet:M0,supportsComplex:!0,cpuKernelImpl:oK}),iY={kernelName:pl,backendName:"webgl",kernelFunc:Ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(t){const{inputs:e,backend:n,attrs:s}=t,{logits:o}=e,{dim:r}=s,i=We([r],o.shape),a=wk({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=wt(a.shape,i),c=fe({inputs:{x:a},backend:n,attrs:{shape:l}}),u=Ik({inputs:{a:o,b:c},backend:n}),h=xk({inputs:{x:u},backend:n}),d=ed({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=fe({inputs:{x:d},backend:n,attrs:{shape:l}}),p=vk({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),p}const aY={kernelName:yh,backendName:"webgl",kernelFunc:Ck};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(t){const{inputs:e,backend:n,attrs:s}=t,{logits:o}=e,{numSamples:r,seed:i,normalized:a}=s,l=a?o:Ck({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new nY(c,u,r),d=[[i]],f=n.runWebGLProgram(h,[l],"int32",d);return a||n.disposeIntermediateTensorInfo(l),f}const cY={kernelName:I1,backendName:"webgl",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uY=rs+`
  return -x;
`,hY=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function dY(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const r=n.texData.get(s.dataId),[i,a]=Wj(r.values,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}let o;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new tr(s.shape,hY):o=new qs(s.shape,uY),n.runWebGLProgram(o,[s],s.dtype)}const fY={kernelName:nh,backendName:"webgl",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY=qm;function mY(t){_n("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,c=n.readSync(o.dataId),u=n.readSync(r.dataId),{selectedIndices:h}=pY(c,u,i,a,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const gY={kernelName:Gp,backendName:"webgl",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=Xm;function bY(t){_n("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(o.dataId),h=n.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=xY(u,h,i,a,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const yY={kernelName:Hp,backendName:"webgl",kernelFunc:bY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wY=Ym;function vY(t){_n("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(o.dataId),h=n.readSync(r.dataId),d=i,f=a,p=l,m=c,{selectedIndices:g,selectedScores:x}=wY(u,h,d,f,p,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const IY={kernelName:jp,backendName:"webgl",kernelFunc:vY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CY{constructor(e,n,s,o){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:o}=e,{dtype:r,depth:i,onValue:a,offValue:l}=s,c=q(o.shape),u=new CY(c,i,a,l),h=fe({inputs:{x:o},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(u,[h],r);n.disposeIntermediateTensorInfo(h);const f=[...o.shape,i],p=fe({inputs:{x:d},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),p},kY={kernelName:rh,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const o=Hl({inputs:{input:s},backend:n}),r=au({inputs:{x:o},backend:n}),i=td({inputs:{input:s},backend:n}),a=au({inputs:{x:i},backend:n}),l=Oo({inputs:{real:r,imag:a},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return jl({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const SY={kernelName:Ih,backendName:"webgl",kernelFunc:au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=Hl({inputs:{input:s},backend:n}),r=$k({inputs:{x:o},backend:n}),i=td({inputs:{input:s},backend:n}),a=au({inputs:{x:i},backend:n}),l=Oo({inputs:{real:r,imag:a},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return jl({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const NY={kernelName:oh,backendName:"webgl",kernelFunc:$k};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TY(t){const{inputs:e,backend:n,attrs:s}=t,{axis:o}=s;if(e.length===1)return Vf({inputs:{input:e[0]},backend:n,attrs:{dim:o}});const r=e[0].shape,i=e[0].dtype;e.forEach(u=>{ts(r,u.shape,"All tensors passed to stack must have matching shapes"),$(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=Vf({inputs:{input:u},backend:n,attrs:{dim:o}});return a.push(h),h}),c=ck({inputs:l,backend:n,attrs:{axis:o}});return a.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}const EY={kernelName:ih,backendName:"webgl",kernelFunc:TY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RY{constructor(e,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((c,u)=>c[0]+e[u]+c[1]);const o=e.length,r=it(o),i=n.map(c=>c[0]).join(","),a=n.map((c,u)=>c[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DY{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,g)=>m[0]+e[g]+m[1]);const o=e.length,r=it(o),i=n.map(m=>m[0]).join(","),a=n.map((m,g)=>m[0]+e[g]).join(","),l=tn("rc",o),c=tn("source",o),u=`${l[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${u}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${u}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let m=0,g=o===1?2:4;m<g;m++)p+=`
        ${d[m]}
        if (${f}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=o===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{paddings:r,constantValue:i}=s;if(q(o.shape)===0){const c=r.map((u,h)=>u[0]+o.shape[h]+u[1]);return jl({backend:n,attrs:{shape:c,value:i,dtype:o.dtype}})}const a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DY(o.shape,r,i):new RY(o.shape,r,i),l=[[i]];return n.runWebGLProgram(a,[o],o.dtype,l)},AY={kernelName:ah,backendName:"webgl",kernelFunc:kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,_Y=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ul+`
  return result;
`,OY=jt({opSnippet:FY,packedOpSnippet:_Y}),MY={kernelName:el,backendName:"webgl",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=[],c=We(r,o.shape);let u=c;const h=xt(u,a);let d=o;h!=null&&(d=rn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=vt(u.length,a),l.push(d)),Ht("prod",u,a);let f;if(n.shouldExecuteOnCPU([d])){const p=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=Uj(d.shape,d.dtype,p,u);f=n.makeTensorInfo(g,x,m)}else{const[p,m]=Ot(d.shape,u),g=q(m),x=fe({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=hm(o.dtype),w=Fr(x,b,"prod",n);f=fe({inputs:{x:w},backend:n,attrs:{shape:p}}),l.push(x),l.push(w)}if(i){l.push(f);const p=wt(f.shape,c);f=fe({inputs:{x:f},backend:n,attrs:{shape:p}})}return l.forEach(p=>n.disposeIntermediateTensorInfo(p)),f}const PY={kernelName:ch,backendName:"webgl",kernelFunc:LY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:o,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:a}=s,l=o.map(x=>n.readSync(x.dataId)),c=o.map(x=>x.shape),u=n.readSync(r.dataId),h=n.readSync(i.dataId),[d,f,p]=Gj(l,c,u,r.shape,r.dtype,h,i.shape,a),m=d.map(x=>n.makeTensorInfo([x.length],"int32",x)),g=n.makeTensorInfo(p,r.dtype,f);return m.concat([g])}const zY={kernelName:C1,backendName:"webgl",kernelFunc:BY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(t){const{inputs:e,backend:n,attrs:s}=t,{shape:o,values:r,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=n.readSync(o.dataId),u=n.readSync(r.dataId),h=n.readSync(i.dataId),d=a.map(g=>n.readSync(g.dataId)),f=a.map(g=>g.shape),[p,m]=Hj(c,o.shape,u,r.shape,r.dtype,h,i.shape,d,f,l);return n.makeTensorInfo(p,r.dtype,m)}const VY={kernelName:$1,backendName:"webgl",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk=t=>{const{backend:e,attrs:n}=t,{start:s,stop:o,step:r,dtype:i}=n,a=jj(s,o,r,i);return e.makeTensorInfo([a.length],i,a)},UY={kernelName:Kp,backendName:"webgl",kernelFunc:Sk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY="return 1.0 / x;",HY=qe({opSnippet:GY}),jY={kernelName:tl,backendName:"webgl",kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY=rs+`
  return (x < 0.0) ? 0.0 : x;
`,qY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XY=qe({opSnippet:KY,packedOpSnippet:qY}),YY={kernelName:nl,backendName:"webgl",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY=rs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,JY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,QY=qe({opSnippet:ZY,packedOpSnippet:JY}),e7={kernelName:sl,backendName:"webgl",kernelFunc:QY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t7{constructor(e,n,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,n,s,c];const u=[o&&n>1?a-1:a,o&&s>1?l-1:l],h=[o&&n>1?n-1:n,o&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n7{constructor(e,n,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,n,s,c];const u=[o&&n>1?a-1:a,o&&s>1?l-1:l],h=[o&&n>1?n-1:n,o&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(t){const{inputs:e,backend:n,attrs:s}=t,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s,[l,c]=a,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new n7(o.shape,l,c,r,i):new t7(o.shape,l,c,r,i);return n.runWebGLProgram(u,[o],"float32")}const o7={kernelName:dh,backendName:"webgl",kernelFunc:s7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r7{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,o,r]=n,[,i,a]=e,l=[s&&i>1?o-1:o,s&&a>1?r-1:r],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,m=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(t){const{inputs:e,backend:n,attrs:s}=t,{images:o,dy:r}=e,{alignCorners:i}=s,a=new r7(r.shape,o.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}const a7={kernelName:Yp,backendName:"webgl",kernelFunc:i7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l7{constructor(e,n,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,n,s,c];const u=[o&&n>1?a-1:a,o&&s>1?l-1:l],h=[o&&n>1?n-1:n,o&&s>1?s-1:s],d=o?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c7{constructor(e,n,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,n,s,c];const u=[o&&n>1?a-1:a,o&&s>1?l-1:l],h=[o&&n>1?n-1:n,o&&s>1?s-1:s],d=o?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(t){const{inputs:e,backend:n,attrs:s}=t,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s,[l,c]=a,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new c7(o.shape,l,c,r,i):new l7(o.shape,l,c,r,i);return n.runWebGLProgram(u,[o],o.dtype)}const h7={kernelName:hh,backendName:"webgl",kernelFunc:u7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d7{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,o,r]=n,[,i,a]=e,l=[s&&i>1?o-1:o,s&&a>1?r-1:r],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,m=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(t){const{inputs:e,backend:n,attrs:s}=t,{images:o,dy:r}=e,{alignCorners:i}=s,a=new d7(r.shape,o.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}const p7={kernelName:Xp,backendName:"webgl",kernelFunc:f7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m7{constructor(e,n){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const o=a=>n.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,r=e.map((a,l)=>o(l)).join(","),i=it(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g7{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const o=tn("rc",s),r=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,a=it(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${r}){
            result.g = ${c(o.slice())};
          }
          if(${i}) {
            result.b = ${u(o.slice())};
            if(${r}) {
              result.a = ${h(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[s-1]="("+p[s-1]+" + 1)",d(p)}function u(p){return p[s-2]="("+p[s-2]+" + 1)",d(p)}function h(p){return p[s-1]="("+p[s-1]+" + 1)",p[s-2]="("+p[s-2]+" + 1)",d(p)}function d(p){const m=e.map((b,w)=>f(w,p)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(p,m){return n.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${m[p]} - 1`:`${m[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{dims:r}=s,i=o.shape.length,a=We(r,o.shape);if(i===0)return Tn({inputs:{x:o},backend:n});const l=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new g7(o.shape,a):new m7(o.shape,a);return n.runWebGLProgram(l,[o],o.dtype)}const b7={kernelName:fh,backendName:"webgl",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y7{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],o=e[2];this.outputShape=e;let r="";typeof n=="number"?r=`float outputValue = ${n.toFixed(2)};`:r=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7={kernelName:cm,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:o,fillValue:r,center:i}=e,a=n,l=new y7(s.shape,r),[c,u]=ig(i,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,I7=qe({opSnippet:v7}),C7={kernelName:ol,backendName:"webgl",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7="return inversesqrt(x);",k7=qe({opSnippet:$7,cpuKernelImpl:Kj}),S7={kernelName:rl,backendName:"webgl",kernelFunc:k7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nk{constructor(e,n,s,o,r,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=it(r.length),c=it(i.length);let u="";s===1?u="i":s===2&&(u="i, j");const h=`getIndices(${u})`;let d="";o===1?d="i":o===2&&(d="i, coords[1]");const f=`getUpdates(${d})`,p=n>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(t){const{inputs:e,backend:n,attrs:s}=t,{indices:o,updates:r}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=vl(r,o,i),d=[h/c,c];if(h===0)return n.makeTensorInfo(i,o.dtype);const f=fe({inputs:{x:o},backend:n,attrs:{shape:[l,a]}}),p=fe({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Nk(l,a,f.shape.length,p.shape.length,u,d),x=n.runWebGLProgram(g,[p,f,m],p.dtype),b=fe({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),b}const T7={kernelName:k1,backendName:"webgl",kernelFunc:N7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E7{constructor(e,n,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,a=H().getNumber("WEBGL_VERSION")===2?r:i,l=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:o,values:r}=e,{side:i}=s,a=new E7(o.shape[0],o.shape[1],r.shape[1],i),l=[[o.shape[1]]];return n.runWebGLProgram(a,[o,r],"int32",l)}const D7={kernelName:S1,backendName:"webgl",kernelFunc:R7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A7{constructor(e,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let o,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",o="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<n.length;u++)c.push(`${a[u]}`),u<e&&l.push(`${a[u]}`);o=l.join(),r=c.join()}const i=it(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(t){const{inputs:e,backend:n}=t,{condition:s,t:o,e:r}=e,i=new A7(s.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(i,[s,o,r],$n(o.dtype,r.dtype))}const _7={kernelName:ph,backendName:"webgl",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Oh};
  float scale = ${Mh};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,M7=qe({opSnippet:O7}),L7={kernelName:il,backendName:"webgl",kernelFunc:M7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7=Oi+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,B7=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,z7=qe({opSnippet:P7,packedOpSnippet:B7,cpuKernelImpl:Xj}),W7={kernelName:ul,backendName:"webgl",kernelFunc:z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,U7=qe({opSnippet:V7}),G7={kernelName:cl,backendName:"webgl",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7=Oi+`
  return sin(x);
`,j7=qe({opSnippet:H7}),K7={kernelName:al,backendName:"webgl",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,X7=qe({opSnippet:q7}),Y7={kernelName:ll,backendName:"webgl",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,J7=qe({opSnippet:Z7}),Q7={kernelName:hl,backendName:"webgl",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eZ=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{blockShape:r,paddings:i}=s;$(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,b)=>x*b),l=[[0,0]];l.push(...i);for(let x=1+r.length;x<o.shape.length;++x)l.push([0,0]);const c=[],u=kk({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),h=Nl(u.shape,r,a,!1),d=Tl(h.length,r.length,!1),f=El(u.shape,r,a,!1),p=fe({inputs:{x:u},backend:n,attrs:{shape:h}}),m=rn({inputs:{x:p},backend:n,attrs:{perm:d}}),g=fe({inputs:{x:m},backend:n,attrs:{shape:f}});return c.push(u),c.push(p),c.push(m),c.forEach(x=>n.disposeIntermediateTensorInfo(x)),g},tZ={kernelName:xh,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(t){const{inputs:e,backend:n}=t,{indices:s,values:o,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=n.readSync(s.dataId),l=n.readSync(o.dataId),c=n.readSync(r.dataId),u=n.readSync(i.dataId)[0],[h,d,f,p,m]=Zj(a,s.shape,s.dtype,l,o.dtype,c,u);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],o.dtype,f),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const sZ={kernelName:Zp,backendName:"webgl",kernelFunc:nZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oZ(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.readSync(o.dataId)),a=n.readSync(s.dataId),l=Array.from(n.readSync(r.dataId)),[c,u,h]=Jj(a,s.shape,s.dtype,i,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const rZ={kernelName:Jp,backendName:"webgl",kernelFunc:oZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(t){const{inputs:e,backend:n}=t,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=n.readSync(s.dataId),a=n.readSync(o.dataId),l=n.readSync(r.dataId),[c,u]=Y$(i,s.shape,s.dtype,a,l,!0);return n.makeTensorInfo(u,s.dtype,c)}const aZ={kernelName:Qp,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(t){const{inputs:e,backend:n}=t,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=n.readSync(s.dataId),a=n.readSync(o.dataId),l=n.readSync(r.dataId),[c,u]=Y$(i,s.shape,s.dtype,a,l);return n.makeTensorInfo(u,s.dtype,c)}const cZ={kernelName:em,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uZ(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:o,sparseValues:r,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=vl(r,o,a),f=!1;if(r.dtype==="string"){const x=n.bufferSync(o),b=n.bufferSync(r),w=bo(n.readSync(i.dataId)[0]),y=qj(x,b,a,d,u,c,l,h,w,f);return n.makeTensorInfo(a,y.dtype,y.values)}const p=new Nk(c,l,o.shape.length,r.shape.length,h,[d,1],f),m=n.runWebGLProgram(p,[r,o,i],r.dtype),g=fe({inputs:{x:m},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(m),g}const hZ={kernelName:N1,backendName:"webgl",kernelFunc:uZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{numOrSizeSplits:r,axis:i}=s,a=We(i,o.shape)[0],l=vg(o,r,a),c=o.shape.length,u=new Array(c).fill(0),h=o.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=Mi({inputs:{x:o},backend:n,attrs:{begin:u,size:f}});return u[a]+=d,p})}const fZ={kernelName:bh,backendName:"webgl",kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0="return sqrt(x);",pZ=qe({opSnippet:L0,packedOpSnippet:L0,cpuKernelImpl:Qj}),mZ={kernelName:dl,backendName:"webgl",kernelFunc:pZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ="return x * x;",xZ=qe({opSnippet:gZ}),bZ={kernelName:tm,backendName:"webgl",kernelFunc:xZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P0="return (a - b) * (a - b);",yZ=jt({opSnippet:P0,packedOpSnippet:P0}),wZ={kernelName:fl,backendName:"webgl",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ({inputs:t,attrs:e,backend:n}){const{x:s}=t,o=rs+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new qs(s.shape,o);return n.runWebGLProgram(r,[s],s.dtype)}const IZ={kernelName:bl,backendName:"webgl",kernelFunc:vZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(e,n,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,r=it(s.length),i=it(s.length);let a="";if(o===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Z(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{begin:r,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=Im(o.shape,r,i,a,l,c,u,h,d);let v;if(m)v=fe({inputs:{x:o},backend:n,attrs:{shape:p}});else if(g||x){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const C=ym(b,w,y),k=Mi({inputs:{x:o},backend:n,attrs:{begin:b,size:C}});v=fe({inputs:{x:k},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(k)}else if(n.shouldExecuteOnCPU([o])){const k=n.readSync(o.dataId),N=ze(o.shape,o.dtype,k),T=eK(f,N,y,b);v=n.makeTensorInfo(p,o.dtype,T.values)}else{const k=new CZ(b,y,f);v=n.runWebGLProgram(k,[o],o.dtype)}const I=fe({inputs:{x:v},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(v),I}const kZ={kernelName:nm,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(t){const{inputs:e,backend:n,attrs:s}=t,{separator:o,nGramWidths:r,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=n.readSync(u.dataId),f=n.readSync(h.dataId),[p,m]=tK(d,f,o,r,i,a,l,c);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}const NZ={kernelName:sm,backendName:"webgl",kernelFunc:SZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:o}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=n.readSync(r.dataId),l=n.readSync(i.dataId)[0],[c,u,h]=nK(a,l,o),d=u.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const EZ={kernelName:om,backendName:"webgl",kernelFunc:TZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RZ(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(r.dataId),a=sK(i,o);return n.makeTensorInfo(r.shape,"int32",a)}const DZ={kernelName:rm,backendName:"webgl",kernelFunc:RZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ="return tan(x);",FZ=qe({opSnippet:AZ}),_Z={kernelName:ml,backendName:"webgl",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,MZ=qe({opSnippet:OZ}),LZ={kernelName:gl,backendName:"webgl",kernelFunc:MZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PZ{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*n[i];this.outputShape=s,this.rank=s.length;const o=it(this.rank),r=BZ(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function BZ(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<t.length;o++)s.push(`imod(${n[o]}, ${t[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{reps:r}=s;if(o.dtype==="string"||o.shape.length>5){const l=n.readSync(o.dataId),c=o.dtype==="string"?l.map(d=>bo(d)):l,u=ze(o.shape,o.dtype,c),h=rK(u,r);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new PZ(o.shape,r);return n.runWebGLProgram(i,[o],o.dtype)}const zZ={kernelName:xl,backendName:"webgl",kernelFunc:Tk};class WZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class VZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function B0(t){let e=1;for(;e<t;)e*=2;return e}function UZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:o}=e,{k:r,sorted:i}=s,a=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=o.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([o])||u<a||r>l){const T=n.readSync(o.dataId),[A,L]=iK(T,c,o.dtype,r,i);return[n.makeTensorInfo(A.shape,A.dtype,A.values),n.makeTensorInfo(L.shape,L.dtype,L.values)]}if(r===0)return c[c.length-1]=0,[n.makeTensorInfo(c,o.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[o,jl({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(o.dataId),d=h!==null&&h.isPacked,f=d?n.unpackTensor(o):o,m=q(c)/u,g=fe({inputs:{x:f},attrs:{shape:[m,u]},backend:n});d&&Wo(n,f);const x=B0(r),b=B0(u);let w=null;const y=()=>w===null?[g,g]:[g,w],v=(T,A,L)=>{const z=y(),U=new WZ(L),B=[[u],[w===null?1:0],[Number.NEGATIVE_INFINITY],[T],[A]],j=w;w=n.runWebGLProgram(U,z,"int32",B),Wo(n,j)};for(let T=1;T<x;T*=2){const A=T*2;for(let L=T;L>=1;L/=2)v(A,L,[m,b])}for(let T=b;T>x;T/=2){const A=y(),L=new VZ([m,T/2]),U=[[u],[w===null?1:0],[x]],V=w;w=n.runWebGLProgram(L,A,"int32",U),Wo(n,V);const B=x/2,j=B*2;for(let P=B;P>=1;P/=2)v(j,P,w.shape)}let I=w;w=Mi({inputs:{x:w},backend:n,attrs:{begin:0,size:[m,r]}}),Wo(n,I);let C=yk({inputs:{x:g,indices:w},backend:n,attrs:{axis:1,batchDims:1}});Wo(n,g);const k=c.slice(0,-1);k.push(r),I=w,w=fe({inputs:{x:w},attrs:{shape:k},backend:n}),Wo(n,I);const N=C;return C=fe({inputs:{x:C},attrs:{shape:k},backend:n}),Wo(n,N),[C,w]}const GZ={kernelName:im,backendName:"webgl",kernelFunc:UZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HZ{constructor(e,n,s,o,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jZ(t){const{inputs:e,backend:n,attrs:s}=t,{image:o,transforms:r}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,f]=o.shape,[p,m]=c!=null?c:[h,d],g=[u,p,m,f],x=new HZ(h,d,i,a,l,g);return n.runWebGLProgram(x,[o,r],"float32")}const KZ={kernelName:am,backendName:"webgl",kernelFunc:jZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(t){const{inputs:e,attrs:n,backend:s}=t,{axis:o}=n,{x:r}=e;Wl(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=aK(i,o,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const XZ={kernelName:lm,backendName:"webgl",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YZ(t){const{inputs:e,backend:n,attrs:s}=t,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o,a=i.shape.length,l=o.shape[r],c=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==r&&(c[u++]=i.shape[m]);const h=[],d=new Array(a).fill(0),f=i.shape.slice();f[r]=1;const p=new Array(l);for(let m=0;m<p.length;m++){d[r]=m;const g=Mi({inputs:{x:i},backend:n,attrs:{begin:d,size:f}}),x=fe({inputs:{x:g},backend:n,attrs:{shape:c}});p[m]=x,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),p}const ZZ={kernelName:wh,backendName:"webgl",kernelFunc:YZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JZ{constructor(e,n){this.variableNames=["x","segmentIds"];const s=e.windowSize,o=e.batchSize,r=e.inSize,i=e.numSegments,a=i*Math.ceil(r/s);this.outputShape=[o,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:o,segmentIds:r}=e,{numSegments:i}=s,a=o.shape.length,l=[];let c=0;const u=xt([c],a);let h=o;u!=null&&(h=rn({inputs:{x:o},backend:n,attrs:{perm:u}}),l.push(h),c=vt(1,a)[0]);const d=xv(h.shape,c,i),f=q([h.shape[c]]),p=fe({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(p);const m=hm(o.dtype),g=(y,v,I,C,k)=>{const N=y.shape[0],T=y.shape[1],A=gv(T,k),L={windowSize:A,inSize:T,batchSize:N,numSegments:k},z=new JZ(L,v),U=n.compileAndRun(z,[y,I],C);if(l.push(U),U.shape[1]===k)return U;const V=Sk({backend:n,attrs:{start:0,stop:k,step:1,dtype:"float32"}}),B=Tk({inputs:{x:V},backend:n,attrs:{reps:[T/A]}});return l.push(V),l.push(B),g(U,v,B,C,k)},x=g(p,"unsortedSegmentSum",r,m,i),b=fe({inputs:{x},backend:n,attrs:{shape:d}});let w=b;if(u!=null){l.push(b);const y=To(u);w=rn({inputs:{x:w},backend:n,attrs:{perm:y}})}return l.forEach(y=>n.disposeIntermediateTensorInfo(y)),w}const eJ={kernelName:vh,backendName:"webgl",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ=[JK,e6,s6,i6,l6,h6,f6,m6,y6,v6,$6,N6,R6,_6,L6,B6,W6,H6,K6,X6,Q6,iq,lq,uq,gq,bq,Iq,OK,kq,Rq,_q,zq,Vq,Gq,jq,qq,Zq,eX,sX,rX,aX,cX,dX,pX,bX,wX,CX,SX,TX,AX,MX,zX,UX,jX,KX,XX,ZX,QX,t5,s5,a5,u5,f5,m5,b5,v5,k5,E5,_K,D5,Tq,_5,L5,z5,LK,G5,q5,Y5,e8,s8,a8,u8,p8,b8,v8,C8,N8,E8,D8,O8,L8,B8,W8,U8,K8,Z8,tY,cY,zK,fY,gY,yY,IY,dq,kY,NY,EY,AY,MY,BK,PY,zY,VY,UY,fq,rY,jY,YY,e7,VK,o7,a7,h7,p7,b7,w7,C7,S7,T7,D7,_7,L7,W7,G7,K7,Y7,oq,aY,Q7,tZ,sZ,rZ,aZ,cZ,hZ,fZ,mZ,bZ,wZ,IZ,kZ,NZ,EZ,DZ,iY,XK,_Z,LZ,zZ,GZ,KZ,YK,XZ,ZZ,eJ,SY];for(const t of tJ)E1(t);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nJ{constructor(e){Lt(this,"numClasses");Lt(this,"xs");Lt(this,"ys");this.numClasses=e,this.xs=null,this.ys=null}addExample(e,n){const s=W(()=>mm(sn([n]).toInt(),this.numClasses));if(this.xs===null||this.ys===null)this.xs=Cn(e),this.ys=Cn(s);else{const o=this.xs;this.xs=Cn(o.concat(e,0));const r=this.ys;this.ys=Cn(r.concat(s,0)),o.dispose(),r.dispose(),s.dispose()}}}async function sJ(){const t=await D3("https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json"),e=t.getLayer("conv_pw_13_relu");return E3({inputs:t.inputs,outputs:e.output})}async function oJ(t,e,n){if(!t.xs||!t.ys)throw new Error("Add some examples before training!");if(!e)throw new Error("truncatedModel not exist");const s=R3({layers:[G3({inputShape:e.outputs[0].shape.slice(1)}),o0({units:n.units,activation:"relu",kernelInitializer:"varianceScaling",useBias:!0}),o0({units:n.classnum,kernelInitializer:"varianceScaling",useBias:!1,activation:"softmax"})]}),o=Go.adam(n.learningRate);s.compile({optimizer:o,loss:"categoricalCrossentropy"});const r=Math.min(t.xs.shape[0],n.batchSize);if(!(r>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction.");return s.fit(t.xs,t.ys,{batchSize:r,epochs:n.epochs,callbacks:{onBatchEnd:async(i,a)=>{n.status=`Loss: ${a.loss.toFixed(5)}`},onTrainBegin:()=>{n.status="training"},onTrainEnd:()=>{n.status+=" train finished"}}}),s}function z0(t){const e=W(()=>t.expandDims(0).toFloat().div(127).sub(1));return t.dispose(),e}async function rJ(t,e,n){const s=t.predict(n),o=e.predict(s);if(o instanceof ht)return(await o.as1D().argMax().data())[0]}const _r=t=>(gy("data-v-c7559900"),t=t(),xy(),t),iJ={class:"m-2"},aJ=_r(()=>Ee("p",{class:"text-2xl"}," current browser doesn't support webcam ",-1)),lJ=[aJ],cJ={class:"text-center"},uJ=_r(()=>Ee("p",{class:"text-xl"}," load model.... ",-1)),hJ=[uJ],dJ={class:"text-lg"},fJ={class:"text-lg"},pJ={class:"grid grid-cols-2"},mJ=_r(()=>Ee("label",{class:"text-lg"},"Units",-1)),gJ=_r(()=>Ee("label",{class:"text-lg"},"LearningRate",-1)),xJ=_r(()=>Ee("label",{class:"text-lg"},"BatchSize",-1)),bJ=_r(()=>Ee("label",{class:"text-lg"},"Epochs",-1)),yJ={class:"grid grid-cols-2 justify-items-center my-2"},wJ=["disabled"],vJ=["onMousedown"],IJ=_r(()=>Ee("label",null,"count:",-1)),CJ=["id"],$J=gu({__name:"WebcamNN",setup(t){const e=An(null),n=An(null);let s=null,o=null,r=null;const i=An(!1),a=An(!1),l=An(!1);let c=!1;const u=An(""),h={up:{val:Gn.UP,count:0},down:{val:Gn.DOWN,count:0},left:{val:Gn.LEFT,count:0},right:{val:Gn.RIGHT,count:0},click:{val:Gn.CLICK,count:0}},d=An({units:50,learningRate:.01,batchSize:10,epochs:20,classnum:Object.keys(h).length,status:""}),f=new nJ(d.value.classnum),{proxy:p}=My(),m=p.$mitt;m.on("gameStatusChange",N=>{N&&l.value?w():N||y()}),Iy(async()=>{try{if(e.value){s=await cB(e.value),o=await sJ(),a.value=!0;const N=await s.capture();o.predict(N.expandDims(0)),N.dispose()}}catch(N){n.value&&(n.value.style.display="block"),console.error(N)}});async function g(N){if(s&&o){const T=await s.capture(),A=z0(T),L=o.predict(A);L instanceof ht&&(f.addExample(L,N),A.dispose())}else throw new Error("model is not ready")}let x=0;function b(){requestAnimationFrame(async N=>{if(N-x>1e3&&(x=N,o&&r&&s)){const T=await s.capture(),A=z0(T);if(A){const L=await rJ(o,r,A);L?(u.value=Gn[L],m.emit("predict",L)):console.warn("predict nothing"),A.dispose(),await Vc()}else throw new Error("error when getting image")}i&&requestAnimationFrame(b)})}function w(){d.value.status="predicting",i.value=!0,b()}function y(){d.value.status="stop",i.value=!1}async function v(){if(o)i.value=!1,I(),r=await oJ(f,o,d.value),l.value=!0;else throw new Error("model is not ready")}function I(){d.value.units=Math.ceil(+d.value.units),d.value.learningRate=Math.abs(d.value.learningRate)>1?1:Math.abs(d.value.learningRate),d.value.batchSize=Math.ceil(+d.value.batchSize),d.value.epochs=Math.ceil(+d.value.epochs)}async function C(N){c=!0;const T=document.getElementById(`total${N}`);for(;c;)await g(h[N].val),h[N].count++,T&&(T.innerText=String(h[N].count)),await Vc()}function k(){c=!1}return(N,T)=>(Pt(),en("div",null,[Ee("div",iJ,[Ee("video",{ref_key:"videoRef",ref:e,width:"224",height:"224",class:"m-auto"},null,512),Ee("div",{ref_key:"novideoRef",ref:n,style:{display:"none"}},lJ,512)]),Hs(Ee("div",cJ,hJ,512),[[Ux,!a.value]]),Hs(Ee("div",null,[Ee("div",null,[Ee("p",dJ," Training Status:"+Ns(d.value.status),1),Ee("p",fJ," Current Predict:"+Ns(u.value),1)]),Ee("div",pJ,[mJ,Hs(Ee("input",{"onUpdate:modelValue":T[0]||(T[0]=A=>d.value.units=A),type:"number"},null,512),[[Zo,d.value.units]]),gJ,Hs(Ee("input",{"onUpdate:modelValue":T[1]||(T[1]=A=>d.value.learningRate=A),type:"number"},null,512),[[Zo,d.value.learningRate]]),xJ,Hs(Ee("input",{"onUpdate:modelValue":T[2]||(T[2]=A=>d.value.batchSize=A),type:"number"},null,512),[[Zo,d.value.batchSize]]),bJ,Hs(Ee("input",{"onUpdate:modelValue":T[3]||(T[3]=A=>d.value.epochs=A),type:"number"},null,512),[[Zo,d.value.epochs]])]),Ee("div",yJ,[Ee("div",null,[Ee("button",{class:"text-red-500",onClick:v}," Train ")]),Ee("div",null,[i.value?Ec("",!0):(Pt(),en("button",{key:0,disabled:!l.value,class:"text-blue-500",onClick:w}," Predict ",8,wJ)),i.value?(Pt(),en("button",{key:1,class:"text-blue-500",onClick:y}," Stop ")):Ec("",!0)])]),Ee("div",null,[(Pt(),en(wn,null,Ld(h,(A,L)=>Ee("div",{key:L,class:"text-yellow-500 m-2 grid grid-cols-2 justify-items-center"},[Ee("button",{onMousedown:z=>C(L),onMouseup:k}," Get "+Ns(L)+" Sample ",41,vJ),Ee("div",null,[IJ,Ee("label",{id:`total${L}`},"0",8,CJ)])])),64))])],512),[[Ux,a.value]])]))}});var kJ=Iu($J,[["__scopeId","data-v-c7559900"]]);const SJ={},NJ={class:"flex justify-center items-center gap-4"};function TJ(t,e){const n=kJ,s=z2;return Pt(),en("div",NJ,[Wt(n,{class:"unableSee"}),Wt(s)])}var EJ=Iu(SJ,[["render",TJ],["__scopeId","data-v-70f2fd4c"]]);const RJ={};function DJ(t,e){const n=EJ;return Pt(),en("div",null,[Wt(n)])}var AJ=Iu(RJ,[["render",DJ]]);const dx=sT(AJ),FJ=e2();dx.component("Icon",QT);dx.config.globalProperties.$mitt=FJ;dx.mount("#app");
